// Generated from src/llvmir/LLVMIR.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { FailedPredicateException } from "antlr4ts/FailedPredicateException";
import { NotNull } from "antlr4ts/Decorators";
import { NoViableAltException } from "antlr4ts/NoViableAltException";
import { Override } from "antlr4ts/Decorators";
import { Parser } from "antlr4ts/Parser";
import { ParserRuleContext } from "antlr4ts/ParserRuleContext";
import { ParserATNSimulator } from "antlr4ts/atn/ParserATNSimulator";
import { ParseTreeListener } from "antlr4ts/tree/ParseTreeListener";
import { ParseTreeVisitor } from "antlr4ts/tree/ParseTreeVisitor";
import { RecognitionException } from "antlr4ts/RecognitionException";
import { RuleContext } from "antlr4ts/RuleContext";
//import { RuleVersion } from "antlr4ts/RuleVersion";
import { TerminalNode } from "antlr4ts/tree/TerminalNode";
import { Token } from "antlr4ts/Token";
import { TokenStream } from "antlr4ts/TokenStream";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";

import { LLVMIRListener } from "./LLVMIRListener";
import { LLVMIRVisitor } from "./LLVMIRVisitor";


export class LLVMIRParser extends Parser {
	public static readonly DIExpression = 1;
	public static readonly DIArgList = 2;
	public static readonly DIBasicType = 3;
	public static readonly DICommonBlock = 4;
	public static readonly DICompileUnit = 5;
	public static readonly DICompositeType = 6;
	public static readonly DIDerivedType = 7;
	public static readonly DIEnumerator = 8;
	public static readonly DIFile = 9;
	public static readonly DIGlobalVariable = 10;
	public static readonly DIGlobalVariableExpression = 11;
	public static readonly DIImportedEntity = 12;
	public static readonly DILabel = 13;
	public static readonly DILexicalBlock = 14;
	public static readonly DILexicalBlockFile = 15;
	public static readonly DILocalVariable = 16;
	public static readonly DILocation = 17;
	public static readonly DIMacro = 18;
	public static readonly DIMacroFile = 19;
	public static readonly DIModule = 20;
	public static readonly DINamespace = 21;
	public static readonly DIObjCProperty = 22;
	public static readonly DIStringType = 23;
	public static readonly DISubprogram = 24;
	public static readonly DISubroutineType = 25;
	public static readonly DITemplateTypeParameter = 26;
	public static readonly DITemplateValueParameter = 27;
	public static readonly GenericDINode = 28;
	public static readonly Comment = 29;
	public static readonly WhiteSpace = 30;
	public static readonly IntLit = 31;
	public static readonly FloatLit = 32;
	public static readonly StringLit = 33;
	public static readonly GlobalIdent = 34;
	public static readonly LocalIdent = 35;
	public static readonly LabelIdent = 36;
	public static readonly AttrGroupId = 37;
	public static readonly ComdatName = 38;
	public static readonly MetadataName = 39;
	public static readonly MetadataId = 40;
	public static readonly IntType = 41;
	public static readonly DwarfTag = 42;
	public static readonly DwarfAttEncoding = 43;
	public static readonly DiFlag = 44;
	public static readonly DispFlag = 45;
	public static readonly DwarfLang = 46;
	public static readonly DwarfCc = 47;
	public static readonly ChecksumKind = 48;
	public static readonly DwarfVirtuality = 49;
	public static readonly DwarfMacinfo = 50;
	public static readonly DwarfOp = 51;
	public static readonly OpFmax = 52;
	public static readonly OpFmin = 53;
	public static readonly OpMax = 54;
	public static readonly OpMin = 55;
	public static readonly OpNand = 56;
	public static readonly OpUmax = 57;
	public static readonly OpUmin = 58;
	public static readonly OpXchg = 59;
	public static readonly OpBitcast = 60;
	public static readonly OpAddrspacecast = 61;
	public static readonly OpInttoptr = 62;
	public static readonly OpIcmp = 63;
	public static readonly OpFcmp = 64;
	public static readonly OpSelect = 65;
	public static readonly OpTrunc = 66;
	public static readonly OpZext = 67;
	public static readonly OpSext = 68;
	public static readonly OpFptrunc = 69;
	public static readonly OpFpext = 70;
	public static readonly OpFptoui = 71;
	public static readonly OpFptosi = 72;
	public static readonly OpUitofp = 73;
	public static readonly OpSitofp = 74;
	public static readonly OpPtrtoint = 75;
	public static readonly OpExtractelement = 76;
	public static readonly OpInsertelement = 77;
	public static readonly OpShufflevector = 78;
	public static readonly OpShl = 79;
	public static readonly OpLshr = 80;
	public static readonly OpAshr = 81;
	public static readonly OpAnd = 82;
	public static readonly OpOr = 83;
	public static readonly OpXor = 84;
	public static readonly OpAdd = 85;
	public static readonly OpSub = 86;
	public static readonly OpMul = 87;
	public static readonly OpFneg = 88;
	public static readonly OpStore = 89;
	public static readonly OpFence = 90;
	public static readonly OpFadd = 91;
	public static readonly OpFsub = 92;
	public static readonly OpFmul = 93;
	public static readonly OpUdiv = 94;
	public static readonly OpSdiv = 95;
	public static readonly OpFdiv = 96;
	public static readonly OpUrem = 97;
	public static readonly OpSrem = 98;
	public static readonly OpFrem = 99;
	public static readonly OpExtractvalue = 100;
	public static readonly OpInsertvalue = 101;
	public static readonly OpAlloca = 102;
	public static readonly OpLoad = 103;
	public static readonly OpCmpxchg = 104;
	public static readonly OpAtomicrmw = 105;
	public static readonly OpPhi = 106;
	public static readonly OpFreeze = 107;
	public static readonly OpCall = 108;
	public static readonly OpVaArg = 109;
	public static readonly OpCatchpad = 110;
	public static readonly OpCleanuppad = 111;
	public static readonly OpRet = 112;
	public static readonly OpBr = 113;
	public static readonly OpSwitch = 114;
	public static readonly OpIndirectbr = 115;
	public static readonly OpResume = 116;
	public static readonly OpCatchret = 117;
	public static readonly OpCleanupret = 118;
	public static readonly OpUnreachable = 119;
	public static readonly OpInvoke = 120;
	public static readonly OpCallbr = 121;
	public static readonly OpCatchswitch = 122;
	public static readonly OpLandingpad = 123;
	public static readonly KwSourceFilename = 124;
	public static readonly KwTarget = 125;
	public static readonly KwDatalayout = 126;
	public static readonly KwTriple = 127;
	public static readonly KwModule = 128;
	public static readonly KwAsm = 129;
	public static readonly KwType = 130;
	public static readonly KwComdat = 131;
	public static readonly KwAny = 132;
	public static readonly KwExactmatch = 133;
	public static readonly KwLargest = 134;
	public static readonly KwNodeduplicate = 135;
	public static readonly KwSamesize = 136;
	public static readonly KwAlias = 137;
	public static readonly KwIfunc = 138;
	public static readonly KwDeclare = 139;
	public static readonly KwDefine = 140;
	public static readonly KwAttributes = 141;
	public static readonly KwUselistorder = 142;
	public static readonly KwUselistorderBb = 143;
	public static readonly KwCc = 144;
	public static readonly KwGc = 145;
	public static readonly KwPrefix = 146;
	public static readonly KwPrologue = 147;
	public static readonly KwPersonality = 148;
	public static readonly KwFrom = 149;
	public static readonly KwTo = 150;
	public static readonly KwUnwind = 151;
	public static readonly KwWithin = 152;
	public static readonly KwLabel = 153;
	public static readonly KwCaller = 154;
	public static readonly KwNoSanitizeAddress = 155;
	public static readonly KwNoSanitizeHwaddress = 156;
	public static readonly KwSanitizeAddressDyninit = 157;
	public static readonly KwSanitizeMemtag = 158;
	public static readonly KwSection = 159;
	public static readonly KwPartition = 160;
	public static readonly KwTrue = 161;
	public static readonly KwFalse = 162;
	public static readonly KwNull = 163;
	public static readonly Kwnone = 164;
	public static readonly KwC = 165;
	public static readonly KwZeroinitializer = 166;
	public static readonly KwUndef = 167;
	public static readonly KwPoison = 168;
	public static readonly KwBlockaddress = 169;
	public static readonly KwDsoLocalEquivalent = 170;
	public static readonly KwNoCfi = 171;
	public static readonly KwSideeffect = 172;
	public static readonly KwAlignstack = 173;
	public static readonly KwInteldialect = 174;
	public static readonly KwVoid = 175;
	public static readonly KwOpaque = 176;
	public static readonly KwAlign = 177;
	public static readonly KwAllockind = 178;
	public static readonly KwAllocsize = 179;
	public static readonly KwUwtable = 180;
	public static readonly KwAsync = 181;
	public static readonly KwSync = 182;
	public static readonly KwVscaleRange = 183;
	public static readonly KwByref = 184;
	public static readonly KwByval = 185;
	public static readonly KwDereferenceable = 186;
	public static readonly KwDereferenceableOrNull = 187;
	public static readonly KwElementtype = 188;
	public static readonly KwInalloca = 189;
	public static readonly KwAllocalign = 190;
	public static readonly KwAllocptr = 191;
	public static readonly KwImmarg = 192;
	public static readonly KwInreg = 193;
	public static readonly KwNest = 194;
	public static readonly KwNoalias = 195;
	public static readonly KwNocapture = 196;
	public static readonly KwNofree = 197;
	public static readonly KwNonnull = 198;
	public static readonly KwNoundef = 199;
	public static readonly KwReadnone = 200;
	public static readonly KwReadonly = 201;
	public static readonly KwReturned = 202;
	public static readonly KwSignext = 203;
	public static readonly KwSwiftasync = 204;
	public static readonly KwSwifterror = 205;
	public static readonly KwSwiftself = 206;
	public static readonly KwWriteonly = 207;
	public static readonly KwZeroext = 208;
	public static readonly KwPreallocated = 209;
	public static readonly KwSret = 210;
	public static readonly KwX = 211;
	public static readonly KwVscale = 212;
	public static readonly KwX86Mmx = 213;
	public static readonly KwToken = 214;
	public static readonly KwPtr = 215;
	public static readonly KwAddrspace = 216;
	public static readonly KwThreadLocal = 217;
	public static readonly KwMetadata = 218;
	public static readonly KwGetelementptr = 219;
	public static readonly KwInrange = 220;
	public static readonly KwExact = 221;
	public static readonly KwVolatile = 222;
	public static readonly KwAtomic = 223;
	public static readonly KwSyncscope = 224;
	public static readonly KwWeak = 225;
	public static readonly KwMusttail = 226;
	public static readonly KwNotail = 227;
	public static readonly KwTail = 228;
	public static readonly KwCleanup = 229;
	public static readonly KwCatch = 230;
	public static readonly KwFilter = 231;
	public static readonly KwExternWeak = 232;
	public static readonly KwExternal = 233;
	public static readonly KwAppending = 234;
	public static readonly KwAvailableExternally = 235;
	public static readonly KwCommon = 236;
	public static readonly KwInternal = 237;
	public static readonly KwLinkonce = 238;
	public static readonly KwLinkonceOdr = 239;
	public static readonly KwPrivate = 240;
	public static readonly KwWeakOdr = 241;
	public static readonly KwDsoLocal = 242;
	public static readonly KwDsoPreemptable = 243;
	public static readonly Kwdefault = 244;
	public static readonly KwHidden = 245;
	public static readonly KwProtected = 246;
	public static readonly KwDllexport = 247;
	public static readonly KwDllimport = 248;
	public static readonly KwInitialexec = 249;
	public static readonly KwLocaldynamic = 250;
	public static readonly KwLocalexec = 251;
	public static readonly KwLocalUnnamedAddr = 252;
	public static readonly KwUnnamedAddr = 253;
	public static readonly KwExternallyInitialized = 254;
	public static readonly KwConstant = 255;
	public static readonly KwGlobal = 256;
	public static readonly KwAlwaysinline = 257;
	public static readonly KwArgmemonly = 258;
	public static readonly KwBuiltin = 259;
	public static readonly KwCold = 260;
	public static readonly KwConvergent = 261;
	public static readonly KwDisableSanitizerInstrumentation = 262;
	public static readonly KwFnRetThunkExtern = 263;
	public static readonly KwHot = 264;
	public static readonly KwInaccessiblememOrArgmemonly = 265;
	public static readonly KwInaccessiblememonly = 266;
	public static readonly KwInlinehint = 267;
	public static readonly KwJumptable = 268;
	public static readonly KwMinsize = 269;
	public static readonly KwMustprogress = 270;
	public static readonly KwNaked = 271;
	public static readonly KwNobuiltin = 272;
	public static readonly KwNocallback = 273;
	public static readonly KwNocfCheck = 274;
	public static readonly KwNoduplicate = 275;
	public static readonly KwNoimplicitfloat = 276;
	public static readonly KwNoinline = 277;
	public static readonly KwNomerge = 278;
	public static readonly KwNonlazybind = 279;
	public static readonly KwNoprofile = 280;
	public static readonly KwNorecurse = 281;
	public static readonly KwNoredzone = 282;
	public static readonly KwNoreturn = 283;
	public static readonly KwNosanitizeBounds = 284;
	public static readonly KwNosanitizeCoverage = 285;
	public static readonly KwNosync = 286;
	public static readonly KwNounwind = 287;
	public static readonly KwNullPointerIsValid = 288;
	public static readonly KwOptforfuzzing = 289;
	public static readonly KwOptnone = 290;
	public static readonly KwOptsize = 291;
	public static readonly KwPresplitcoroutine = 292;
	public static readonly KwReturnsTwice = 293;
	public static readonly KwSafestack = 294;
	public static readonly KwSanitizeAddress = 295;
	public static readonly KwSanitizeHwaddress = 296;
	public static readonly KwSanitizeMemory = 297;
	public static readonly KwSanitizeThread = 298;
	public static readonly KwShadowcallstack = 299;
	public static readonly KwSpeculatable = 300;
	public static readonly KwSpeculativeLoadHardening = 301;
	public static readonly KwSsp = 302;
	public static readonly KwSspreq = 303;
	public static readonly KwSspstrong = 304;
	public static readonly KwStrictfp = 305;
	public static readonly KwWillreturn = 306;
	public static readonly KwDistinct = 307;
	public static readonly KwInbounds = 308;
	public static readonly KwNsw = 309;
	public static readonly KwNuw = 310;
	public static readonly KwEq = 311;
	public static readonly KwNe = 312;
	public static readonly KwSge = 313;
	public static readonly KwSgt = 314;
	public static readonly KwSle = 315;
	public static readonly KwSlt = 316;
	public static readonly KwUge = 317;
	public static readonly KwUgt = 318;
	public static readonly KwUle = 319;
	public static readonly KwUlt = 320;
	public static readonly KwOeq = 321;
	public static readonly KwOge = 322;
	public static readonly KwOgt = 323;
	public static readonly KwOle = 324;
	public static readonly KwOlt = 325;
	public static readonly KwOne = 326;
	public static readonly KwOrd = 327;
	public static readonly KwUeq = 328;
	public static readonly KwUne = 329;
	public static readonly KwUno = 330;
	public static readonly KwAcqRel = 331;
	public static readonly KwAcquire = 332;
	public static readonly KwMonotonic = 333;
	public static readonly KwRelease = 334;
	public static readonly KwSeqCst = 335;
	public static readonly KwUnordered = 336;
	public static readonly KwAarch64SveVectorPcs = 337;
	public static readonly KwAarch64VectorPcs = 338;
	public static readonly KwAmdgpuCs = 339;
	public static readonly KwAmdgpuEs = 340;
	public static readonly KwAmdgpuGfx = 341;
	public static readonly KwAmdgpuGs = 342;
	public static readonly KwAmdgpuHs = 343;
	public static readonly KwAmdgpuKernel = 344;
	public static readonly KwAmdgpuLs = 345;
	public static readonly KwAmdgpuPs = 346;
	public static readonly KwAmdgpuVs = 347;
	public static readonly KwAnyregcc = 348;
	public static readonly KwArmAapcsVfpcc = 349;
	public static readonly KwArmAapcscc = 350;
	public static readonly KwArmApcscc = 351;
	public static readonly KwAvrIntrcc = 352;
	public static readonly KwAvrSignalcc = 353;
	public static readonly KwCcc = 354;
	public static readonly KwCfguardCheckcc = 355;
	public static readonly KwColdcc = 356;
	public static readonly KwCxxFastTlscc = 357;
	public static readonly KwFastcc = 358;
	public static readonly KwGhccc = 359;
	public static readonly KwHhvmCcc = 360;
	public static readonly KwHhvmcc = 361;
	public static readonly KwIntelOclBicc = 362;
	public static readonly KwMsp430Intrcc = 363;
	public static readonly KwPreserveAllcc = 364;
	public static readonly KwPreserveMostcc = 365;
	public static readonly KwPtxDevice = 366;
	public static readonly KwPtxKernel = 367;
	public static readonly KwSpirFunc = 368;
	public static readonly KwSpirKernel = 369;
	public static readonly KwSwiftcc = 370;
	public static readonly KwSwifttailcc = 371;
	public static readonly KwTailcc = 372;
	public static readonly KwWebkitJscc = 373;
	public static readonly KwWin64cc = 374;
	public static readonly KwX8664Sysvcc = 375;
	public static readonly KwX86Fastcallcc = 376;
	public static readonly KwX86Intrcc = 377;
	public static readonly KwX86Regcallcc = 378;
	public static readonly KwX86Stdcallcc = 379;
	public static readonly KwX86Thiscallcc = 380;
	public static readonly KwX86Vectorcallcc = 381;
	public static readonly KwAfn = 382;
	public static readonly KwArcp = 383;
	public static readonly KwContract = 384;
	public static readonly KwFast = 385;
	public static readonly KwNinf = 386;
	public static readonly KwNnan = 387;
	public static readonly KwNsz = 388;
	public static readonly KwReassoc = 389;
	public static readonly KwHalf = 390;
	public static readonly KwBfloat = 391;
	public static readonly KwFloat = 392;
	public static readonly KwDouble = 393;
	public static readonly KwX86Fp80 = 394;
	public static readonly KwFp128 = 395;
	public static readonly KwPpcFp128 = 396;
	public static readonly KwTagLabel = 397;
	public static readonly KwHeaderLabel = 398;
	public static readonly KwOperandsLabel = 399;
	public static readonly KwNameLabel = 400;
	public static readonly KwTypeLabel = 401;
	public static readonly KwDefaultedLabel = 402;
	public static readonly KwValueLabel = 403;
	public static readonly KwFlagsLabel = 404;
	public static readonly KwCcLabel = 405;
	public static readonly KwAlignLabel = 406;
	public static readonly KwAllocatedLabel = 407;
	public static readonly KwAnnotationsLabel = 408;
	public static readonly KwArgLabel = 409;
	public static readonly KwAssociatedLabel = 410;
	public static readonly KwAttributesLabel = 411;
	public static readonly KwBaseTypeLabel = 412;
	public static readonly KwChecksumLabel = 413;
	public static readonly KwChecksumkindLabel = 414;
	public static readonly KwColumnLabel = 415;
	public static readonly KwConfigMacrosLabel = 416;
	public static readonly KwContainingTypeLabel = 417;
	public static readonly KwCountLabel = 418;
	public static readonly KwDebugInfoForProfilingLabel = 419;
	public static readonly KwDeclarationLabel = 420;
	public static readonly KwDirectoryLabel = 421;
	public static readonly KwDiscriminatorLabel = 422;
	public static readonly KwDataLocationLabel = 423;
	public static readonly KwDwarfAddressSpaceLabel = 424;
	public static readonly KwDwoIdLabel = 425;
	public static readonly KwElementsLabel = 426;
	public static readonly KwEmissionKindLabel = 427;
	public static readonly KwDebugDirectivesOnly = 428;
	public static readonly KwFullDebug = 429;
	public static readonly KwLineTablesOnly = 430;
	public static readonly KwNoDebug = 431;
	public static readonly KwEncodingLabel = 432;
	public static readonly KwEntityLabel = 433;
	public static readonly KwEnumsLabel = 434;
	public static readonly KwExportSymbolsLabel = 435;
	public static readonly KwExprLabel = 436;
	public static readonly KwExtraDataLabel = 437;
	public static readonly KwFileLabel = 438;
	public static readonly KwFilenameLabel = 439;
	public static readonly KwGetterLabel = 440;
	public static readonly KwGlobalsLabel = 441;
	public static readonly KwIdentifierLabel = 442;
	public static readonly KwImportsLabel = 443;
	public static readonly KwIncludePathLabel = 444;
	public static readonly KwInlinedAtLabel = 445;
	public static readonly KwIsDeclLabel = 446;
	public static readonly KwIsDefinitionLabel = 447;
	public static readonly KwIsImplicitCodeLabel = 448;
	public static readonly KwIsLocalLabel = 449;
	public static readonly KwIsOptimizedLabel = 450;
	public static readonly KwIsUnsignedLabel = 451;
	public static readonly KwApinotesLabel = 452;
	public static readonly KwLanguageLabel = 453;
	public static readonly KwLineLabel = 454;
	public static readonly KwLinkageNameLabel = 455;
	public static readonly KwLowerBoundLabel = 456;
	public static readonly KwMacrosLabel = 457;
	public static readonly KwNameTableKindLabel = 458;
	public static readonly KwGNU = 459;
	public static readonly KwNone = 460;
	public static readonly KwDefault = 461;
	public static readonly KwNodesLabel = 462;
	public static readonly KwOffsetLabel = 463;
	public static readonly KwProducerLabel = 464;
	public static readonly KwRangesBaseAddressLabel = 465;
	public static readonly KwRankLabel = 466;
	public static readonly KwRetainedNodesLabel = 467;
	public static readonly KwRetainedTypesLabel = 468;
	public static readonly KwRuntimeLangLabel = 469;
	public static readonly KwRuntimeVersionLabel = 470;
	public static readonly KwScopeLabel = 471;
	public static readonly KwScopeLineLabel = 472;
	public static readonly KwSdkLabel = 473;
	public static readonly KwSetterLabel = 474;
	public static readonly KwSizeLabel = 475;
	public static readonly KwSourceLabel = 476;
	public static readonly KwSpFlagsLabel = 477;
	public static readonly KwSplitDebugFilenameLabel = 478;
	public static readonly KwSplitDebugInliningLabel = 479;
	public static readonly KwStrideLabel = 480;
	public static readonly KwStringLengthLabel = 481;
	public static readonly KwStringLengthExpressionLabel = 482;
	public static readonly KwStringLocationExpressionLabel = 483;
	public static readonly KwSysrootLabel = 484;
	public static readonly KwTargetFuncNameLabel = 485;
	public static readonly KwTemplateParamsLabel = 486;
	public static readonly KwThisAdjustmentLabel = 487;
	public static readonly KwThrownTypesLabel = 488;
	public static readonly KwTypesLabel = 489;
	public static readonly KwUnitLabel = 490;
	public static readonly KwUpperBoundLabel = 491;
	public static readonly KwVarLabel = 492;
	public static readonly KwVirtualIndexLabel = 493;
	public static readonly KwVirtualityLabel = 494;
	public static readonly KwVtableHolderLabel = 495;
	public static readonly Comma = 496;
	public static readonly SemiColon = 497;
	public static readonly Equal = 498;
	public static readonly LBraces = 499;
	public static readonly RBraces = 500;
	public static readonly Pipe = 501;
	public static readonly Exclamation = 502;
	public static readonly LParenthesis = 503;
	public static readonly RParenthesis = 504;
	public static readonly LBracket = 505;
	public static readonly RBracket = 506;
	public static readonly Ellipsis = 507;
	public static readonly LAngleBrackets = 508;
	public static readonly RAngleBrackets = 509;
	public static readonly Asterisk = 510;
	public static readonly RULE_compilationUnit = 0;
	public static readonly RULE_targetDef = 1;
	public static readonly RULE_sourceFilename = 2;
	public static readonly RULE_targetDataLayout = 3;
	public static readonly RULE_targetTriple = 4;
	public static readonly RULE_topLevelEntity = 5;
	public static readonly RULE_moduleAsm = 6;
	public static readonly RULE_typeDef = 7;
	public static readonly RULE_comdatDef = 8;
	public static readonly RULE_globalDecl = 9;
	public static readonly RULE_globalDef = 10;
	public static readonly RULE_indirectSymbolDef = 11;
	public static readonly RULE_funcDecl = 12;
	public static readonly RULE_funcDef = 13;
	public static readonly RULE_attrGroupDef = 14;
	public static readonly RULE_namedMetadataDef = 15;
	public static readonly RULE_metadataDef = 16;
	public static readonly RULE_useListOrder = 17;
	public static readonly RULE_useListOrderBB = 18;
	public static readonly RULE_funcHeader = 19;
	public static readonly RULE_indirectSymbol = 20;
	public static readonly RULE_callingConv = 21;
	public static readonly RULE_callingConvInt = 22;
	public static readonly RULE_funcHdrField = 23;
	public static readonly RULE_gc = 24;
	public static readonly RULE_prefix = 25;
	public static readonly RULE_prologue = 26;
	public static readonly RULE_personality = 27;
	public static readonly RULE_returnAttribute = 28;
	public static readonly RULE_funcBody = 29;
	public static readonly RULE_basicBlock = 30;
	public static readonly RULE_instruction = 31;
	public static readonly RULE_terminator = 32;
	public static readonly RULE_localDefTerm = 33;
	public static readonly RULE_valueTerminator = 34;
	public static readonly RULE_retTerm = 35;
	public static readonly RULE_brTerm = 36;
	public static readonly RULE_condBrTerm = 37;
	public static readonly RULE_switchTerm = 38;
	public static readonly RULE_indirectBrTerm = 39;
	public static readonly RULE_resumeTerm = 40;
	public static readonly RULE_catchRetTerm = 41;
	public static readonly RULE_cleanupRetTerm = 42;
	public static readonly RULE_unreachableTerm = 43;
	public static readonly RULE_invokeTerm = 44;
	public static readonly RULE_callBrTerm = 45;
	public static readonly RULE_catchSwitchTerm = 46;
	public static readonly RULE_label = 47;
	public static readonly RULE_case = 48;
	public static readonly RULE_unwindTarget = 49;
	public static readonly RULE_handlers = 50;
	public static readonly RULE_metadataNode = 51;
	public static readonly RULE_diExpression = 52;
	public static readonly RULE_diExpressionField = 53;
	public static readonly RULE_globalField = 54;
	public static readonly RULE_section = 55;
	public static readonly RULE_comdat = 56;
	public static readonly RULE_partition = 57;
	public static readonly RULE_constant = 58;
	public static readonly RULE_boolConst = 59;
	public static readonly RULE_intConst = 60;
	public static readonly RULE_floatConst = 61;
	public static readonly RULE_nullConst = 62;
	public static readonly RULE_noneConst = 63;
	public static readonly RULE_structConst = 64;
	public static readonly RULE_arrayConst = 65;
	public static readonly RULE_vectorConst = 66;
	public static readonly RULE_zeroInitializerConst = 67;
	public static readonly RULE_undefConst = 68;
	public static readonly RULE_poisonConst = 69;
	public static readonly RULE_blockAddressConst = 70;
	public static readonly RULE_dsoLocalEquivalentConst = 71;
	public static readonly RULE_noCFIConst = 72;
	public static readonly RULE_constantExpr = 73;
	public static readonly RULE_typeConst = 74;
	public static readonly RULE_metadataAttachment = 75;
	public static readonly RULE_mdNode = 76;
	public static readonly RULE_mdTuple = 77;
	public static readonly RULE_metadata = 78;
	public static readonly RULE_diArgList = 79;
	public static readonly RULE_typeValue = 80;
	public static readonly RULE_value = 81;
	public static readonly RULE_inlineAsm = 82;
	public static readonly RULE_mdString = 83;
	public static readonly RULE_mdFieldOrInt = 84;
	public static readonly RULE_diSPFlag = 85;
	public static readonly RULE_funcAttribute = 86;
	public static readonly RULE_type = 87;
	public static readonly RULE_voidType = 88;
	public static readonly RULE_opaqueType = 89;
	public static readonly RULE_params = 90;
	public static readonly RULE_param = 91;
	public static readonly RULE_paramAttribute = 92;
	public static readonly RULE_attrString = 93;
	public static readonly RULE_attrPair = 94;
	public static readonly RULE_align = 95;
	public static readonly RULE_alignPair = 96;
	public static readonly RULE_alignStack = 97;
	public static readonly RULE_alignStackPair = 98;
	public static readonly RULE_allocKind = 99;
	public static readonly RULE_allocSize = 100;
	public static readonly RULE_unwindTable = 101;
	public static readonly RULE_vectorScaleRange = 102;
	public static readonly RULE_byRefAttr = 103;
	public static readonly RULE_byval = 104;
	public static readonly RULE_dereferenceable = 105;
	public static readonly RULE_elementType = 106;
	public static readonly RULE_inAlloca = 107;
	public static readonly RULE_paramAttr = 108;
	public static readonly RULE_preallocated = 109;
	public static readonly RULE_structRetAttr = 110;
	public static readonly RULE_firstClassType = 111;
	public static readonly RULE_concreteType = 112;
	public static readonly RULE_intType = 113;
	public static readonly RULE_floatType = 114;
	public static readonly RULE_pointerType = 115;
	public static readonly RULE_vectorType = 116;
	public static readonly RULE_labelType = 117;
	public static readonly RULE_arrayType = 118;
	public static readonly RULE_structType = 119;
	public static readonly RULE_namedType = 120;
	public static readonly RULE_mmxType = 121;
	public static readonly RULE_tokenType = 122;
	public static readonly RULE_opaquePointerType = 123;
	public static readonly RULE_addrSpace = 124;
	public static readonly RULE_threadLocal = 125;
	public static readonly RULE_metadataType = 126;
	public static readonly RULE_bitCastExpr = 127;
	public static readonly RULE_getElementPtrExpr = 128;
	public static readonly RULE_gepIndex = 129;
	public static readonly RULE_addrSpaceCastExpr = 130;
	public static readonly RULE_intToPtrExpr = 131;
	public static readonly RULE_iCmpExpr = 132;
	public static readonly RULE_fCmpExpr = 133;
	public static readonly RULE_selectExpr = 134;
	public static readonly RULE_truncExpr = 135;
	public static readonly RULE_zExtExpr = 136;
	public static readonly RULE_sExtExpr = 137;
	public static readonly RULE_fpTruncExpr = 138;
	public static readonly RULE_fpExtExpr = 139;
	public static readonly RULE_fpToUiExpr = 140;
	public static readonly RULE_fpToSiExpr = 141;
	public static readonly RULE_uiToFpExpr = 142;
	public static readonly RULE_siToFpExpr = 143;
	public static readonly RULE_ptrToIntExpr = 144;
	public static readonly RULE_extractElementExpr = 145;
	public static readonly RULE_insertElementExpr = 146;
	public static readonly RULE_shuffleVectorExpr = 147;
	public static readonly RULE_shlExpr = 148;
	public static readonly RULE_lShrExpr = 149;
	public static readonly RULE_aShrExpr = 150;
	public static readonly RULE_andExpr = 151;
	public static readonly RULE_orExpr = 152;
	public static readonly RULE_xorExpr = 153;
	public static readonly RULE_addExpr = 154;
	public static readonly RULE_subExpr = 155;
	public static readonly RULE_mulExpr = 156;
	public static readonly RULE_fNegExpr = 157;
	public static readonly RULE_localDefInst = 158;
	public static readonly RULE_valueInstruction = 159;
	public static readonly RULE_storeInst = 160;
	public static readonly RULE_syncScope = 161;
	public static readonly RULE_fenceInst = 162;
	public static readonly RULE_fNegInst = 163;
	public static readonly RULE_addInst = 164;
	public static readonly RULE_fAddInst = 165;
	public static readonly RULE_subInst = 166;
	public static readonly RULE_fSubInst = 167;
	public static readonly RULE_mulInst = 168;
	public static readonly RULE_fMulInst = 169;
	public static readonly RULE_uDivInst = 170;
	public static readonly RULE_sDivInst = 171;
	public static readonly RULE_fDivInst = 172;
	public static readonly RULE_uRemInst = 173;
	public static readonly RULE_sRemInst = 174;
	public static readonly RULE_fRemInst = 175;
	public static readonly RULE_shlInst = 176;
	public static readonly RULE_lShrInst = 177;
	public static readonly RULE_aShrInst = 178;
	public static readonly RULE_andInst = 179;
	public static readonly RULE_orInst = 180;
	public static readonly RULE_xorInst = 181;
	public static readonly RULE_extractElementInst = 182;
	public static readonly RULE_insertElementInst = 183;
	public static readonly RULE_shuffleVectorInst = 184;
	public static readonly RULE_extractValueInst = 185;
	public static readonly RULE_insertValueInst = 186;
	public static readonly RULE_allocaInst = 187;
	public static readonly RULE_loadInst = 188;
	public static readonly RULE_cmpXchgInst = 189;
	public static readonly RULE_atomicRMWInst = 190;
	public static readonly RULE_getElementPtrInst = 191;
	public static readonly RULE_truncInst = 192;
	public static readonly RULE_zExtInst = 193;
	public static readonly RULE_sExtInst = 194;
	public static readonly RULE_fpTruncInst = 195;
	public static readonly RULE_fpExtInst = 196;
	public static readonly RULE_fpToUiInst = 197;
	public static readonly RULE_fpToSiInst = 198;
	public static readonly RULE_uiToFpInst = 199;
	public static readonly RULE_siToFpInst = 200;
	public static readonly RULE_ptrToIntInst = 201;
	public static readonly RULE_intToPtrInst = 202;
	public static readonly RULE_bitCastInst = 203;
	public static readonly RULE_addrSpaceCastInst = 204;
	public static readonly RULE_iCmpInst = 205;
	public static readonly RULE_fCmpInst = 206;
	public static readonly RULE_phiInst = 207;
	public static readonly RULE_selectInst = 208;
	public static readonly RULE_freezeInst = 209;
	public static readonly RULE_callInst = 210;
	public static readonly RULE_vaargInst = 211;
	public static readonly RULE_landingPadInst = 212;
	public static readonly RULE_catchPadInst = 213;
	public static readonly RULE_cleanupPadInst = 214;
	public static readonly RULE_inc = 215;
	public static readonly RULE_operandBundle = 216;
	public static readonly RULE_clause = 217;
	public static readonly RULE_args = 218;
	public static readonly RULE_arg = 219;
	public static readonly RULE_exceptionArg = 220;
	public static readonly RULE_exceptionPad = 221;
	public static readonly RULE_externalLinkage = 222;
	public static readonly RULE_internalLinkage = 223;
	public static readonly RULE_linkage = 224;
	public static readonly RULE_preemption = 225;
	public static readonly RULE_visibility = 226;
	public static readonly RULE_dllStorageClass = 227;
	public static readonly RULE_tlsModel = 228;
	public static readonly RULE_unnamedAddr = 229;
	public static readonly RULE_externallyInitialized = 230;
	public static readonly RULE_immutable = 231;
	public static readonly RULE_funcAttr = 232;
	public static readonly RULE_distinct = 233;
	public static readonly RULE_inBounds = 234;
	public static readonly RULE_returnAttr = 235;
	public static readonly RULE_overflowFlag = 236;
	public static readonly RULE_iPred = 237;
	public static readonly RULE_fPred = 238;
	public static readonly RULE_atomicOrdering = 239;
	public static readonly RULE_callingConvEnum = 240;
	public static readonly RULE_fastMathFlag = 241;
	public static readonly RULE_atomicOp = 242;
	public static readonly RULE_floatKind = 243;
	public static readonly RULE_specializedMDNode = 244;
	public static readonly RULE_diBasicType = 245;
	public static readonly RULE_diCommonBlock = 246;
	public static readonly RULE_diCompileUnit = 247;
	public static readonly RULE_diCompositeType = 248;
	public static readonly RULE_diCompositeTypeField = 249;
	public static readonly RULE_diDerivedType = 250;
	public static readonly RULE_diDerivedTypeField = 251;
	public static readonly RULE_diEnumerator = 252;
	public static readonly RULE_diEnumeratorField = 253;
	public static readonly RULE_diFile = 254;
	public static readonly RULE_diFileField = 255;
	public static readonly RULE_diGlobalVariable = 256;
	public static readonly RULE_diGlobalVariableField = 257;
	public static readonly RULE_diGlobalVariableExpression = 258;
	public static readonly RULE_diGlobalVariableExpressionField = 259;
	public static readonly RULE_diImportedEntity = 260;
	public static readonly RULE_diImportedEntityField = 261;
	public static readonly RULE_diLabel = 262;
	public static readonly RULE_diLabelField = 263;
	public static readonly RULE_diLexicalBlock = 264;
	public static readonly RULE_diLexicalBlockField = 265;
	public static readonly RULE_diLexicalBlockFile = 266;
	public static readonly RULE_diLexicalBlockFileField = 267;
	public static readonly RULE_diLocalVariable = 268;
	public static readonly RULE_diLocalVariableField = 269;
	public static readonly RULE_diLocation = 270;
	public static readonly RULE_diLocationField = 271;
	public static readonly RULE_diMacro = 272;
	public static readonly RULE_diMacroField = 273;
	public static readonly RULE_diMacroFile = 274;
	public static readonly RULE_diMacroFileField = 275;
	public static readonly RULE_diModule = 276;
	public static readonly RULE_diModuleField = 277;
	public static readonly RULE_diNamespace = 278;
	public static readonly RULE_diNamespaceField = 279;
	public static readonly RULE_diObjCProperty = 280;
	public static readonly RULE_diObjCPropertyField = 281;
	public static readonly RULE_diStringType = 282;
	public static readonly RULE_diStringTypeField = 283;
	public static readonly RULE_diSubprogram = 284;
	public static readonly RULE_diSubprogramField = 285;
	public static readonly RULE_diSubrange = 286;
	public static readonly RULE_diSubrangeField = 287;
	public static readonly RULE_diSubroutineType = 288;
	public static readonly RULE_diTemplateTypeParameter = 289;
	public static readonly RULE_diTemplateValueParameter = 290;
	public static readonly RULE_genericDiNode = 291;
	public static readonly RULE_diTemplateTypeParameterField = 292;
	public static readonly RULE_diCompileUnitField = 293;
	public static readonly RULE_diCommonBlockField = 294;
	public static readonly RULE_diBasicTypeField = 295;
	public static readonly RULE_genericDINodeField = 296;
	public static readonly RULE_tagField = 297;
	public static readonly RULE_headerField = 298;
	public static readonly RULE_operandsField = 299;
	public static readonly RULE_diTemplateValueParameterField = 300;
	public static readonly RULE_nameField = 301;
	public static readonly RULE_typeField = 302;
	public static readonly RULE_defaultedField = 303;
	public static readonly RULE_valueField = 304;
	public static readonly RULE_mdField = 305;
	public static readonly RULE_diSubroutineTypeField = 306;
	public static readonly RULE_flagsField = 307;
	public static readonly RULE_diFlags = 308;
	public static readonly RULE_ccField = 309;
	public static readonly RULE_alignField = 310;
	public static readonly RULE_allocatedField = 311;
	public static readonly RULE_annotationsField = 312;
	public static readonly RULE_argField = 313;
	public static readonly RULE_associatedField = 314;
	public static readonly RULE_attributesField = 315;
	public static readonly RULE_baseTypeField = 316;
	public static readonly RULE_checksumField = 317;
	public static readonly RULE_checksumkindField = 318;
	public static readonly RULE_columnField = 319;
	public static readonly RULE_configMacrosField = 320;
	public static readonly RULE_containingTypeField = 321;
	public static readonly RULE_countField = 322;
	public static readonly RULE_debugInfoForProfilingField = 323;
	public static readonly RULE_declarationField = 324;
	public static readonly RULE_directoryField = 325;
	public static readonly RULE_discriminatorField = 326;
	public static readonly RULE_dataLocationField = 327;
	public static readonly RULE_discriminatorIntField = 328;
	public static readonly RULE_dwarfAddressSpaceField = 329;
	public static readonly RULE_dwoIdField = 330;
	public static readonly RULE_elementsField = 331;
	public static readonly RULE_emissionKindField = 332;
	public static readonly RULE_encodingField = 333;
	public static readonly RULE_entityField = 334;
	public static readonly RULE_enumsField = 335;
	public static readonly RULE_exportSymbolsField = 336;
	public static readonly RULE_exprField = 337;
	public static readonly RULE_extraDataField = 338;
	public static readonly RULE_fileField = 339;
	public static readonly RULE_filenameField = 340;
	public static readonly RULE_flagsStringField = 341;
	public static readonly RULE_getterField = 342;
	public static readonly RULE_globalsField = 343;
	public static readonly RULE_identifierField = 344;
	public static readonly RULE_importsField = 345;
	public static readonly RULE_includePathField = 346;
	public static readonly RULE_inlinedAtField = 347;
	public static readonly RULE_isDeclField = 348;
	public static readonly RULE_isDefinitionField = 349;
	public static readonly RULE_isImplicitCodeField = 350;
	public static readonly RULE_isLocalField = 351;
	public static readonly RULE_isOptimizedField = 352;
	public static readonly RULE_isUnsignedField = 353;
	public static readonly RULE_apiNotesField = 354;
	public static readonly RULE_languageField = 355;
	public static readonly RULE_lineField = 356;
	public static readonly RULE_linkageNameField = 357;
	public static readonly RULE_lowerBoundField = 358;
	public static readonly RULE_macrosField = 359;
	public static readonly RULE_nameTableKindField = 360;
	public static readonly RULE_nodesField = 361;
	public static readonly RULE_offsetField = 362;
	public static readonly RULE_producerField = 363;
	public static readonly RULE_rangesBaseAddressField = 364;
	public static readonly RULE_rankField = 365;
	public static readonly RULE_retainedNodesField = 366;
	public static readonly RULE_retainedTypesField = 367;
	public static readonly RULE_runtimeLangField = 368;
	public static readonly RULE_runtimeVersionField = 369;
	public static readonly RULE_scopeField = 370;
	public static readonly RULE_scopeLineField = 371;
	public static readonly RULE_sdkField = 372;
	public static readonly RULE_setterField = 373;
	public static readonly RULE_sizeField = 374;
	public static readonly RULE_sourceField = 375;
	public static readonly RULE_spFlagsField = 376;
	public static readonly RULE_splitDebugFilenameField = 377;
	public static readonly RULE_splitDebugInliningField = 378;
	public static readonly RULE_strideField = 379;
	public static readonly RULE_stringLengthField = 380;
	public static readonly RULE_stringLengthExpressionField = 381;
	public static readonly RULE_stringLocationExpressionField = 382;
	public static readonly RULE_sysrootField = 383;
	public static readonly RULE_targetFuncNameField = 384;
	public static readonly RULE_templateParamsField = 385;
	public static readonly RULE_thisAdjustmentField = 386;
	public static readonly RULE_thrownTypesField = 387;
	public static readonly RULE_typeMacinfoField = 388;
	public static readonly RULE_typesField = 389;
	public static readonly RULE_unitField = 390;
	public static readonly RULE_upperBoundField = 391;
	public static readonly RULE_valueIntField = 392;
	public static readonly RULE_valueStringField = 393;
	public static readonly RULE_varField = 394;
	public static readonly RULE_virtualIndexField = 395;
	public static readonly RULE_virtualityField = 396;
	public static readonly RULE_vtableHolderField = 397;
	// tslint:disable:no-trailing-whitespace
	public static readonly ruleNames: string[] = [
		"compilationUnit", "targetDef", "sourceFilename", "targetDataLayout", 
		"targetTriple", "topLevelEntity", "moduleAsm", "typeDef", "comdatDef", 
		"globalDecl", "globalDef", "indirectSymbolDef", "funcDecl", "funcDef", 
		"attrGroupDef", "namedMetadataDef", "metadataDef", "useListOrder", "useListOrderBB", 
		"funcHeader", "indirectSymbol", "callingConv", "callingConvInt", "funcHdrField", 
		"gc", "prefix", "prologue", "personality", "returnAttribute", "funcBody", 
		"basicBlock", "instruction", "terminator", "localDefTerm", "valueTerminator", 
		"retTerm", "brTerm", "condBrTerm", "switchTerm", "indirectBrTerm", "resumeTerm", 
		"catchRetTerm", "cleanupRetTerm", "unreachableTerm", "invokeTerm", "callBrTerm", 
		"catchSwitchTerm", "label", "case", "unwindTarget", "handlers", "metadataNode", 
		"diExpression", "diExpressionField", "globalField", "section", "comdat", 
		"partition", "constant", "boolConst", "intConst", "floatConst", "nullConst", 
		"noneConst", "structConst", "arrayConst", "vectorConst", "zeroInitializerConst", 
		"undefConst", "poisonConst", "blockAddressConst", "dsoLocalEquivalentConst", 
		"noCFIConst", "constantExpr", "typeConst", "metadataAttachment", "mdNode", 
		"mdTuple", "metadata", "diArgList", "typeValue", "value", "inlineAsm", 
		"mdString", "mdFieldOrInt", "diSPFlag", "funcAttribute", "type", "voidType", 
		"opaqueType", "params", "param", "paramAttribute", "attrString", "attrPair", 
		"align", "alignPair", "alignStack", "alignStackPair", "allocKind", "allocSize", 
		"unwindTable", "vectorScaleRange", "byRefAttr", "byval", "dereferenceable", 
		"elementType", "inAlloca", "paramAttr", "preallocated", "structRetAttr", 
		"firstClassType", "concreteType", "intType", "floatType", "pointerType", 
		"vectorType", "labelType", "arrayType", "structType", "namedType", "mmxType", 
		"tokenType", "opaquePointerType", "addrSpace", "threadLocal", "metadataType", 
		"bitCastExpr", "getElementPtrExpr", "gepIndex", "addrSpaceCastExpr", "intToPtrExpr", 
		"iCmpExpr", "fCmpExpr", "selectExpr", "truncExpr", "zExtExpr", "sExtExpr", 
		"fpTruncExpr", "fpExtExpr", "fpToUiExpr", "fpToSiExpr", "uiToFpExpr", 
		"siToFpExpr", "ptrToIntExpr", "extractElementExpr", "insertElementExpr", 
		"shuffleVectorExpr", "shlExpr", "lShrExpr", "aShrExpr", "andExpr", "orExpr", 
		"xorExpr", "addExpr", "subExpr", "mulExpr", "fNegExpr", "localDefInst", 
		"valueInstruction", "storeInst", "syncScope", "fenceInst", "fNegInst", 
		"addInst", "fAddInst", "subInst", "fSubInst", "mulInst", "fMulInst", "uDivInst", 
		"sDivInst", "fDivInst", "uRemInst", "sRemInst", "fRemInst", "shlInst", 
		"lShrInst", "aShrInst", "andInst", "orInst", "xorInst", "extractElementInst", 
		"insertElementInst", "shuffleVectorInst", "extractValueInst", "insertValueInst", 
		"allocaInst", "loadInst", "cmpXchgInst", "atomicRMWInst", "getElementPtrInst", 
		"truncInst", "zExtInst", "sExtInst", "fpTruncInst", "fpExtInst", "fpToUiInst", 
		"fpToSiInst", "uiToFpInst", "siToFpInst", "ptrToIntInst", "intToPtrInst", 
		"bitCastInst", "addrSpaceCastInst", "iCmpInst", "fCmpInst", "phiInst", 
		"selectInst", "freezeInst", "callInst", "vaargInst", "landingPadInst", 
		"catchPadInst", "cleanupPadInst", "inc", "operandBundle", "clause", "args", 
		"arg", "exceptionArg", "exceptionPad", "externalLinkage", "internalLinkage", 
		"linkage", "preemption", "visibility", "dllStorageClass", "tlsModel", 
		"unnamedAddr", "externallyInitialized", "immutable", "funcAttr", "distinct", 
		"inBounds", "returnAttr", "overflowFlag", "iPred", "fPred", "atomicOrdering", 
		"callingConvEnum", "fastMathFlag", "atomicOp", "floatKind", "specializedMDNode", 
		"diBasicType", "diCommonBlock", "diCompileUnit", "diCompositeType", "diCompositeTypeField", 
		"diDerivedType", "diDerivedTypeField", "diEnumerator", "diEnumeratorField", 
		"diFile", "diFileField", "diGlobalVariable", "diGlobalVariableField", 
		"diGlobalVariableExpression", "diGlobalVariableExpressionField", "diImportedEntity", 
		"diImportedEntityField", "diLabel", "diLabelField", "diLexicalBlock", 
		"diLexicalBlockField", "diLexicalBlockFile", "diLexicalBlockFileField", 
		"diLocalVariable", "diLocalVariableField", "diLocation", "diLocationField", 
		"diMacro", "diMacroField", "diMacroFile", "diMacroFileField", "diModule", 
		"diModuleField", "diNamespace", "diNamespaceField", "diObjCProperty", 
		"diObjCPropertyField", "diStringType", "diStringTypeField", "diSubprogram", 
		"diSubprogramField", "diSubrange", "diSubrangeField", "diSubroutineType", 
		"diTemplateTypeParameter", "diTemplateValueParameter", "genericDiNode", 
		"diTemplateTypeParameterField", "diCompileUnitField", "diCommonBlockField", 
		"diBasicTypeField", "genericDINodeField", "tagField", "headerField", "operandsField", 
		"diTemplateValueParameterField", "nameField", "typeField", "defaultedField", 
		"valueField", "mdField", "diSubroutineTypeField", "flagsField", "diFlags", 
		"ccField", "alignField", "allocatedField", "annotationsField", "argField", 
		"associatedField", "attributesField", "baseTypeField", "checksumField", 
		"checksumkindField", "columnField", "configMacrosField", "containingTypeField", 
		"countField", "debugInfoForProfilingField", "declarationField", "directoryField", 
		"discriminatorField", "dataLocationField", "discriminatorIntField", "dwarfAddressSpaceField", 
		"dwoIdField", "elementsField", "emissionKindField", "encodingField", "entityField", 
		"enumsField", "exportSymbolsField", "exprField", "extraDataField", "fileField", 
		"filenameField", "flagsStringField", "getterField", "globalsField", "identifierField", 
		"importsField", "includePathField", "inlinedAtField", "isDeclField", "isDefinitionField", 
		"isImplicitCodeField", "isLocalField", "isOptimizedField", "isUnsignedField", 
		"apiNotesField", "languageField", "lineField", "linkageNameField", "lowerBoundField", 
		"macrosField", "nameTableKindField", "nodesField", "offsetField", "producerField", 
		"rangesBaseAddressField", "rankField", "retainedNodesField", "retainedTypesField", 
		"runtimeLangField", "runtimeVersionField", "scopeField", "scopeLineField", 
		"sdkField", "setterField", "sizeField", "sourceField", "spFlagsField", 
		"splitDebugFilenameField", "splitDebugInliningField", "strideField", "stringLengthField", 
		"stringLengthExpressionField", "stringLocationExpressionField", "sysrootField", 
		"targetFuncNameField", "templateParamsField", "thisAdjustmentField", "thrownTypesField", 
		"typeMacinfoField", "typesField", "unitField", "upperBoundField", "valueIntField", 
		"valueStringField", "varField", "virtualIndexField", "virtualityField", 
		"vtableHolderField",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'!DIExpression'", "'!DIArgList'", "'!DIBasicType'", "'!DICommonBlock'", 
		"'!DICompileUnit'", "'!DICompositeType'", "'!DIDerivedType'", "'!DIEnumerator'", 
		"'!DIFile'", "'!DIGlobalVariable'", "'!DIGlobalVariableExpression'", "'!DIImportedEntity'", 
		"'!DILabel'", "'!DILexicalBlock'", "'!DILexicalBlockFile'", "'!DILocalVariable'", 
		"'!DILocation'", "'!DIMacro'", "'!DIMacroFile'", "'!DIModule'", "'!DINamespace'", 
		"'!DIObjCProperty'", "'!DIStringType'", "'!DISubprogram'", "'!DISubroutineType'", 
		"'!DITemplateTypeParameter'", "'!DITemplateValueParameter'", "'!GenericDINode'", 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "'fmax'", "'fmin'", "'max'", "'min'", "'nand'", 
		"'umax'", "'umin'", "'xchg'", "'bitcast'", "'addrspacecast'", "'inttoptr'", 
		"'icmp'", "'fcmp'", "'select'", "'trunc'", "'zext'", "'sext'", "'fptrunc'", 
		"'fpext'", "'fptoui'", "'fptosi'", "'uitofp'", "'sitofp'", "'ptrtoint'", 
		"'extractelement'", "'insertelement'", "'shufflevector'", "'shl'", "'lshr'", 
		"'ashr'", "'and'", "'or'", "'xor'", "'add'", "'sub'", "'mul'", "'fneg'", 
		"'store'", "'fence'", "'fadd'", "'fsub'", "'fmul'", "'udiv'", "'sdiv'", 
		"'fdiv'", "'urem'", "'srem'", "'frem'", "'extractvalue'", "'insertvalue'", 
		"'alloca'", "'load'", "'cmpxchg'", "'atomicrmw'", "'phi'", "'freeze'", 
		"'call'", "'va_arg'", "'catchpad'", "'cleanuppad'", "'ret'", "'br'", "'switch'", 
		"'indirectbr'", "'resume'", "'catchret'", "'cleanupret'", "'unreachable'", 
		"'invoke'", "'callbr'", "'catchswitch'", "'landingpad'", "'source_filename'", 
		"'target'", "'datalayout'", "'triple'", "'module'", "'asm'", "'type'", 
		"'comdat'", "'any'", "'exactmatch'", "'largest'", "'nodeduplicate'", "'samesize'", 
		"'alias'", "'ifunc'", "'declare'", "'define'", "'attributes'", "'uselistorder'", 
		"'uselistorder_bb'", "'cc'", "'gc'", "'prefix'", "'prologue'", "'personality'", 
		"'from'", "'to'", "'unwind'", "'within'", "'label'", "'caller'", "'no_sanitize_address'", 
		"'no_sanitize_hwaddress'", "'sanitize_address_dyninit'", "'sanitize_memtag'", 
		"'section'", "'partition'", "'true'", "'false'", "'null'", "'none'", "'c'", 
		"'zeroinitializer'", "'undef'", "'poison'", "'blockaddress'", "'dso_local_equivalent'", 
		"'no_cfi'", "'sideeffect'", "'alignstack'", "'inteldialect'", "'void'", 
		"'opaque'", "'align'", "'allockind'", "'allocsize'", "'uwtable'", "'async'", 
		"'sync'", "'vscale_range'", "'byref'", "'byval'", "'dereferenceable'", 
		"'dereferenceable_or_null'", "'elementtype'", "'inalloca'", "'allocalign'", 
		"'allocptr'", "'immarg'", "'inreg'", "'nest'", "'noalias'", "'nocapture'", 
		"'nofree'", "'nonnull'", "'noundef'", "'readnone'", "'readonly'", "'returned'", 
		"'signext'", "'swiftasync'", "'swifterror'", "'swiftself'", "'writeonly'", 
		"'zeroext'", "'preallocated'", "'sret'", "'x'", "'vscale'", "'x86_mmx'", 
		"'token'", "'ptr'", "'addrspace'", "'thread_local'", "'metadata'", "'getelementptr'", 
		"'inrange'", "'exact'", "'volatile'", "'atomic'", "'syncscope'", "'weak'", 
		"'musttail'", "'notail'", "'tail'", "'cleanup'", "'catch'", "'filter'", 
		"'extern_weak'", "'external'", "'appending'", "'available_externally'", 
		"'common'", "'internal'", "'linkonce'", "'linkonce_odr'", "'private'", 
		"'weak_odr'", "'dso_local'", "'dso_preemptable'", "'default'", "'hidden'", 
		"'protected'", "'dllexport'", "'dllimport'", "'initialexec'", "'localdynamic'", 
		"'localexec'", "'local_unnamed_addr'", "'unnamed_addr'", "'externally_initialized'", 
		"'constant'", "'global'", "'alwaysinline'", "'argmemonly'", "'builtin'", 
		"'cold'", "'convergent'", "'disable_sanitizer_instrumentation'", "'fn_ret_thunk_extern'", 
		"'hot'", "'inaccessiblemem_or_argmemonly'", "'inaccessiblememonly'", "'inlinehint'", 
		"'jumptable'", "'minsize'", "'mustprogress'", "'naked'", "'nobuiltin'", 
		"'nocallback'", "'nocf_check'", "'noduplicate'", "'noimplicitfloat'", 
		"'noinline'", "'nomerge'", "'nonlazybind'", "'noprofile'", "'norecurse'", 
		"'noredzone'", "'noreturn'", "'nosanitize_bounds'", "'nosanitize_coverage'", 
		"'nosync'", "'nounwind'", "'null_pointer_is_valid'", "'optforfuzzing'", 
		"'optnone'", "'optsize'", "'presplitcoroutine'", "'returns_twice'", "'safestack'", 
		"'sanitize_address'", "'sanitize_hwaddress'", "'sanitize_memory'", "'sanitize_thread'", 
		"'shadowcallstack'", "'speculatable'", "'speculative_load_hardening'", 
		"'ssp'", "'sspreq'", "'sspstrong'", "'strictfp'", "'willreturn'", "'distinct'", 
		"'inbounds'", "'nsw'", "'nuw'", "'eq'", "'ne'", "'sge'", "'sgt'", "'sle'", 
		"'slt'", "'uge'", "'ugt'", "'ule'", "'ult'", "'oeq'", "'oge'", "'ogt'", 
		"'ole'", "'olt'", "'one'", "'ord'", "'ueq'", "'une'", "'uno'", "'acq_rel'", 
		"'acquire'", "'monotonic'", "'release'", "'seq_cst'", "'unordered'", "'aarch64_sve_vector_pcs'", 
		"'aarch64_vector_pcs'", "'amdgpu_cs'", "'amdgpu_es'", "'amdgpu_gfx'", 
		"'amdgpu_gs'", "'amdgpu_hs'", "'amdgpu_kernel'", "'amdgpu_ls'", "'amdgpu_ps'", 
		"'amdgpu_vs'", "'anyregcc'", "'arm_aapcs_vfpcc'", "'arm_aapcscc'", "'arm_apcscc'", 
		"'avr_intrcc'", "'avr_signalcc'", "'ccc'", "'cfguard_checkcc'", "'coldcc'", 
		"'cxx_fast_tlscc'", "'fastcc'", "'ghccc'", "'hhvm_ccc'", "'hhvmcc'", "'intel_ocl_bicc'", 
		"'msp430_intrcc'", "'preserve_allcc'", "'preserve_mostcc'", "'ptx_device'", 
		"'ptx_kernel'", "'spir_func'", "'spir_kernel'", "'swiftcc'", "'swifttailcc'", 
		"'tailcc'", "'webkit_jscc'", "'win64cc'", "'x86_64_sysvcc'", "'x86_fastcallcc'", 
		"'x86_intrcc'", "'x86_regcallcc'", "'x86_stdcallcc'", "'x86_thiscallcc'", 
		"'x86_vectorcallcc'", "'afn'", "'arcp'", "'contract'", "'fast'", "'ninf'", 
		"'nnan'", "'nsz'", "'reassoc'", "'half'", "'bfloat'", "'float'", "'double'", 
		"'x86_fp80'", "'fp128'", "'ppc_fp128'", "'tag:'", "'header:'", "'operands:'", 
		"'name:'", "'type:'", "'defaulted:'", "'value:'", "'flags:'", "'cc:'", 
		"'align:'", "'allocated:'", "'annotations:'", "'arg:'", "'associated:'", 
		"'attributes:'", "'baseType:'", "'checksum:'", "'checksumkind:'", "'column:'", 
		"'configMacros:'", "'containingType:'", "'count:'", "'debugInfoForProfiling:'", 
		"'declaration:'", "'directory:'", "'discriminator:'", "'dataLocation:'", 
		"'dwarfAddressSpace:'", "'dwoId:'", "'elements:'", "'emissionKind:'", 
		"'DebugDirectivesOnly'", "'FullDebug'", "'LineTablesOnly'", "'NoDebug'", 
		"'encoding:'", "'entity:'", "'enums:'", "'exportSymbols:'", "'expr:'", 
		"'extraData:'", "'file:'", "'filename:'", "'getter:'", "'globals:'", "'identifier:'", 
		"'imports:'", "'includePath:'", "'inlinedAt:'", "'isDecl:'", "'isDefinition:'", 
		"'isImplicitCode:'", "'isLocal:'", "'isOptimized:'", "'isUnsigned:'", 
		"'apinotes:'", "'language:'", "'line:'", "'linkageName:'", "'lowerBound:'", 
		"'macros:'", "'nameTableKind:'", "'GNU'", "'None'", "'Default'", "'nodes:'", 
		"'offset:'", "'producer:'", "'rangesBaseAddress:'", "'rank:'", "'retainedNodes:'", 
		"'retainedTypes:'", "'runtimeLang:'", "'runtimeVersion:'", "'scope:'", 
		"'scopeLine:'", "'sdk:'", "'setter:'", "'size:'", "'source:'", "'spFlags:'", 
		"'splitDebugFilename:'", "'splitDebugInlining:'", "'stride:'", "'stringLength:'", 
		"'stringLengthExpression:'", "'stringLocationExpression:'", "'sysroot:'", 
		"'targetFuncName:'", "'templateParams:'", "'thisAdjustment:'", "'thrownTypes:'", 
		"'types:'", "'unit:'", "'upperBound:'", "'var:'", "'virtualIndex:'", "'virtuality:'", 
		"'vtableHolder:'", "','", "';'", "'='", "'{'", "'}'", "'|'", "'!'", "'('", 
		"')'", "'['", "']'", "'...'", "'<'", "'>'", "'*'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "DIExpression", "DIArgList", "DIBasicType", "DICommonBlock", 
		"DICompileUnit", "DICompositeType", "DIDerivedType", "DIEnumerator", "DIFile", 
		"DIGlobalVariable", "DIGlobalVariableExpression", "DIImportedEntity", 
		"DILabel", "DILexicalBlock", "DILexicalBlockFile", "DILocalVariable", 
		"DILocation", "DIMacro", "DIMacroFile", "DIModule", "DINamespace", "DIObjCProperty", 
		"DIStringType", "DISubprogram", "DISubroutineType", "DITemplateTypeParameter", 
		"DITemplateValueParameter", "GenericDINode", "Comment", "WhiteSpace", 
		"IntLit", "FloatLit", "StringLit", "GlobalIdent", "LocalIdent", "LabelIdent", 
		"AttrGroupId", "ComdatName", "MetadataName", "MetadataId", "IntType", 
		"DwarfTag", "DwarfAttEncoding", "DiFlag", "DispFlag", "DwarfLang", "DwarfCc", 
		"ChecksumKind", "DwarfVirtuality", "DwarfMacinfo", "DwarfOp", "OpFmax", 
		"OpFmin", "OpMax", "OpMin", "OpNand", "OpUmax", "OpUmin", "OpXchg", "OpBitcast", 
		"OpAddrspacecast", "OpInttoptr", "OpIcmp", "OpFcmp", "OpSelect", "OpTrunc", 
		"OpZext", "OpSext", "OpFptrunc", "OpFpext", "OpFptoui", "OpFptosi", "OpUitofp", 
		"OpSitofp", "OpPtrtoint", "OpExtractelement", "OpInsertelement", "OpShufflevector", 
		"OpShl", "OpLshr", "OpAshr", "OpAnd", "OpOr", "OpXor", "OpAdd", "OpSub", 
		"OpMul", "OpFneg", "OpStore", "OpFence", "OpFadd", "OpFsub", "OpFmul", 
		"OpUdiv", "OpSdiv", "OpFdiv", "OpUrem", "OpSrem", "OpFrem", "OpExtractvalue", 
		"OpInsertvalue", "OpAlloca", "OpLoad", "OpCmpxchg", "OpAtomicrmw", "OpPhi", 
		"OpFreeze", "OpCall", "OpVaArg", "OpCatchpad", "OpCleanuppad", "OpRet", 
		"OpBr", "OpSwitch", "OpIndirectbr", "OpResume", "OpCatchret", "OpCleanupret", 
		"OpUnreachable", "OpInvoke", "OpCallbr", "OpCatchswitch", "OpLandingpad", 
		"KwSourceFilename", "KwTarget", "KwDatalayout", "KwTriple", "KwModule", 
		"KwAsm", "KwType", "KwComdat", "KwAny", "KwExactmatch", "KwLargest", "KwNodeduplicate", 
		"KwSamesize", "KwAlias", "KwIfunc", "KwDeclare", "KwDefine", "KwAttributes", 
		"KwUselistorder", "KwUselistorderBb", "KwCc", "KwGc", "KwPrefix", "KwPrologue", 
		"KwPersonality", "KwFrom", "KwTo", "KwUnwind", "KwWithin", "KwLabel", 
		"KwCaller", "KwNoSanitizeAddress", "KwNoSanitizeHwaddress", "KwSanitizeAddressDyninit", 
		"KwSanitizeMemtag", "KwSection", "KwPartition", "KwTrue", "KwFalse", "KwNull", 
		"Kwnone", "KwC", "KwZeroinitializer", "KwUndef", "KwPoison", "KwBlockaddress", 
		"KwDsoLocalEquivalent", "KwNoCfi", "KwSideeffect", "KwAlignstack", "KwInteldialect", 
		"KwVoid", "KwOpaque", "KwAlign", "KwAllockind", "KwAllocsize", "KwUwtable", 
		"KwAsync", "KwSync", "KwVscaleRange", "KwByref", "KwByval", "KwDereferenceable", 
		"KwDereferenceableOrNull", "KwElementtype", "KwInalloca", "KwAllocalign", 
		"KwAllocptr", "KwImmarg", "KwInreg", "KwNest", "KwNoalias", "KwNocapture", 
		"KwNofree", "KwNonnull", "KwNoundef", "KwReadnone", "KwReadonly", "KwReturned", 
		"KwSignext", "KwSwiftasync", "KwSwifterror", "KwSwiftself", "KwWriteonly", 
		"KwZeroext", "KwPreallocated", "KwSret", "KwX", "KwVscale", "KwX86Mmx", 
		"KwToken", "KwPtr", "KwAddrspace", "KwThreadLocal", "KwMetadata", "KwGetelementptr", 
		"KwInrange", "KwExact", "KwVolatile", "KwAtomic", "KwSyncscope", "KwWeak", 
		"KwMusttail", "KwNotail", "KwTail", "KwCleanup", "KwCatch", "KwFilter", 
		"KwExternWeak", "KwExternal", "KwAppending", "KwAvailableExternally", 
		"KwCommon", "KwInternal", "KwLinkonce", "KwLinkonceOdr", "KwPrivate", 
		"KwWeakOdr", "KwDsoLocal", "KwDsoPreemptable", "Kwdefault", "KwHidden", 
		"KwProtected", "KwDllexport", "KwDllimport", "KwInitialexec", "KwLocaldynamic", 
		"KwLocalexec", "KwLocalUnnamedAddr", "KwUnnamedAddr", "KwExternallyInitialized", 
		"KwConstant", "KwGlobal", "KwAlwaysinline", "KwArgmemonly", "KwBuiltin", 
		"KwCold", "KwConvergent", "KwDisableSanitizerInstrumentation", "KwFnRetThunkExtern", 
		"KwHot", "KwInaccessiblememOrArgmemonly", "KwInaccessiblememonly", "KwInlinehint", 
		"KwJumptable", "KwMinsize", "KwMustprogress", "KwNaked", "KwNobuiltin", 
		"KwNocallback", "KwNocfCheck", "KwNoduplicate", "KwNoimplicitfloat", "KwNoinline", 
		"KwNomerge", "KwNonlazybind", "KwNoprofile", "KwNorecurse", "KwNoredzone", 
		"KwNoreturn", "KwNosanitizeBounds", "KwNosanitizeCoverage", "KwNosync", 
		"KwNounwind", "KwNullPointerIsValid", "KwOptforfuzzing", "KwOptnone", 
		"KwOptsize", "KwPresplitcoroutine", "KwReturnsTwice", "KwSafestack", "KwSanitizeAddress", 
		"KwSanitizeHwaddress", "KwSanitizeMemory", "KwSanitizeThread", "KwShadowcallstack", 
		"KwSpeculatable", "KwSpeculativeLoadHardening", "KwSsp", "KwSspreq", "KwSspstrong", 
		"KwStrictfp", "KwWillreturn", "KwDistinct", "KwInbounds", "KwNsw", "KwNuw", 
		"KwEq", "KwNe", "KwSge", "KwSgt", "KwSle", "KwSlt", "KwUge", "KwUgt", 
		"KwUle", "KwUlt", "KwOeq", "KwOge", "KwOgt", "KwOle", "KwOlt", "KwOne", 
		"KwOrd", "KwUeq", "KwUne", "KwUno", "KwAcqRel", "KwAcquire", "KwMonotonic", 
		"KwRelease", "KwSeqCst", "KwUnordered", "KwAarch64SveVectorPcs", "KwAarch64VectorPcs", 
		"KwAmdgpuCs", "KwAmdgpuEs", "KwAmdgpuGfx", "KwAmdgpuGs", "KwAmdgpuHs", 
		"KwAmdgpuKernel", "KwAmdgpuLs", "KwAmdgpuPs", "KwAmdgpuVs", "KwAnyregcc", 
		"KwArmAapcsVfpcc", "KwArmAapcscc", "KwArmApcscc", "KwAvrIntrcc", "KwAvrSignalcc", 
		"KwCcc", "KwCfguardCheckcc", "KwColdcc", "KwCxxFastTlscc", "KwFastcc", 
		"KwGhccc", "KwHhvmCcc", "KwHhvmcc", "KwIntelOclBicc", "KwMsp430Intrcc", 
		"KwPreserveAllcc", "KwPreserveMostcc", "KwPtxDevice", "KwPtxKernel", "KwSpirFunc", 
		"KwSpirKernel", "KwSwiftcc", "KwSwifttailcc", "KwTailcc", "KwWebkitJscc", 
		"KwWin64cc", "KwX8664Sysvcc", "KwX86Fastcallcc", "KwX86Intrcc", "KwX86Regcallcc", 
		"KwX86Stdcallcc", "KwX86Thiscallcc", "KwX86Vectorcallcc", "KwAfn", "KwArcp", 
		"KwContract", "KwFast", "KwNinf", "KwNnan", "KwNsz", "KwReassoc", "KwHalf", 
		"KwBfloat", "KwFloat", "KwDouble", "KwX86Fp80", "KwFp128", "KwPpcFp128", 
		"KwTagLabel", "KwHeaderLabel", "KwOperandsLabel", "KwNameLabel", "KwTypeLabel", 
		"KwDefaultedLabel", "KwValueLabel", "KwFlagsLabel", "KwCcLabel", "KwAlignLabel", 
		"KwAllocatedLabel", "KwAnnotationsLabel", "KwArgLabel", "KwAssociatedLabel", 
		"KwAttributesLabel", "KwBaseTypeLabel", "KwChecksumLabel", "KwChecksumkindLabel", 
		"KwColumnLabel", "KwConfigMacrosLabel", "KwContainingTypeLabel", "KwCountLabel", 
		"KwDebugInfoForProfilingLabel", "KwDeclarationLabel", "KwDirectoryLabel", 
		"KwDiscriminatorLabel", "KwDataLocationLabel", "KwDwarfAddressSpaceLabel", 
		"KwDwoIdLabel", "KwElementsLabel", "KwEmissionKindLabel", "KwDebugDirectivesOnly", 
		"KwFullDebug", "KwLineTablesOnly", "KwNoDebug", "KwEncodingLabel", "KwEntityLabel", 
		"KwEnumsLabel", "KwExportSymbolsLabel", "KwExprLabel", "KwExtraDataLabel", 
		"KwFileLabel", "KwFilenameLabel", "KwGetterLabel", "KwGlobalsLabel", "KwIdentifierLabel", 
		"KwImportsLabel", "KwIncludePathLabel", "KwInlinedAtLabel", "KwIsDeclLabel", 
		"KwIsDefinitionLabel", "KwIsImplicitCodeLabel", "KwIsLocalLabel", "KwIsOptimizedLabel", 
		"KwIsUnsignedLabel", "KwApinotesLabel", "KwLanguageLabel", "KwLineLabel", 
		"KwLinkageNameLabel", "KwLowerBoundLabel", "KwMacrosLabel", "KwNameTableKindLabel", 
		"KwGNU", "KwNone", "KwDefault", "KwNodesLabel", "KwOffsetLabel", "KwProducerLabel", 
		"KwRangesBaseAddressLabel", "KwRankLabel", "KwRetainedNodesLabel", "KwRetainedTypesLabel", 
		"KwRuntimeLangLabel", "KwRuntimeVersionLabel", "KwScopeLabel", "KwScopeLineLabel", 
		"KwSdkLabel", "KwSetterLabel", "KwSizeLabel", "KwSourceLabel", "KwSpFlagsLabel", 
		"KwSplitDebugFilenameLabel", "KwSplitDebugInliningLabel", "KwStrideLabel", 
		"KwStringLengthLabel", "KwStringLengthExpressionLabel", "KwStringLocationExpressionLabel", 
		"KwSysrootLabel", "KwTargetFuncNameLabel", "KwTemplateParamsLabel", "KwThisAdjustmentLabel", 
		"KwThrownTypesLabel", "KwTypesLabel", "KwUnitLabel", "KwUpperBoundLabel", 
		"KwVarLabel", "KwVirtualIndexLabel", "KwVirtualityLabel", "KwVtableHolderLabel", 
		"Comma", "SemiColon", "Equal", "LBraces", "RBraces", "Pipe", "Exclamation", 
		"LParenthesis", "RParenthesis", "LBracket", "RBracket", "Ellipsis", "LAngleBrackets", 
		"RAngleBrackets", "Asterisk",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(LLVMIRParser._LITERAL_NAMES, LLVMIRParser._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return LLVMIRParser.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace

	// @Override
	public get grammarFileName(): string { return "LLVMIR.g4"; }

	// @Override
	public get ruleNames(): string[] { return LLVMIRParser.ruleNames; }

	// @Override
	public get serializedATN(): string { return LLVMIRParser._serializedATN; }

	protected createFailedPredicateException(predicate?: string, message?: string): FailedPredicateException {
		return new FailedPredicateException(this, predicate, message);
	}

	constructor(input: TokenStream) {
		super(input);
		this._interp = new ParserATNSimulator(LLVMIRParser._ATN, this);
	}
	// @RuleVersion(0)
	public compilationUnit(): CompilationUnitContext {
		let _localctx: CompilationUnitContext = new CompilationUnitContext(this._ctx, this.state);
		this.enterRule(_localctx, 0, LLVMIRParser.RULE_compilationUnit);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 799;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 34)) & ~0x1F) === 0 && ((1 << (_la - 34)) & ((1 << (LLVMIRParser.GlobalIdent - 34)) | (1 << (LLVMIRParser.LocalIdent - 34)) | (1 << (LLVMIRParser.ComdatName - 34)) | (1 << (LLVMIRParser.MetadataName - 34)) | (1 << (LLVMIRParser.MetadataId - 34)))) !== 0) || ((((_la - 124)) & ~0x1F) === 0 && ((1 << (_la - 124)) & ((1 << (LLVMIRParser.KwSourceFilename - 124)) | (1 << (LLVMIRParser.KwTarget - 124)) | (1 << (LLVMIRParser.KwModule - 124)) | (1 << (LLVMIRParser.KwDeclare - 124)) | (1 << (LLVMIRParser.KwDefine - 124)) | (1 << (LLVMIRParser.KwAttributes - 124)) | (1 << (LLVMIRParser.KwUselistorder - 124)) | (1 << (LLVMIRParser.KwUselistorderBb - 124)))) !== 0)) {
				{
				{
				this.state = 796;
				this.topLevelEntity();
				}
				}
				this.state = 801;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 802;
			this.match(LLVMIRParser.EOF);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public targetDef(): TargetDefContext {
		let _localctx: TargetDefContext = new TargetDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 2, LLVMIRParser.RULE_targetDef);
		try {
			this.state = 806;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 1, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 804;
				this.targetDataLayout();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 805;
				this.targetTriple();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sourceFilename(): SourceFilenameContext {
		let _localctx: SourceFilenameContext = new SourceFilenameContext(this._ctx, this.state);
		this.enterRule(_localctx, 4, LLVMIRParser.RULE_sourceFilename);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 808;
			this.match(LLVMIRParser.KwSourceFilename);
			this.state = 809;
			this.match(LLVMIRParser.Equal);
			this.state = 810;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public targetDataLayout(): TargetDataLayoutContext {
		let _localctx: TargetDataLayoutContext = new TargetDataLayoutContext(this._ctx, this.state);
		this.enterRule(_localctx, 6, LLVMIRParser.RULE_targetDataLayout);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 812;
			this.match(LLVMIRParser.KwTarget);
			this.state = 813;
			this.match(LLVMIRParser.KwDatalayout);
			this.state = 814;
			this.match(LLVMIRParser.Equal);
			this.state = 815;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public targetTriple(): TargetTripleContext {
		let _localctx: TargetTripleContext = new TargetTripleContext(this._ctx, this.state);
		this.enterRule(_localctx, 8, LLVMIRParser.RULE_targetTriple);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 817;
			this.match(LLVMIRParser.KwTarget);
			this.state = 818;
			this.match(LLVMIRParser.KwTriple);
			this.state = 819;
			this.match(LLVMIRParser.Equal);
			this.state = 820;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public topLevelEntity(): TopLevelEntityContext {
		let _localctx: TopLevelEntityContext = new TopLevelEntityContext(this._ctx, this.state);
		this.enterRule(_localctx, 10, LLVMIRParser.RULE_topLevelEntity);
		try {
			this.state = 837;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 2, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 822;
				this.sourceFilename();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 823;
				this.targetDef();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 824;
				this.moduleAsm();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 825;
				this.typeDef();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 826;
				this.comdatDef();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 827;
				this.globalDecl();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 828;
				this.globalDef();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 829;
				this.indirectSymbolDef();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 830;
				this.funcDecl();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 831;
				this.funcDef();
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 832;
				this.attrGroupDef();
				}
				break;

			case 12:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 833;
				this.namedMetadataDef();
				}
				break;

			case 13:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 834;
				this.metadataDef();
				}
				break;

			case 14:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 835;
				this.useListOrder();
				}
				break;

			case 15:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 836;
				this.useListOrderBB();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public moduleAsm(): ModuleAsmContext {
		let _localctx: ModuleAsmContext = new ModuleAsmContext(this._ctx, this.state);
		this.enterRule(_localctx, 12, LLVMIRParser.RULE_moduleAsm);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 839;
			this.match(LLVMIRParser.KwModule);
			this.state = 840;
			this.match(LLVMIRParser.KwAsm);
			this.state = 841;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeDef(): TypeDefContext {
		let _localctx: TypeDefContext = new TypeDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 14, LLVMIRParser.RULE_typeDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 843;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 844;
			this.match(LLVMIRParser.Equal);
			this.state = 845;
			this.match(LLVMIRParser.KwType);
			this.state = 846;
			this.type(0);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public comdatDef(): ComdatDefContext {
		let _localctx: ComdatDefContext = new ComdatDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 16, LLVMIRParser.RULE_comdatDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 848;
			this.match(LLVMIRParser.ComdatName);
			this.state = 849;
			this.match(LLVMIRParser.Equal);
			this.state = 850;
			this.match(LLVMIRParser.KwComdat);
			this.state = 851;
			_localctx._selectionKind = this._input.LT(1);
			_la = this._input.LA(1);
			if (!(((((_la - 132)) & ~0x1F) === 0 && ((1 << (_la - 132)) & ((1 << (LLVMIRParser.KwAny - 132)) | (1 << (LLVMIRParser.KwExactmatch - 132)) | (1 << (LLVMIRParser.KwLargest - 132)) | (1 << (LLVMIRParser.KwNodeduplicate - 132)) | (1 << (LLVMIRParser.KwSamesize - 132)))) !== 0))) {
				_localctx._selectionKind = this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalDecl(): GlobalDeclContext {
		let _localctx: GlobalDeclContext = new GlobalDeclContext(this._ctx, this.state);
		this.enterRule(_localctx, 18, LLVMIRParser.RULE_globalDecl);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 853;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 854;
			this.match(LLVMIRParser.Equal);
			this.state = 855;
			this.externalLinkage();
			this.state = 857;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDsoLocal || _la === LLVMIRParser.KwDsoPreemptable) {
				{
				this.state = 856;
				this.preemption();
				}
			}

			this.state = 860;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 244)) & ~0x1F) === 0 && ((1 << (_la - 244)) & ((1 << (LLVMIRParser.Kwdefault - 244)) | (1 << (LLVMIRParser.KwHidden - 244)) | (1 << (LLVMIRParser.KwProtected - 244)))) !== 0)) {
				{
				this.state = 859;
				this.visibility();
				}
			}

			this.state = 863;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDllexport || _la === LLVMIRParser.KwDllimport) {
				{
				this.state = 862;
				this.dllStorageClass();
				}
			}

			this.state = 866;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwThreadLocal) {
				{
				this.state = 865;
				this.threadLocal();
				}
			}

			this.state = 869;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLocalUnnamedAddr || _la === LLVMIRParser.KwUnnamedAddr) {
				{
				this.state = 868;
				this.unnamedAddr();
				}
			}

			this.state = 872;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 871;
				this.addrSpace();
				}
			}

			this.state = 875;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExternallyInitialized) {
				{
				this.state = 874;
				this.externallyInitialized();
				}
			}

			this.state = 877;
			this.immutable();
			this.state = 878;
			this.type(0);
			this.state = 883;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 10, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 879;
					this.match(LLVMIRParser.Comma);
					this.state = 880;
					this.globalField();
					}
					}
				}
				this.state = 885;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 10, this._ctx);
			}
			this.state = 890;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 886;
				this.match(LLVMIRParser.Comma);
				this.state = 887;
				this.metadataAttachment();
				}
				}
				this.state = 892;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 896;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 893;
				this.funcAttribute();
				}
				}
				this.state = 898;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalDef(): GlobalDefContext {
		let _localctx: GlobalDefContext = new GlobalDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 20, LLVMIRParser.RULE_globalDef);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 899;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 900;
			this.match(LLVMIRParser.Equal);
			this.state = 902;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 225)) & ~0x1F) === 0 && ((1 << (_la - 225)) & ((1 << (LLVMIRParser.KwWeak - 225)) | (1 << (LLVMIRParser.KwAppending - 225)) | (1 << (LLVMIRParser.KwAvailableExternally - 225)) | (1 << (LLVMIRParser.KwCommon - 225)) | (1 << (LLVMIRParser.KwInternal - 225)) | (1 << (LLVMIRParser.KwLinkonce - 225)) | (1 << (LLVMIRParser.KwLinkonceOdr - 225)) | (1 << (LLVMIRParser.KwPrivate - 225)) | (1 << (LLVMIRParser.KwWeakOdr - 225)))) !== 0)) {
				{
				this.state = 901;
				this.internalLinkage();
				}
			}

			this.state = 905;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDsoLocal || _la === LLVMIRParser.KwDsoPreemptable) {
				{
				this.state = 904;
				this.preemption();
				}
			}

			this.state = 908;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 244)) & ~0x1F) === 0 && ((1 << (_la - 244)) & ((1 << (LLVMIRParser.Kwdefault - 244)) | (1 << (LLVMIRParser.KwHidden - 244)) | (1 << (LLVMIRParser.KwProtected - 244)))) !== 0)) {
				{
				this.state = 907;
				this.visibility();
				}
			}

			this.state = 911;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDllexport || _la === LLVMIRParser.KwDllimport) {
				{
				this.state = 910;
				this.dllStorageClass();
				}
			}

			this.state = 914;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwThreadLocal) {
				{
				this.state = 913;
				this.threadLocal();
				}
			}

			this.state = 917;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLocalUnnamedAddr || _la === LLVMIRParser.KwUnnamedAddr) {
				{
				this.state = 916;
				this.unnamedAddr();
				}
			}

			this.state = 920;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 919;
				this.addrSpace();
				}
			}

			this.state = 923;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExternallyInitialized) {
				{
				this.state = 922;
				this.externallyInitialized();
				}
			}

			this.state = 925;
			this.immutable();
			this.state = 926;
			this.type(0);
			this.state = 927;
			this.constant();
			this.state = 932;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 21, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 928;
					this.match(LLVMIRParser.Comma);
					this.state = 929;
					this.globalField();
					}
					}
				}
				this.state = 934;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 21, this._ctx);
			}
			this.state = 939;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 935;
				this.match(LLVMIRParser.Comma);
				this.state = 936;
				this.metadataAttachment();
				}
				}
				this.state = 941;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 945;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 942;
				this.funcAttribute();
				}
				}
				this.state = 947;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indirectSymbolDef(): IndirectSymbolDefContext {
		let _localctx: IndirectSymbolDefContext = new IndirectSymbolDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 22, LLVMIRParser.RULE_indirectSymbolDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 948;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 949;
			this.match(LLVMIRParser.Equal);
			this.state = 951;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 225)) & ~0x1F) === 0 && ((1 << (_la - 225)) & ((1 << (LLVMIRParser.KwWeak - 225)) | (1 << (LLVMIRParser.KwExternWeak - 225)) | (1 << (LLVMIRParser.KwExternal - 225)) | (1 << (LLVMIRParser.KwAppending - 225)) | (1 << (LLVMIRParser.KwAvailableExternally - 225)) | (1 << (LLVMIRParser.KwCommon - 225)) | (1 << (LLVMIRParser.KwInternal - 225)) | (1 << (LLVMIRParser.KwLinkonce - 225)) | (1 << (LLVMIRParser.KwLinkonceOdr - 225)) | (1 << (LLVMIRParser.KwPrivate - 225)) | (1 << (LLVMIRParser.KwWeakOdr - 225)))) !== 0)) {
				{
				this.state = 950;
				this.linkage();
				}
			}

			this.state = 954;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDsoLocal || _la === LLVMIRParser.KwDsoPreemptable) {
				{
				this.state = 953;
				this.preemption();
				}
			}

			this.state = 957;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 244)) & ~0x1F) === 0 && ((1 << (_la - 244)) & ((1 << (LLVMIRParser.Kwdefault - 244)) | (1 << (LLVMIRParser.KwHidden - 244)) | (1 << (LLVMIRParser.KwProtected - 244)))) !== 0)) {
				{
				this.state = 956;
				this.visibility();
				}
			}

			this.state = 960;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDllexport || _la === LLVMIRParser.KwDllimport) {
				{
				this.state = 959;
				this.dllStorageClass();
				}
			}

			this.state = 963;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwThreadLocal) {
				{
				this.state = 962;
				this.threadLocal();
				}
			}

			this.state = 966;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLocalUnnamedAddr || _la === LLVMIRParser.KwUnnamedAddr) {
				{
				this.state = 965;
				this.unnamedAddr();
				}
			}

			this.state = 968;
			_localctx._indirectSymbolKind = this._input.LT(1);
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwAlias || _la === LLVMIRParser.KwIfunc)) {
				_localctx._indirectSymbolKind = this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			this.state = 969;
			this.type(0);
			this.state = 970;
			this.match(LLVMIRParser.Comma);
			this.state = 971;
			this.indirectSymbol();
			this.state = 976;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 972;
				this.match(LLVMIRParser.Comma);
				this.state = 973;
				this.partition();
				}
				}
				this.state = 978;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcDecl(): FuncDeclContext {
		let _localctx: FuncDeclContext = new FuncDeclContext(this._ctx, this.state);
		this.enterRule(_localctx, 24, LLVMIRParser.RULE_funcDecl);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 979;
			this.match(LLVMIRParser.KwDeclare);
			this.state = 983;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.MetadataName) {
				{
				{
				this.state = 980;
				this.metadataAttachment();
				}
				}
				this.state = 985;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 986;
			this.funcHeader();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcDef(): FuncDefContext {
		let _localctx: FuncDefContext = new FuncDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 26, LLVMIRParser.RULE_funcDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 988;
			this.match(LLVMIRParser.KwDefine);
			this.state = 989;
			this.funcHeader();
			this.state = 993;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.MetadataName) {
				{
				{
				this.state = 990;
				this.metadataAttachment();
				}
				}
				this.state = 995;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 996;
			this.funcBody();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public attrGroupDef(): AttrGroupDefContext {
		let _localctx: AttrGroupDefContext = new AttrGroupDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 28, LLVMIRParser.RULE_attrGroupDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 998;
			this.match(LLVMIRParser.KwAttributes);
			this.state = 999;
			this.match(LLVMIRParser.AttrGroupId);
			this.state = 1000;
			this.match(LLVMIRParser.Equal);
			this.state = 1001;
			this.match(LLVMIRParser.LBraces);
			this.state = 1005;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 1002;
				this.funcAttribute();
				}
				}
				this.state = 1007;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1008;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public namedMetadataDef(): NamedMetadataDefContext {
		let _localctx: NamedMetadataDefContext = new NamedMetadataDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 30, LLVMIRParser.RULE_namedMetadataDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1010;
			this.match(LLVMIRParser.MetadataName);
			this.state = 1011;
			this.match(LLVMIRParser.Equal);
			this.state = 1012;
			this.match(LLVMIRParser.Exclamation);
			this.state = 1013;
			this.match(LLVMIRParser.LBraces);
			this.state = 1022;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.DIExpression || _la === LLVMIRParser.MetadataId) {
				{
				this.state = 1014;
				this.metadataNode();
				this.state = 1019;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1015;
					this.match(LLVMIRParser.Comma);
					this.state = 1016;
					this.metadataNode();
					}
					}
					this.state = 1021;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1024;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public metadataDef(): MetadataDefContext {
		let _localctx: MetadataDefContext = new MetadataDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 32, LLVMIRParser.RULE_metadataDef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1026;
			this.match(LLVMIRParser.MetadataId);
			this.state = 1027;
			this.match(LLVMIRParser.Equal);
			this.state = 1029;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDistinct) {
				{
				this.state = 1028;
				this.distinct();
				}
			}

			this.state = 1033;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.Exclamation:
				{
				this.state = 1031;
				this.mdTuple();
				}
				break;
			case LLVMIRParser.DIExpression:
			case LLVMIRParser.DIBasicType:
			case LLVMIRParser.DICommonBlock:
			case LLVMIRParser.DICompileUnit:
			case LLVMIRParser.DICompositeType:
			case LLVMIRParser.DIDerivedType:
			case LLVMIRParser.DIEnumerator:
			case LLVMIRParser.DIFile:
			case LLVMIRParser.DIGlobalVariable:
			case LLVMIRParser.DIGlobalVariableExpression:
			case LLVMIRParser.DIImportedEntity:
			case LLVMIRParser.DILabel:
			case LLVMIRParser.DILexicalBlock:
			case LLVMIRParser.DILexicalBlockFile:
			case LLVMIRParser.DILocalVariable:
			case LLVMIRParser.DILocation:
			case LLVMIRParser.DIMacro:
			case LLVMIRParser.DIMacroFile:
			case LLVMIRParser.DIModule:
			case LLVMIRParser.DINamespace:
			case LLVMIRParser.DIObjCProperty:
			case LLVMIRParser.DIStringType:
			case LLVMIRParser.DISubprogram:
			case LLVMIRParser.DISubroutineType:
			case LLVMIRParser.DITemplateTypeParameter:
			case LLVMIRParser.DITemplateValueParameter:
			case LLVMIRParser.GenericDINode:
				{
				this.state = 1032;
				this.specializedMDNode();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public useListOrder(): UseListOrderContext {
		let _localctx: UseListOrderContext = new UseListOrderContext(this._ctx, this.state);
		this.enterRule(_localctx, 34, LLVMIRParser.RULE_useListOrder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1035;
			this.match(LLVMIRParser.KwUselistorder);
			this.state = 1036;
			this.typeValue();
			this.state = 1037;
			this.match(LLVMIRParser.Comma);
			this.state = 1038;
			this.match(LLVMIRParser.LBraces);
			this.state = 1039;
			this.match(LLVMIRParser.IntLit);
			this.state = 1044;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1040;
				this.match(LLVMIRParser.Comma);
				this.state = 1041;
				this.match(LLVMIRParser.IntLit);
				}
				}
				this.state = 1046;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1047;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public useListOrderBB(): UseListOrderBBContext {
		let _localctx: UseListOrderBBContext = new UseListOrderBBContext(this._ctx, this.state);
		this.enterRule(_localctx, 36, LLVMIRParser.RULE_useListOrderBB);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1049;
			this.match(LLVMIRParser.KwUselistorderBb);
			this.state = 1050;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 1051;
			this.match(LLVMIRParser.Comma);
			this.state = 1052;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 1053;
			this.match(LLVMIRParser.Comma);
			this.state = 1054;
			this.match(LLVMIRParser.LBraces);
			this.state = 1055;
			this.match(LLVMIRParser.IntLit);
			this.state = 1060;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1056;
				this.match(LLVMIRParser.Comma);
				this.state = 1057;
				this.match(LLVMIRParser.IntLit);
				}
				}
				this.state = 1062;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1063;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcHeader(): FuncHeaderContext {
		let _localctx: FuncHeaderContext = new FuncHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 38, LLVMIRParser.RULE_funcHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1066;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 225)) & ~0x1F) === 0 && ((1 << (_la - 225)) & ((1 << (LLVMIRParser.KwWeak - 225)) | (1 << (LLVMIRParser.KwExternWeak - 225)) | (1 << (LLVMIRParser.KwExternal - 225)) | (1 << (LLVMIRParser.KwAppending - 225)) | (1 << (LLVMIRParser.KwAvailableExternally - 225)) | (1 << (LLVMIRParser.KwCommon - 225)) | (1 << (LLVMIRParser.KwInternal - 225)) | (1 << (LLVMIRParser.KwLinkonce - 225)) | (1 << (LLVMIRParser.KwLinkonceOdr - 225)) | (1 << (LLVMIRParser.KwPrivate - 225)) | (1 << (LLVMIRParser.KwWeakOdr - 225)))) !== 0)) {
				{
				this.state = 1065;
				this.linkage();
				}
			}

			this.state = 1069;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDsoLocal || _la === LLVMIRParser.KwDsoPreemptable) {
				{
				this.state = 1068;
				this.preemption();
				}
			}

			this.state = 1072;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 244)) & ~0x1F) === 0 && ((1 << (_la - 244)) & ((1 << (LLVMIRParser.Kwdefault - 244)) | (1 << (LLVMIRParser.KwHidden - 244)) | (1 << (LLVMIRParser.KwProtected - 244)))) !== 0)) {
				{
				this.state = 1071;
				this.visibility();
				}
			}

			this.state = 1075;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDllexport || _la === LLVMIRParser.KwDllimport) {
				{
				this.state = 1074;
				this.dllStorageClass();
				}
			}

			this.state = 1078;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCc || ((((_la - 337)) & ~0x1F) === 0 && ((1 << (_la - 337)) & ((1 << (LLVMIRParser.KwAarch64SveVectorPcs - 337)) | (1 << (LLVMIRParser.KwAarch64VectorPcs - 337)) | (1 << (LLVMIRParser.KwAmdgpuCs - 337)) | (1 << (LLVMIRParser.KwAmdgpuEs - 337)) | (1 << (LLVMIRParser.KwAmdgpuGfx - 337)) | (1 << (LLVMIRParser.KwAmdgpuGs - 337)) | (1 << (LLVMIRParser.KwAmdgpuHs - 337)) | (1 << (LLVMIRParser.KwAmdgpuKernel - 337)) | (1 << (LLVMIRParser.KwAmdgpuLs - 337)) | (1 << (LLVMIRParser.KwAmdgpuPs - 337)) | (1 << (LLVMIRParser.KwAmdgpuVs - 337)) | (1 << (LLVMIRParser.KwAnyregcc - 337)) | (1 << (LLVMIRParser.KwArmAapcsVfpcc - 337)) | (1 << (LLVMIRParser.KwArmAapcscc - 337)) | (1 << (LLVMIRParser.KwArmApcscc - 337)) | (1 << (LLVMIRParser.KwAvrIntrcc - 337)) | (1 << (LLVMIRParser.KwAvrSignalcc - 337)) | (1 << (LLVMIRParser.KwCcc - 337)) | (1 << (LLVMIRParser.KwCfguardCheckcc - 337)) | (1 << (LLVMIRParser.KwColdcc - 337)) | (1 << (LLVMIRParser.KwCxxFastTlscc - 337)) | (1 << (LLVMIRParser.KwFastcc - 337)) | (1 << (LLVMIRParser.KwGhccc - 337)) | (1 << (LLVMIRParser.KwHhvmCcc - 337)) | (1 << (LLVMIRParser.KwHhvmcc - 337)) | (1 << (LLVMIRParser.KwIntelOclBicc - 337)) | (1 << (LLVMIRParser.KwMsp430Intrcc - 337)) | (1 << (LLVMIRParser.KwPreserveAllcc - 337)) | (1 << (LLVMIRParser.KwPreserveMostcc - 337)) | (1 << (LLVMIRParser.KwPtxDevice - 337)) | (1 << (LLVMIRParser.KwPtxKernel - 337)) | (1 << (LLVMIRParser.KwSpirFunc - 337)))) !== 0) || ((((_la - 369)) & ~0x1F) === 0 && ((1 << (_la - 369)) & ((1 << (LLVMIRParser.KwSpirKernel - 369)) | (1 << (LLVMIRParser.KwSwiftcc - 369)) | (1 << (LLVMIRParser.KwSwifttailcc - 369)) | (1 << (LLVMIRParser.KwTailcc - 369)) | (1 << (LLVMIRParser.KwWebkitJscc - 369)) | (1 << (LLVMIRParser.KwWin64cc - 369)) | (1 << (LLVMIRParser.KwX8664Sysvcc - 369)) | (1 << (LLVMIRParser.KwX86Fastcallcc - 369)) | (1 << (LLVMIRParser.KwX86Intrcc - 369)) | (1 << (LLVMIRParser.KwX86Regcallcc - 369)) | (1 << (LLVMIRParser.KwX86Stdcallcc - 369)) | (1 << (LLVMIRParser.KwX86Thiscallcc - 369)) | (1 << (LLVMIRParser.KwX86Vectorcallcc - 369)))) !== 0)) {
				{
				this.state = 1077;
				this.callingConv();
				}
			}

			this.state = 1083;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 186)) & ~0x1F) === 0 && ((1 << (_la - 186)) & ((1 << (LLVMIRParser.KwDereferenceable - 186)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 186)) | (1 << (LLVMIRParser.KwInreg - 186)) | (1 << (LLVMIRParser.KwNoalias - 186)) | (1 << (LLVMIRParser.KwNonnull - 186)) | (1 << (LLVMIRParser.KwNoundef - 186)) | (1 << (LLVMIRParser.KwSignext - 186)) | (1 << (LLVMIRParser.KwZeroext - 186)))) !== 0)) {
				{
				{
				this.state = 1080;
				this.returnAttribute();
				}
				}
				this.state = 1085;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1086;
			this.type(0);
			this.state = 1087;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 1088;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1089;
			this.params();
			this.state = 1090;
			this.match(LLVMIRParser.RParenthesis);
			this.state = 1092;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLocalUnnamedAddr || _la === LLVMIRParser.KwUnnamedAddr) {
				{
				this.state = 1091;
				this.unnamedAddr();
				}
			}

			this.state = 1095;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 1094;
				this.addrSpace();
				}
			}

			this.state = 1100;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 131)) & ~0x1F) === 0 && ((1 << (_la - 131)) & ((1 << (LLVMIRParser.KwComdat - 131)) | (1 << (LLVMIRParser.KwGc - 131)) | (1 << (LLVMIRParser.KwPrefix - 131)) | (1 << (LLVMIRParser.KwPrologue - 131)) | (1 << (LLVMIRParser.KwPersonality - 131)) | (1 << (LLVMIRParser.KwSanitizeMemtag - 131)) | (1 << (LLVMIRParser.KwSection - 131)) | (1 << (LLVMIRParser.KwPartition - 131)))) !== 0) || ((((_la - 173)) & ~0x1F) === 0 && ((1 << (_la - 173)) & ((1 << (LLVMIRParser.KwAlignstack - 173)) | (1 << (LLVMIRParser.KwAlign - 173)) | (1 << (LLVMIRParser.KwAllockind - 173)) | (1 << (LLVMIRParser.KwAllocsize - 173)) | (1 << (LLVMIRParser.KwUwtable - 173)) | (1 << (LLVMIRParser.KwVscaleRange - 173)) | (1 << (LLVMIRParser.KwNofree - 173)) | (1 << (LLVMIRParser.KwReadnone - 173)) | (1 << (LLVMIRParser.KwReadonly - 173)))) !== 0) || _la === LLVMIRParser.KwWriteonly || _la === LLVMIRParser.KwPreallocated || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 1097;
				this.funcHdrField();
				}
				}
				this.state = 1102;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indirectSymbol(): IndirectSymbolContext {
		let _localctx: IndirectSymbolContext = new IndirectSymbolContext(this._ctx, this.state);
		this.enterRule(_localctx, 40, LLVMIRParser.RULE_indirectSymbol);
		try {
			this.state = 1108;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.LocalIdent:
			case LLVMIRParser.IntType:
			case LLVMIRParser.KwLabel:
			case LLVMIRParser.KwVoid:
			case LLVMIRParser.KwOpaque:
			case LLVMIRParser.KwX86Mmx:
			case LLVMIRParser.KwToken:
			case LLVMIRParser.KwPtr:
			case LLVMIRParser.KwMetadata:
			case LLVMIRParser.KwHalf:
			case LLVMIRParser.KwBfloat:
			case LLVMIRParser.KwFloat:
			case LLVMIRParser.KwDouble:
			case LLVMIRParser.KwX86Fp80:
			case LLVMIRParser.KwFp128:
			case LLVMIRParser.KwPpcFp128:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1103;
				this.typeConst();
				}
				break;
			case LLVMIRParser.OpBitcast:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1104;
				this.bitCastExpr();
				}
				break;
			case LLVMIRParser.KwGetelementptr:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1105;
				this.getElementPtrExpr();
				}
				break;
			case LLVMIRParser.OpAddrspacecast:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1106;
				this.addrSpaceCastExpr();
				}
				break;
			case LLVMIRParser.OpInttoptr:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1107;
				this.intToPtrExpr();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public callingConv(): CallingConvContext {
		let _localctx: CallingConvContext = new CallingConvContext(this._ctx, this.state);
		this.enterRule(_localctx, 42, LLVMIRParser.RULE_callingConv);
		try {
			this.state = 1112;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwAarch64SveVectorPcs:
			case LLVMIRParser.KwAarch64VectorPcs:
			case LLVMIRParser.KwAmdgpuCs:
			case LLVMIRParser.KwAmdgpuEs:
			case LLVMIRParser.KwAmdgpuGfx:
			case LLVMIRParser.KwAmdgpuGs:
			case LLVMIRParser.KwAmdgpuHs:
			case LLVMIRParser.KwAmdgpuKernel:
			case LLVMIRParser.KwAmdgpuLs:
			case LLVMIRParser.KwAmdgpuPs:
			case LLVMIRParser.KwAmdgpuVs:
			case LLVMIRParser.KwAnyregcc:
			case LLVMIRParser.KwArmAapcsVfpcc:
			case LLVMIRParser.KwArmAapcscc:
			case LLVMIRParser.KwArmApcscc:
			case LLVMIRParser.KwAvrIntrcc:
			case LLVMIRParser.KwAvrSignalcc:
			case LLVMIRParser.KwCcc:
			case LLVMIRParser.KwCfguardCheckcc:
			case LLVMIRParser.KwColdcc:
			case LLVMIRParser.KwCxxFastTlscc:
			case LLVMIRParser.KwFastcc:
			case LLVMIRParser.KwGhccc:
			case LLVMIRParser.KwHhvmCcc:
			case LLVMIRParser.KwHhvmcc:
			case LLVMIRParser.KwIntelOclBicc:
			case LLVMIRParser.KwMsp430Intrcc:
			case LLVMIRParser.KwPreserveAllcc:
			case LLVMIRParser.KwPreserveMostcc:
			case LLVMIRParser.KwPtxDevice:
			case LLVMIRParser.KwPtxKernel:
			case LLVMIRParser.KwSpirFunc:
			case LLVMIRParser.KwSpirKernel:
			case LLVMIRParser.KwSwiftcc:
			case LLVMIRParser.KwSwifttailcc:
			case LLVMIRParser.KwTailcc:
			case LLVMIRParser.KwWebkitJscc:
			case LLVMIRParser.KwWin64cc:
			case LLVMIRParser.KwX8664Sysvcc:
			case LLVMIRParser.KwX86Fastcallcc:
			case LLVMIRParser.KwX86Intrcc:
			case LLVMIRParser.KwX86Regcallcc:
			case LLVMIRParser.KwX86Stdcallcc:
			case LLVMIRParser.KwX86Thiscallcc:
			case LLVMIRParser.KwX86Vectorcallcc:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1110;
				this.callingConvEnum();
				}
				break;
			case LLVMIRParser.KwCc:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1111;
				this.callingConvInt();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public callingConvInt(): CallingConvIntContext {
		let _localctx: CallingConvIntContext = new CallingConvIntContext(this._ctx, this.state);
		this.enterRule(_localctx, 44, LLVMIRParser.RULE_callingConvInt);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1114;
			this.match(LLVMIRParser.KwCc);
			this.state = 1115;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcHdrField(): FuncHdrFieldContext {
		let _localctx: FuncHdrFieldContext = new FuncHdrFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 46, LLVMIRParser.RULE_funcHdrField);
		try {
			this.state = 1126;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 51, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1117;
				this.funcAttribute();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1118;
				this.section();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1119;
				this.partition();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1120;
				this.comdat();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1121;
				this.align();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1122;
				this.gc();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1123;
				this.prefix();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1124;
				this.prologue();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1125;
				this.personality();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public gc(): GcContext {
		let _localctx: GcContext = new GcContext(this._ctx, this.state);
		this.enterRule(_localctx, 48, LLVMIRParser.RULE_gc);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1128;
			this.match(LLVMIRParser.KwGc);
			this.state = 1129;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public prefix(): PrefixContext {
		let _localctx: PrefixContext = new PrefixContext(this._ctx, this.state);
		this.enterRule(_localctx, 50, LLVMIRParser.RULE_prefix);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1131;
			this.match(LLVMIRParser.KwPrefix);
			this.state = 1132;
			this.typeConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public prologue(): PrologueContext {
		let _localctx: PrologueContext = new PrologueContext(this._ctx, this.state);
		this.enterRule(_localctx, 52, LLVMIRParser.RULE_prologue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1134;
			this.match(LLVMIRParser.KwPrologue);
			this.state = 1135;
			this.typeConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public personality(): PersonalityContext {
		let _localctx: PersonalityContext = new PersonalityContext(this._ctx, this.state);
		this.enterRule(_localctx, 54, LLVMIRParser.RULE_personality);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1137;
			this.match(LLVMIRParser.KwPersonality);
			this.state = 1138;
			this.typeConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public returnAttribute(): ReturnAttributeContext {
		let _localctx: ReturnAttributeContext = new ReturnAttributeContext(this._ctx, this.state);
		this.enterRule(_localctx, 56, LLVMIRParser.RULE_returnAttribute);
		try {
			this.state = 1142;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwInreg:
			case LLVMIRParser.KwNoalias:
			case LLVMIRParser.KwNonnull:
			case LLVMIRParser.KwNoundef:
			case LLVMIRParser.KwSignext:
			case LLVMIRParser.KwZeroext:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1140;
				this.returnAttr();
				}
				break;
			case LLVMIRParser.KwDereferenceable:
			case LLVMIRParser.KwDereferenceableOrNull:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1141;
				this.dereferenceable();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcBody(): FuncBodyContext {
		let _localctx: FuncBodyContext = new FuncBodyContext(this._ctx, this.state);
		this.enterRule(_localctx, 58, LLVMIRParser.RULE_funcBody);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1144;
			this.match(LLVMIRParser.LBraces);
			this.state = 1146;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			do {
				{
				{
				this.state = 1145;
				this.basicBlock();
				}
				}
				this.state = 1148;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			} while (((((_la - 35)) & ~0x1F) === 0 && ((1 << (_la - 35)) & ((1 << (LLVMIRParser.LocalIdent - 35)) | (1 << (LLVMIRParser.LabelIdent - 35)) | (1 << (LLVMIRParser.OpBitcast - 35)) | (1 << (LLVMIRParser.OpAddrspacecast - 35)) | (1 << (LLVMIRParser.OpInttoptr - 35)) | (1 << (LLVMIRParser.OpIcmp - 35)) | (1 << (LLVMIRParser.OpFcmp - 35)) | (1 << (LLVMIRParser.OpSelect - 35)) | (1 << (LLVMIRParser.OpTrunc - 35)))) !== 0) || ((((_la - 67)) & ~0x1F) === 0 && ((1 << (_la - 67)) & ((1 << (LLVMIRParser.OpZext - 67)) | (1 << (LLVMIRParser.OpSext - 67)) | (1 << (LLVMIRParser.OpFptrunc - 67)) | (1 << (LLVMIRParser.OpFpext - 67)) | (1 << (LLVMIRParser.OpFptoui - 67)) | (1 << (LLVMIRParser.OpFptosi - 67)) | (1 << (LLVMIRParser.OpUitofp - 67)) | (1 << (LLVMIRParser.OpSitofp - 67)) | (1 << (LLVMIRParser.OpPtrtoint - 67)) | (1 << (LLVMIRParser.OpExtractelement - 67)) | (1 << (LLVMIRParser.OpInsertelement - 67)) | (1 << (LLVMIRParser.OpShufflevector - 67)) | (1 << (LLVMIRParser.OpShl - 67)) | (1 << (LLVMIRParser.OpLshr - 67)) | (1 << (LLVMIRParser.OpAshr - 67)) | (1 << (LLVMIRParser.OpAnd - 67)) | (1 << (LLVMIRParser.OpOr - 67)) | (1 << (LLVMIRParser.OpXor - 67)) | (1 << (LLVMIRParser.OpAdd - 67)) | (1 << (LLVMIRParser.OpSub - 67)) | (1 << (LLVMIRParser.OpMul - 67)) | (1 << (LLVMIRParser.OpFneg - 67)) | (1 << (LLVMIRParser.OpStore - 67)) | (1 << (LLVMIRParser.OpFence - 67)) | (1 << (LLVMIRParser.OpFadd - 67)) | (1 << (LLVMIRParser.OpFsub - 67)) | (1 << (LLVMIRParser.OpFmul - 67)) | (1 << (LLVMIRParser.OpUdiv - 67)) | (1 << (LLVMIRParser.OpSdiv - 67)) | (1 << (LLVMIRParser.OpFdiv - 67)) | (1 << (LLVMIRParser.OpUrem - 67)) | (1 << (LLVMIRParser.OpSrem - 67)))) !== 0) || ((((_la - 99)) & ~0x1F) === 0 && ((1 << (_la - 99)) & ((1 << (LLVMIRParser.OpFrem - 99)) | (1 << (LLVMIRParser.OpExtractvalue - 99)) | (1 << (LLVMIRParser.OpInsertvalue - 99)) | (1 << (LLVMIRParser.OpAlloca - 99)) | (1 << (LLVMIRParser.OpLoad - 99)) | (1 << (LLVMIRParser.OpCmpxchg - 99)) | (1 << (LLVMIRParser.OpAtomicrmw - 99)) | (1 << (LLVMIRParser.OpPhi - 99)) | (1 << (LLVMIRParser.OpFreeze - 99)) | (1 << (LLVMIRParser.OpCall - 99)) | (1 << (LLVMIRParser.OpVaArg - 99)) | (1 << (LLVMIRParser.OpCatchpad - 99)) | (1 << (LLVMIRParser.OpCleanuppad - 99)) | (1 << (LLVMIRParser.OpRet - 99)) | (1 << (LLVMIRParser.OpBr - 99)) | (1 << (LLVMIRParser.OpSwitch - 99)) | (1 << (LLVMIRParser.OpIndirectbr - 99)) | (1 << (LLVMIRParser.OpResume - 99)) | (1 << (LLVMIRParser.OpCatchret - 99)) | (1 << (LLVMIRParser.OpCleanupret - 99)) | (1 << (LLVMIRParser.OpUnreachable - 99)) | (1 << (LLVMIRParser.OpInvoke - 99)) | (1 << (LLVMIRParser.OpCallbr - 99)) | (1 << (LLVMIRParser.OpCatchswitch - 99)) | (1 << (LLVMIRParser.OpLandingpad - 99)))) !== 0) || ((((_la - 219)) & ~0x1F) === 0 && ((1 << (_la - 219)) & ((1 << (LLVMIRParser.KwGetelementptr - 219)) | (1 << (LLVMIRParser.KwMusttail - 219)) | (1 << (LLVMIRParser.KwNotail - 219)) | (1 << (LLVMIRParser.KwTail - 219)))) !== 0));
			this.state = 1153;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwUselistorder) {
				{
				{
				this.state = 1150;
				this.useListOrder();
				}
				}
				this.state = 1155;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1156;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public basicBlock(): BasicBlockContext {
		let _localctx: BasicBlockContext = new BasicBlockContext(this._ctx, this.state);
		this.enterRule(_localctx, 60, LLVMIRParser.RULE_basicBlock);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1159;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LabelIdent) {
				{
				this.state = 1158;
				this.match(LLVMIRParser.LabelIdent);
				}
			}

			this.state = 1164;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 56, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 1161;
					this.instruction();
					}
					}
				}
				this.state = 1166;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 56, this._ctx);
			}
			this.state = 1167;
			this.terminator();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instruction(): InstructionContext {
		let _localctx: InstructionContext = new InstructionContext(this._ctx, this.state);
		this.enterRule(_localctx, 62, LLVMIRParser.RULE_instruction);
		try {
			this.state = 1173;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.LocalIdent:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1169;
				this.localDefInst();
				}
				break;
			case LLVMIRParser.OpBitcast:
			case LLVMIRParser.OpAddrspacecast:
			case LLVMIRParser.OpInttoptr:
			case LLVMIRParser.OpIcmp:
			case LLVMIRParser.OpFcmp:
			case LLVMIRParser.OpSelect:
			case LLVMIRParser.OpTrunc:
			case LLVMIRParser.OpZext:
			case LLVMIRParser.OpSext:
			case LLVMIRParser.OpFptrunc:
			case LLVMIRParser.OpFpext:
			case LLVMIRParser.OpFptoui:
			case LLVMIRParser.OpFptosi:
			case LLVMIRParser.OpUitofp:
			case LLVMIRParser.OpSitofp:
			case LLVMIRParser.OpPtrtoint:
			case LLVMIRParser.OpExtractelement:
			case LLVMIRParser.OpInsertelement:
			case LLVMIRParser.OpShufflevector:
			case LLVMIRParser.OpShl:
			case LLVMIRParser.OpLshr:
			case LLVMIRParser.OpAshr:
			case LLVMIRParser.OpAnd:
			case LLVMIRParser.OpOr:
			case LLVMIRParser.OpXor:
			case LLVMIRParser.OpAdd:
			case LLVMIRParser.OpSub:
			case LLVMIRParser.OpMul:
			case LLVMIRParser.OpFneg:
			case LLVMIRParser.OpFadd:
			case LLVMIRParser.OpFsub:
			case LLVMIRParser.OpFmul:
			case LLVMIRParser.OpUdiv:
			case LLVMIRParser.OpSdiv:
			case LLVMIRParser.OpFdiv:
			case LLVMIRParser.OpUrem:
			case LLVMIRParser.OpSrem:
			case LLVMIRParser.OpFrem:
			case LLVMIRParser.OpExtractvalue:
			case LLVMIRParser.OpInsertvalue:
			case LLVMIRParser.OpAlloca:
			case LLVMIRParser.OpLoad:
			case LLVMIRParser.OpCmpxchg:
			case LLVMIRParser.OpAtomicrmw:
			case LLVMIRParser.OpPhi:
			case LLVMIRParser.OpFreeze:
			case LLVMIRParser.OpCall:
			case LLVMIRParser.OpVaArg:
			case LLVMIRParser.OpCatchpad:
			case LLVMIRParser.OpCleanuppad:
			case LLVMIRParser.OpLandingpad:
			case LLVMIRParser.KwGetelementptr:
			case LLVMIRParser.KwMusttail:
			case LLVMIRParser.KwNotail:
			case LLVMIRParser.KwTail:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1170;
				this.valueInstruction();
				}
				break;
			case LLVMIRParser.OpStore:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1171;
				this.storeInst();
				}
				break;
			case LLVMIRParser.OpFence:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1172;
				this.fenceInst();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public terminator(): TerminatorContext {
		let _localctx: TerminatorContext = new TerminatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 64, LLVMIRParser.RULE_terminator);
		try {
			this.state = 1186;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 58, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1175;
				this.localDefTerm();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1176;
				this.valueTerminator();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1177;
				this.retTerm();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1178;
				this.brTerm();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1179;
				this.condBrTerm();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1180;
				this.switchTerm();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1181;
				this.indirectBrTerm();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1182;
				this.resumeTerm();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1183;
				this.catchRetTerm();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1184;
				this.cleanupRetTerm();
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 1185;
				this.unreachableTerm();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localDefTerm(): LocalDefTermContext {
		let _localctx: LocalDefTermContext = new LocalDefTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 66, LLVMIRParser.RULE_localDefTerm);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1188;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 1189;
			this.match(LLVMIRParser.Equal);
			this.state = 1190;
			this.valueTerminator();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public valueTerminator(): ValueTerminatorContext {
		let _localctx: ValueTerminatorContext = new ValueTerminatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 68, LLVMIRParser.RULE_valueTerminator);
		try {
			this.state = 1195;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.OpInvoke:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1192;
				this.invokeTerm();
				}
				break;
			case LLVMIRParser.OpCallbr:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1193;
				this.callBrTerm();
				}
				break;
			case LLVMIRParser.OpCatchswitch:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1194;
				this.catchSwitchTerm();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public retTerm(): RetTermContext {
		let _localctx: RetTermContext = new RetTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 70, LLVMIRParser.RULE_retTerm);
		let _la: number;
		try {
			this.state = 1216;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 62, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1197;
				this.match(LLVMIRParser.OpRet);
				this.state = 1198;
				this.voidType();
				this.state = 1203;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1199;
					this.match(LLVMIRParser.Comma);
					this.state = 1200;
					this.metadataAttachment();
					}
					}
					this.state = 1205;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1206;
				this.match(LLVMIRParser.OpRet);
				this.state = 1207;
				this.concreteType();
				this.state = 1208;
				this.value();
				this.state = 1213;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1209;
					this.match(LLVMIRParser.Comma);
					this.state = 1210;
					this.metadataAttachment();
					}
					}
					this.state = 1215;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public brTerm(): BrTermContext {
		let _localctx: BrTermContext = new BrTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 72, LLVMIRParser.RULE_brTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1218;
			this.match(LLVMIRParser.OpBr);
			this.state = 1219;
			this.label();
			this.state = 1224;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1220;
				this.match(LLVMIRParser.Comma);
				this.state = 1221;
				this.metadataAttachment();
				}
				}
				this.state = 1226;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public condBrTerm(): CondBrTermContext {
		let _localctx: CondBrTermContext = new CondBrTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 74, LLVMIRParser.RULE_condBrTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1227;
			this.match(LLVMIRParser.OpBr);
			this.state = 1228;
			this.match(LLVMIRParser.IntType);
			this.state = 1229;
			this.value();
			this.state = 1230;
			this.match(LLVMIRParser.Comma);
			this.state = 1231;
			this.label();
			this.state = 1232;
			this.match(LLVMIRParser.Comma);
			this.state = 1233;
			this.label();
			this.state = 1238;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1234;
				this.match(LLVMIRParser.Comma);
				this.state = 1235;
				this.metadataAttachment();
				}
				}
				this.state = 1240;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public switchTerm(): SwitchTermContext {
		let _localctx: SwitchTermContext = new SwitchTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 76, LLVMIRParser.RULE_switchTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1241;
			this.match(LLVMIRParser.OpSwitch);
			this.state = 1242;
			this.typeValue();
			this.state = 1243;
			this.match(LLVMIRParser.Comma);
			this.state = 1244;
			this.label();
			this.state = 1245;
			this.match(LLVMIRParser.LBracket);
			this.state = 1249;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				{
				this.state = 1246;
				this.case();
				}
				}
				this.state = 1251;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1252;
			this.match(LLVMIRParser.RBracket);
			this.state = 1257;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1253;
				this.match(LLVMIRParser.Comma);
				this.state = 1254;
				this.metadataAttachment();
				}
				}
				this.state = 1259;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indirectBrTerm(): IndirectBrTermContext {
		let _localctx: IndirectBrTermContext = new IndirectBrTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 78, LLVMIRParser.RULE_indirectBrTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1260;
			this.match(LLVMIRParser.OpIndirectbr);
			this.state = 1261;
			this.typeValue();
			this.state = 1262;
			this.match(LLVMIRParser.Comma);
			this.state = 1263;
			this.match(LLVMIRParser.LBracket);
			this.state = 1269;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLabel) {
				{
				this.state = 1264;
				this.label();
				this.state = 1267;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.Comma) {
					{
					this.state = 1265;
					this.match(LLVMIRParser.Comma);
					this.state = 1266;
					this.label();
					}
				}

				}
			}

			this.state = 1271;
			this.match(LLVMIRParser.RBracket);
			this.state = 1276;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1272;
				this.match(LLVMIRParser.Comma);
				this.state = 1273;
				this.metadataAttachment();
				}
				}
				this.state = 1278;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public resumeTerm(): ResumeTermContext {
		let _localctx: ResumeTermContext = new ResumeTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 80, LLVMIRParser.RULE_resumeTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1279;
			this.match(LLVMIRParser.OpResume);
			this.state = 1280;
			this.typeValue();
			this.state = 1285;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1281;
				this.match(LLVMIRParser.Comma);
				this.state = 1282;
				this.metadataAttachment();
				}
				}
				this.state = 1287;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public catchRetTerm(): CatchRetTermContext {
		let _localctx: CatchRetTermContext = new CatchRetTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 82, LLVMIRParser.RULE_catchRetTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1288;
			this.match(LLVMIRParser.OpCatchret);
			this.state = 1289;
			this.match(LLVMIRParser.KwFrom);
			this.state = 1290;
			this.value();
			this.state = 1291;
			this.match(LLVMIRParser.KwTo);
			this.state = 1292;
			this.label();
			this.state = 1297;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1293;
				this.match(LLVMIRParser.Comma);
				this.state = 1294;
				this.metadataAttachment();
				}
				}
				this.state = 1299;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cleanupRetTerm(): CleanupRetTermContext {
		let _localctx: CleanupRetTermContext = new CleanupRetTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 84, LLVMIRParser.RULE_cleanupRetTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1300;
			this.match(LLVMIRParser.OpCleanupret);
			this.state = 1301;
			this.match(LLVMIRParser.KwFrom);
			this.state = 1302;
			this.value();
			this.state = 1303;
			this.match(LLVMIRParser.KwUnwind);
			this.state = 1304;
			this.unwindTarget();
			this.state = 1309;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1305;
				this.match(LLVMIRParser.Comma);
				this.state = 1306;
				this.metadataAttachment();
				}
				}
				this.state = 1311;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unreachableTerm(): UnreachableTermContext {
		let _localctx: UnreachableTermContext = new UnreachableTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 86, LLVMIRParser.RULE_unreachableTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1312;
			this.match(LLVMIRParser.OpUnreachable);
			this.state = 1317;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1313;
				this.match(LLVMIRParser.Comma);
				this.state = 1314;
				this.metadataAttachment();
				}
				}
				this.state = 1319;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public invokeTerm(): InvokeTermContext {
		let _localctx: InvokeTermContext = new InvokeTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 88, LLVMIRParser.RULE_invokeTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1320;
			this.match(LLVMIRParser.OpInvoke);
			this.state = 1322;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCc || ((((_la - 337)) & ~0x1F) === 0 && ((1 << (_la - 337)) & ((1 << (LLVMIRParser.KwAarch64SveVectorPcs - 337)) | (1 << (LLVMIRParser.KwAarch64VectorPcs - 337)) | (1 << (LLVMIRParser.KwAmdgpuCs - 337)) | (1 << (LLVMIRParser.KwAmdgpuEs - 337)) | (1 << (LLVMIRParser.KwAmdgpuGfx - 337)) | (1 << (LLVMIRParser.KwAmdgpuGs - 337)) | (1 << (LLVMIRParser.KwAmdgpuHs - 337)) | (1 << (LLVMIRParser.KwAmdgpuKernel - 337)) | (1 << (LLVMIRParser.KwAmdgpuLs - 337)) | (1 << (LLVMIRParser.KwAmdgpuPs - 337)) | (1 << (LLVMIRParser.KwAmdgpuVs - 337)) | (1 << (LLVMIRParser.KwAnyregcc - 337)) | (1 << (LLVMIRParser.KwArmAapcsVfpcc - 337)) | (1 << (LLVMIRParser.KwArmAapcscc - 337)) | (1 << (LLVMIRParser.KwArmApcscc - 337)) | (1 << (LLVMIRParser.KwAvrIntrcc - 337)) | (1 << (LLVMIRParser.KwAvrSignalcc - 337)) | (1 << (LLVMIRParser.KwCcc - 337)) | (1 << (LLVMIRParser.KwCfguardCheckcc - 337)) | (1 << (LLVMIRParser.KwColdcc - 337)) | (1 << (LLVMIRParser.KwCxxFastTlscc - 337)) | (1 << (LLVMIRParser.KwFastcc - 337)) | (1 << (LLVMIRParser.KwGhccc - 337)) | (1 << (LLVMIRParser.KwHhvmCcc - 337)) | (1 << (LLVMIRParser.KwHhvmcc - 337)) | (1 << (LLVMIRParser.KwIntelOclBicc - 337)) | (1 << (LLVMIRParser.KwMsp430Intrcc - 337)) | (1 << (LLVMIRParser.KwPreserveAllcc - 337)) | (1 << (LLVMIRParser.KwPreserveMostcc - 337)) | (1 << (LLVMIRParser.KwPtxDevice - 337)) | (1 << (LLVMIRParser.KwPtxKernel - 337)) | (1 << (LLVMIRParser.KwSpirFunc - 337)))) !== 0) || ((((_la - 369)) & ~0x1F) === 0 && ((1 << (_la - 369)) & ((1 << (LLVMIRParser.KwSpirKernel - 369)) | (1 << (LLVMIRParser.KwSwiftcc - 369)) | (1 << (LLVMIRParser.KwSwifttailcc - 369)) | (1 << (LLVMIRParser.KwTailcc - 369)) | (1 << (LLVMIRParser.KwWebkitJscc - 369)) | (1 << (LLVMIRParser.KwWin64cc - 369)) | (1 << (LLVMIRParser.KwX8664Sysvcc - 369)) | (1 << (LLVMIRParser.KwX86Fastcallcc - 369)) | (1 << (LLVMIRParser.KwX86Intrcc - 369)) | (1 << (LLVMIRParser.KwX86Regcallcc - 369)) | (1 << (LLVMIRParser.KwX86Stdcallcc - 369)) | (1 << (LLVMIRParser.KwX86Thiscallcc - 369)) | (1 << (LLVMIRParser.KwX86Vectorcallcc - 369)))) !== 0)) {
				{
				this.state = 1321;
				this.callingConv();
				}
			}

			this.state = 1327;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 186)) & ~0x1F) === 0 && ((1 << (_la - 186)) & ((1 << (LLVMIRParser.KwDereferenceable - 186)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 186)) | (1 << (LLVMIRParser.KwInreg - 186)) | (1 << (LLVMIRParser.KwNoalias - 186)) | (1 << (LLVMIRParser.KwNonnull - 186)) | (1 << (LLVMIRParser.KwNoundef - 186)) | (1 << (LLVMIRParser.KwSignext - 186)) | (1 << (LLVMIRParser.KwZeroext - 186)))) !== 0)) {
				{
				{
				this.state = 1324;
				this.returnAttribute();
				}
				}
				this.state = 1329;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1331;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 1330;
				this.addrSpace();
				}
			}

			this.state = 1333;
			this.type(0);
			this.state = 1334;
			this.value();
			this.state = 1335;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1336;
			this.args();
			this.state = 1337;
			this.match(LLVMIRParser.RParenthesis);
			this.state = 1341;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 1338;
				this.funcAttribute();
				}
				}
				this.state = 1343;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1354;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LBracket) {
				{
				this.state = 1344;
				this.match(LLVMIRParser.LBracket);
				this.state = 1348;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				do {
					{
					{
					this.state = 1345;
					this.operandBundle();
					this.state = 1346;
					this.match(LLVMIRParser.Comma);
					}
					}
					this.state = 1350;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				} while (_la === LLVMIRParser.StringLit);
				this.state = 1352;
				this.match(LLVMIRParser.RBracket);
				}
			}

			this.state = 1356;
			this.match(LLVMIRParser.KwTo);
			this.state = 1357;
			this.label();
			this.state = 1358;
			this.match(LLVMIRParser.KwUnwind);
			this.state = 1359;
			this.label();
			this.state = 1364;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1360;
				this.match(LLVMIRParser.Comma);
				this.state = 1361;
				this.metadataAttachment();
				}
				}
				this.state = 1366;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public callBrTerm(): CallBrTermContext {
		let _localctx: CallBrTermContext = new CallBrTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 90, LLVMIRParser.RULE_callBrTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1367;
			this.match(LLVMIRParser.OpCallbr);
			this.state = 1369;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCc || ((((_la - 337)) & ~0x1F) === 0 && ((1 << (_la - 337)) & ((1 << (LLVMIRParser.KwAarch64SveVectorPcs - 337)) | (1 << (LLVMIRParser.KwAarch64VectorPcs - 337)) | (1 << (LLVMIRParser.KwAmdgpuCs - 337)) | (1 << (LLVMIRParser.KwAmdgpuEs - 337)) | (1 << (LLVMIRParser.KwAmdgpuGfx - 337)) | (1 << (LLVMIRParser.KwAmdgpuGs - 337)) | (1 << (LLVMIRParser.KwAmdgpuHs - 337)) | (1 << (LLVMIRParser.KwAmdgpuKernel - 337)) | (1 << (LLVMIRParser.KwAmdgpuLs - 337)) | (1 << (LLVMIRParser.KwAmdgpuPs - 337)) | (1 << (LLVMIRParser.KwAmdgpuVs - 337)) | (1 << (LLVMIRParser.KwAnyregcc - 337)) | (1 << (LLVMIRParser.KwArmAapcsVfpcc - 337)) | (1 << (LLVMIRParser.KwArmAapcscc - 337)) | (1 << (LLVMIRParser.KwArmApcscc - 337)) | (1 << (LLVMIRParser.KwAvrIntrcc - 337)) | (1 << (LLVMIRParser.KwAvrSignalcc - 337)) | (1 << (LLVMIRParser.KwCcc - 337)) | (1 << (LLVMIRParser.KwCfguardCheckcc - 337)) | (1 << (LLVMIRParser.KwColdcc - 337)) | (1 << (LLVMIRParser.KwCxxFastTlscc - 337)) | (1 << (LLVMIRParser.KwFastcc - 337)) | (1 << (LLVMIRParser.KwGhccc - 337)) | (1 << (LLVMIRParser.KwHhvmCcc - 337)) | (1 << (LLVMIRParser.KwHhvmcc - 337)) | (1 << (LLVMIRParser.KwIntelOclBicc - 337)) | (1 << (LLVMIRParser.KwMsp430Intrcc - 337)) | (1 << (LLVMIRParser.KwPreserveAllcc - 337)) | (1 << (LLVMIRParser.KwPreserveMostcc - 337)) | (1 << (LLVMIRParser.KwPtxDevice - 337)) | (1 << (LLVMIRParser.KwPtxKernel - 337)) | (1 << (LLVMIRParser.KwSpirFunc - 337)))) !== 0) || ((((_la - 369)) & ~0x1F) === 0 && ((1 << (_la - 369)) & ((1 << (LLVMIRParser.KwSpirKernel - 369)) | (1 << (LLVMIRParser.KwSwiftcc - 369)) | (1 << (LLVMIRParser.KwSwifttailcc - 369)) | (1 << (LLVMIRParser.KwTailcc - 369)) | (1 << (LLVMIRParser.KwWebkitJscc - 369)) | (1 << (LLVMIRParser.KwWin64cc - 369)) | (1 << (LLVMIRParser.KwX8664Sysvcc - 369)) | (1 << (LLVMIRParser.KwX86Fastcallcc - 369)) | (1 << (LLVMIRParser.KwX86Intrcc - 369)) | (1 << (LLVMIRParser.KwX86Regcallcc - 369)) | (1 << (LLVMIRParser.KwX86Stdcallcc - 369)) | (1 << (LLVMIRParser.KwX86Thiscallcc - 369)) | (1 << (LLVMIRParser.KwX86Vectorcallcc - 369)))) !== 0)) {
				{
				this.state = 1368;
				this.callingConv();
				}
			}

			this.state = 1374;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 186)) & ~0x1F) === 0 && ((1 << (_la - 186)) & ((1 << (LLVMIRParser.KwDereferenceable - 186)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 186)) | (1 << (LLVMIRParser.KwInreg - 186)) | (1 << (LLVMIRParser.KwNoalias - 186)) | (1 << (LLVMIRParser.KwNonnull - 186)) | (1 << (LLVMIRParser.KwNoundef - 186)) | (1 << (LLVMIRParser.KwSignext - 186)) | (1 << (LLVMIRParser.KwZeroext - 186)))) !== 0)) {
				{
				{
				this.state = 1371;
				this.returnAttribute();
				}
				}
				this.state = 1376;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1378;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 1377;
				this.addrSpace();
				}
			}

			this.state = 1380;
			this.type(0);
			this.state = 1381;
			this.value();
			this.state = 1382;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1383;
			this.args();
			this.state = 1384;
			this.match(LLVMIRParser.RParenthesis);
			this.state = 1388;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 1385;
				this.funcAttribute();
				}
				}
				this.state = 1390;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1401;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LBracket) {
				{
				this.state = 1391;
				this.match(LLVMIRParser.LBracket);
				this.state = 1395;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				do {
					{
					{
					this.state = 1392;
					this.operandBundle();
					this.state = 1393;
					this.match(LLVMIRParser.Comma);
					}
					}
					this.state = 1397;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				} while (_la === LLVMIRParser.StringLit);
				this.state = 1399;
				this.match(LLVMIRParser.RBracket);
				}
			}

			this.state = 1403;
			this.match(LLVMIRParser.KwTo);
			this.state = 1404;
			this.label();
			this.state = 1405;
			this.match(LLVMIRParser.LBracket);
			this.state = 1414;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwLabel) {
				{
				this.state = 1406;
				this.label();
				this.state = 1411;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1407;
					this.match(LLVMIRParser.Comma);
					this.state = 1408;
					this.label();
					}
					}
					this.state = 1413;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1416;
			this.match(LLVMIRParser.RBracket);
			this.state = 1421;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1417;
				this.match(LLVMIRParser.Comma);
				this.state = 1418;
				this.metadataAttachment();
				}
				}
				this.state = 1423;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public catchSwitchTerm(): CatchSwitchTermContext {
		let _localctx: CatchSwitchTermContext = new CatchSwitchTermContext(this._ctx, this.state);
		this.enterRule(_localctx, 92, LLVMIRParser.RULE_catchSwitchTerm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1424;
			this.match(LLVMIRParser.OpCatchswitch);
			this.state = 1425;
			this.match(LLVMIRParser.KwWithin);
			this.state = 1426;
			this.exceptionPad();
			this.state = 1427;
			this.match(LLVMIRParser.LBracket);
			this.state = 1428;
			this.handlers();
			this.state = 1429;
			this.match(LLVMIRParser.RBracket);
			this.state = 1430;
			this.match(LLVMIRParser.KwUnwind);
			this.state = 1431;
			this.unwindTarget();
			this.state = 1436;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1432;
				this.match(LLVMIRParser.Comma);
				this.state = 1433;
				this.metadataAttachment();
				}
				}
				this.state = 1438;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public label(): LabelContext {
		let _localctx: LabelContext = new LabelContext(this._ctx, this.state);
		this.enterRule(_localctx, 94, LLVMIRParser.RULE_label);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1439;
			this.match(LLVMIRParser.KwLabel);
			this.state = 1440;
			this.match(LLVMIRParser.LocalIdent);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public case(): CaseContext {
		let _localctx: CaseContext = new CaseContext(this._ctx, this.state);
		this.enterRule(_localctx, 96, LLVMIRParser.RULE_case);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1442;
			this.typeConst();
			this.state = 1443;
			this.match(LLVMIRParser.Comma);
			this.state = 1444;
			this.label();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unwindTarget(): UnwindTargetContext {
		let _localctx: UnwindTargetContext = new UnwindTargetContext(this._ctx, this.state);
		this.enterRule(_localctx, 98, LLVMIRParser.RULE_unwindTarget);
		try {
			this.state = 1449;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTo:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1446;
				this.match(LLVMIRParser.KwTo);
				this.state = 1447;
				this.match(LLVMIRParser.KwCaller);
				}
				break;
			case LLVMIRParser.KwLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1448;
				this.label();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public handlers(): HandlersContext {
		let _localctx: HandlersContext = new HandlersContext(this._ctx, this.state);
		this.enterRule(_localctx, 100, LLVMIRParser.RULE_handlers);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1451;
			this.label();
			this.state = 1456;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 1452;
				this.match(LLVMIRParser.Comma);
				this.state = 1453;
				this.label();
				}
				}
				this.state = 1458;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public metadataNode(): MetadataNodeContext {
		let _localctx: MetadataNodeContext = new MetadataNodeContext(this._ctx, this.state);
		this.enterRule(_localctx, 102, LLVMIRParser.RULE_metadataNode);
		try {
			this.state = 1461;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.MetadataId:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1459;
				this.match(LLVMIRParser.MetadataId);
				}
				break;
			case LLVMIRParser.DIExpression:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1460;
				this.diExpression();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diExpression(): DiExpressionContext {
		let _localctx: DiExpressionContext = new DiExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 104, LLVMIRParser.RULE_diExpression);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1463;
			this.match(LLVMIRParser.DIExpression);
			this.state = 1464;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1473;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 31)) & ~0x1F) === 0 && ((1 << (_la - 31)) & ((1 << (LLVMIRParser.IntLit - 31)) | (1 << (LLVMIRParser.DwarfAttEncoding - 31)) | (1 << (LLVMIRParser.DwarfOp - 31)))) !== 0)) {
				{
				this.state = 1465;
				this.diExpressionField();
				this.state = 1470;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1466;
					this.match(LLVMIRParser.Comma);
					this.state = 1467;
					this.diExpressionField();
					}
					}
					this.state = 1472;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1475;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diExpressionField(): DiExpressionFieldContext {
		let _localctx: DiExpressionFieldContext = new DiExpressionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 106, LLVMIRParser.RULE_diExpressionField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1477;
			_la = this._input.LA(1);
			if (!(((((_la - 31)) & ~0x1F) === 0 && ((1 << (_la - 31)) & ((1 << (LLVMIRParser.IntLit - 31)) | (1 << (LLVMIRParser.DwarfAttEncoding - 31)) | (1 << (LLVMIRParser.DwarfOp - 31)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalField(): GlobalFieldContext {
		let _localctx: GlobalFieldContext = new GlobalFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 108, LLVMIRParser.RULE_globalField);
		let _la: number;
		try {
			this.state = 1484;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwSection:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1479;
				this.section();
				}
				break;
			case LLVMIRParser.KwPartition:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1480;
				this.partition();
				}
				break;
			case LLVMIRParser.KwComdat:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1481;
				this.comdat();
				}
				break;
			case LLVMIRParser.KwAlign:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1482;
				this.align();
				}
				break;
			case LLVMIRParser.KwNoSanitizeAddress:
			case LLVMIRParser.KwNoSanitizeHwaddress:
			case LLVMIRParser.KwSanitizeAddressDyninit:
			case LLVMIRParser.KwSanitizeMemtag:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1483;
				_localctx._sanitizerKind = this._input.LT(1);
				_la = this._input.LA(1);
				if (!(((((_la - 155)) & ~0x1F) === 0 && ((1 << (_la - 155)) & ((1 << (LLVMIRParser.KwNoSanitizeAddress - 155)) | (1 << (LLVMIRParser.KwNoSanitizeHwaddress - 155)) | (1 << (LLVMIRParser.KwSanitizeAddressDyninit - 155)) | (1 << (LLVMIRParser.KwSanitizeMemtag - 155)))) !== 0))) {
					_localctx._sanitizerKind = this._errHandler.recoverInline(this);
				} else {
					if (this._input.LA(1) === Token.EOF) {
						this.matchedEOF = true;
					}

					this._errHandler.reportMatch(this);
					this.consume();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public section(): SectionContext {
		let _localctx: SectionContext = new SectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 110, LLVMIRParser.RULE_section);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1486;
			this.match(LLVMIRParser.KwSection);
			this.state = 1487;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public comdat(): ComdatContext {
		let _localctx: ComdatContext = new ComdatContext(this._ctx, this.state);
		this.enterRule(_localctx, 112, LLVMIRParser.RULE_comdat);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1489;
			this.match(LLVMIRParser.KwComdat);
			this.state = 1493;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LParenthesis) {
				{
				this.state = 1490;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1491;
				this.match(LLVMIRParser.ComdatName);
				this.state = 1492;
				this.match(LLVMIRParser.RParenthesis);
				}
			}

			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public partition(): PartitionContext {
		let _localctx: PartitionContext = new PartitionContext(this._ctx, this.state);
		this.enterRule(_localctx, 114, LLVMIRParser.RULE_partition);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1495;
			this.match(LLVMIRParser.KwPartition);
			this.state = 1496;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public constant(): ConstantContext {
		let _localctx: ConstantContext = new ConstantContext(this._ctx, this.state);
		this.enterRule(_localctx, 116, LLVMIRParser.RULE_constant);
		try {
			this.state = 1514;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 98, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1498;
				this.boolConst();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1499;
				this.intConst();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1500;
				this.floatConst();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1501;
				this.nullConst();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1502;
				this.noneConst();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1503;
				this.structConst();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1504;
				this.arrayConst();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1505;
				this.vectorConst();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1506;
				this.zeroInitializerConst();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1507;
				this.match(LLVMIRParser.GlobalIdent);
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 1508;
				this.undefConst();
				}
				break;

			case 12:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 1509;
				this.poisonConst();
				}
				break;

			case 13:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 1510;
				this.blockAddressConst();
				}
				break;

			case 14:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 1511;
				this.dsoLocalEquivalentConst();
				}
				break;

			case 15:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 1512;
				this.noCFIConst();
				}
				break;

			case 16:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 1513;
				this.constantExpr();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public boolConst(): BoolConstContext {
		let _localctx: BoolConstContext = new BoolConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 118, LLVMIRParser.RULE_boolConst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1516;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwTrue || _la === LLVMIRParser.KwFalse)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public intConst(): IntConstContext {
		let _localctx: IntConstContext = new IntConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 120, LLVMIRParser.RULE_intConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1518;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public floatConst(): FloatConstContext {
		let _localctx: FloatConstContext = new FloatConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 122, LLVMIRParser.RULE_floatConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1520;
			this.match(LLVMIRParser.FloatLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nullConst(): NullConstContext {
		let _localctx: NullConstContext = new NullConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 124, LLVMIRParser.RULE_nullConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1522;
			this.match(LLVMIRParser.KwNull);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public noneConst(): NoneConstContext {
		let _localctx: NoneConstContext = new NoneConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 126, LLVMIRParser.RULE_noneConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1524;
			this.match(LLVMIRParser.Kwnone);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public structConst(): StructConstContext {
		let _localctx: StructConstContext = new StructConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 128, LLVMIRParser.RULE_structConst);
		let _la: number;
		try {
			this.state = 1552;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.LBraces:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1526;
				this.match(LLVMIRParser.LBraces);
				this.state = 1535;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
					{
					this.state = 1527;
					this.typeConst();
					this.state = 1532;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === LLVMIRParser.Comma) {
						{
						{
						this.state = 1528;
						this.match(LLVMIRParser.Comma);
						this.state = 1529;
						this.typeConst();
						}
						}
						this.state = 1534;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					}
				}

				this.state = 1537;
				this.match(LLVMIRParser.RBraces);
				}
				break;
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1538;
				this.match(LLVMIRParser.LAngleBrackets);
				this.state = 1539;
				this.match(LLVMIRParser.LBraces);
				this.state = 1548;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
					{
					this.state = 1540;
					this.typeConst();
					this.state = 1545;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === LLVMIRParser.Comma) {
						{
						{
						this.state = 1541;
						this.match(LLVMIRParser.Comma);
						this.state = 1542;
						this.typeConst();
						}
						}
						this.state = 1547;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					}
				}

				this.state = 1550;
				this.match(LLVMIRParser.RBraces);
				this.state = 1551;
				this.match(LLVMIRParser.RAngleBrackets);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public arrayConst(): ArrayConstContext {
		let _localctx: ArrayConstContext = new ArrayConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 130, LLVMIRParser.RULE_arrayConst);
		let _la: number;
		try {
			this.state = 1568;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwC:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1554;
				this.match(LLVMIRParser.KwC);
				this.state = 1555;
				this.match(LLVMIRParser.StringLit);
				}
				break;
			case LLVMIRParser.LBracket:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1556;
				this.match(LLVMIRParser.LBracket);
				this.state = 1565;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
					{
					this.state = 1557;
					this.typeConst();
					this.state = 1562;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === LLVMIRParser.Comma) {
						{
						{
						this.state = 1558;
						this.match(LLVMIRParser.Comma);
						this.state = 1559;
						this.typeConst();
						}
						}
						this.state = 1564;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					}
				}

				this.state = 1567;
				this.match(LLVMIRParser.RBracket);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public vectorConst(): VectorConstContext {
		let _localctx: VectorConstContext = new VectorConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 132, LLVMIRParser.RULE_vectorConst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1570;
			this.match(LLVMIRParser.LAngleBrackets);
			this.state = 1579;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 1571;
				this.typeConst();
				this.state = 1576;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1572;
					this.match(LLVMIRParser.Comma);
					this.state = 1573;
					this.typeConst();
					}
					}
					this.state = 1578;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1581;
			this.match(LLVMIRParser.RAngleBrackets);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public zeroInitializerConst(): ZeroInitializerConstContext {
		let _localctx: ZeroInitializerConstContext = new ZeroInitializerConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 134, LLVMIRParser.RULE_zeroInitializerConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1583;
			this.match(LLVMIRParser.KwZeroinitializer);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public undefConst(): UndefConstContext {
		let _localctx: UndefConstContext = new UndefConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 136, LLVMIRParser.RULE_undefConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1585;
			this.match(LLVMIRParser.KwUndef);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public poisonConst(): PoisonConstContext {
		let _localctx: PoisonConstContext = new PoisonConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 138, LLVMIRParser.RULE_poisonConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1587;
			this.match(LLVMIRParser.KwPoison);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public blockAddressConst(): BlockAddressConstContext {
		let _localctx: BlockAddressConstContext = new BlockAddressConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 140, LLVMIRParser.RULE_blockAddressConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1589;
			this.match(LLVMIRParser.KwBlockaddress);
			this.state = 1590;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1591;
			this.match(LLVMIRParser.GlobalIdent);
			this.state = 1592;
			this.match(LLVMIRParser.Comma);
			this.state = 1593;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 1594;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dsoLocalEquivalentConst(): DsoLocalEquivalentConstContext {
		let _localctx: DsoLocalEquivalentConstContext = new DsoLocalEquivalentConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 142, LLVMIRParser.RULE_dsoLocalEquivalentConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1596;
			this.match(LLVMIRParser.KwDsoLocalEquivalent);
			this.state = 1597;
			this.match(LLVMIRParser.GlobalIdent);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public noCFIConst(): NoCFIConstContext {
		let _localctx: NoCFIConstContext = new NoCFIConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 144, LLVMIRParser.RULE_noCFIConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1599;
			this.match(LLVMIRParser.KwNoCfi);
			this.state = 1600;
			this.match(LLVMIRParser.GlobalIdent);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public constantExpr(): ConstantExprContext {
		let _localctx: ConstantExprContext = new ConstantExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 146, LLVMIRParser.RULE_constantExpr);
		try {
			this.state = 1632;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.OpFneg:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1602;
				this.fNegExpr();
				}
				break;
			case LLVMIRParser.OpAdd:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1603;
				this.addExpr();
				}
				break;
			case LLVMIRParser.OpSub:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1604;
				this.subExpr();
				}
				break;
			case LLVMIRParser.OpMul:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1605;
				this.mulExpr();
				}
				break;
			case LLVMIRParser.OpShl:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1606;
				this.shlExpr();
				}
				break;
			case LLVMIRParser.OpLshr:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1607;
				this.lShrExpr();
				}
				break;
			case LLVMIRParser.OpAshr:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1608;
				this.aShrExpr();
				}
				break;
			case LLVMIRParser.OpAnd:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1609;
				this.andExpr();
				}
				break;
			case LLVMIRParser.OpOr:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1610;
				this.orExpr();
				}
				break;
			case LLVMIRParser.OpXor:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1611;
				this.xorExpr();
				}
				break;
			case LLVMIRParser.OpExtractelement:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 1612;
				this.extractElementExpr();
				}
				break;
			case LLVMIRParser.OpInsertelement:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 1613;
				this.insertElementExpr();
				}
				break;
			case LLVMIRParser.OpShufflevector:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 1614;
				this.shuffleVectorExpr();
				}
				break;
			case LLVMIRParser.KwGetelementptr:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 1615;
				this.getElementPtrExpr();
				}
				break;
			case LLVMIRParser.OpTrunc:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 1616;
				this.truncExpr();
				}
				break;
			case LLVMIRParser.OpZext:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 1617;
				this.zExtExpr();
				}
				break;
			case LLVMIRParser.OpSext:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 1618;
				this.sExtExpr();
				}
				break;
			case LLVMIRParser.OpFptrunc:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 1619;
				this.fpTruncExpr();
				}
				break;
			case LLVMIRParser.OpFpext:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 1620;
				this.fpExtExpr();
				}
				break;
			case LLVMIRParser.OpFptoui:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 1621;
				this.fpToUiExpr();
				}
				break;
			case LLVMIRParser.OpFptosi:
				this.enterOuterAlt(_localctx, 21);
				{
				this.state = 1622;
				this.fpToSiExpr();
				}
				break;
			case LLVMIRParser.OpUitofp:
				this.enterOuterAlt(_localctx, 22);
				{
				this.state = 1623;
				this.uiToFpExpr();
				}
				break;
			case LLVMIRParser.OpSitofp:
				this.enterOuterAlt(_localctx, 23);
				{
				this.state = 1624;
				this.siToFpExpr();
				}
				break;
			case LLVMIRParser.OpPtrtoint:
				this.enterOuterAlt(_localctx, 24);
				{
				this.state = 1625;
				this.ptrToIntExpr();
				}
				break;
			case LLVMIRParser.OpInttoptr:
				this.enterOuterAlt(_localctx, 25);
				{
				this.state = 1626;
				this.intToPtrExpr();
				}
				break;
			case LLVMIRParser.OpBitcast:
				this.enterOuterAlt(_localctx, 26);
				{
				this.state = 1627;
				this.bitCastExpr();
				}
				break;
			case LLVMIRParser.OpAddrspacecast:
				this.enterOuterAlt(_localctx, 27);
				{
				this.state = 1628;
				this.addrSpaceCastExpr();
				}
				break;
			case LLVMIRParser.OpIcmp:
				this.enterOuterAlt(_localctx, 28);
				{
				this.state = 1629;
				this.iCmpExpr();
				}
				break;
			case LLVMIRParser.OpFcmp:
				this.enterOuterAlt(_localctx, 29);
				{
				this.state = 1630;
				this.fCmpExpr();
				}
				break;
			case LLVMIRParser.OpSelect:
				this.enterOuterAlt(_localctx, 30);
				{
				this.state = 1631;
				this.selectExpr();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeConst(): TypeConstContext {
		let _localctx: TypeConstContext = new TypeConstContext(this._ctx, this.state);
		this.enterRule(_localctx, 148, LLVMIRParser.RULE_typeConst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1634;
			this.firstClassType();
			this.state = 1635;
			this.constant();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public metadataAttachment(): MetadataAttachmentContext {
		let _localctx: MetadataAttachmentContext = new MetadataAttachmentContext(this._ctx, this.state);
		this.enterRule(_localctx, 150, LLVMIRParser.RULE_metadataAttachment);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1637;
			this.match(LLVMIRParser.MetadataName);
			this.state = 1638;
			this.mdNode();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mdNode(): MdNodeContext {
		let _localctx: MdNodeContext = new MdNodeContext(this._ctx, this.state);
		this.enterRule(_localctx, 152, LLVMIRParser.RULE_mdNode);
		try {
			this.state = 1643;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.Exclamation:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1640;
				this.mdTuple();
				}
				break;
			case LLVMIRParser.MetadataId:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1641;
				this.match(LLVMIRParser.MetadataId);
				}
				break;
			case LLVMIRParser.DIExpression:
			case LLVMIRParser.DIBasicType:
			case LLVMIRParser.DICommonBlock:
			case LLVMIRParser.DICompileUnit:
			case LLVMIRParser.DICompositeType:
			case LLVMIRParser.DIDerivedType:
			case LLVMIRParser.DIEnumerator:
			case LLVMIRParser.DIFile:
			case LLVMIRParser.DIGlobalVariable:
			case LLVMIRParser.DIGlobalVariableExpression:
			case LLVMIRParser.DIImportedEntity:
			case LLVMIRParser.DILabel:
			case LLVMIRParser.DILexicalBlock:
			case LLVMIRParser.DILexicalBlockFile:
			case LLVMIRParser.DILocalVariable:
			case LLVMIRParser.DILocation:
			case LLVMIRParser.DIMacro:
			case LLVMIRParser.DIMacroFile:
			case LLVMIRParser.DIModule:
			case LLVMIRParser.DINamespace:
			case LLVMIRParser.DIObjCProperty:
			case LLVMIRParser.DIStringType:
			case LLVMIRParser.DISubprogram:
			case LLVMIRParser.DISubroutineType:
			case LLVMIRParser.DITemplateTypeParameter:
			case LLVMIRParser.DITemplateValueParameter:
			case LLVMIRParser.GenericDINode:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1642;
				this.specializedMDNode();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mdTuple(): MdTupleContext {
		let _localctx: MdTupleContext = new MdTupleContext(this._ctx, this.state);
		this.enterRule(_localctx, 154, LLVMIRParser.RULE_mdTuple);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1645;
			this.match(LLVMIRParser.Exclamation);
			this.state = 1646;
			this.match(LLVMIRParser.LBraces);
			this.state = 1655;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << LLVMIRParser.DIExpression) | (1 << LLVMIRParser.DIArgList) | (1 << LLVMIRParser.DIBasicType) | (1 << LLVMIRParser.DICommonBlock) | (1 << LLVMIRParser.DICompileUnit) | (1 << LLVMIRParser.DICompositeType) | (1 << LLVMIRParser.DIDerivedType) | (1 << LLVMIRParser.DIEnumerator) | (1 << LLVMIRParser.DIFile) | (1 << LLVMIRParser.DIGlobalVariable) | (1 << LLVMIRParser.DIGlobalVariableExpression) | (1 << LLVMIRParser.DIImportedEntity) | (1 << LLVMIRParser.DILabel) | (1 << LLVMIRParser.DILexicalBlock) | (1 << LLVMIRParser.DILexicalBlockFile) | (1 << LLVMIRParser.DILocalVariable) | (1 << LLVMIRParser.DILocation) | (1 << LLVMIRParser.DIMacro) | (1 << LLVMIRParser.DIMacroFile) | (1 << LLVMIRParser.DIModule) | (1 << LLVMIRParser.DINamespace) | (1 << LLVMIRParser.DIObjCProperty) | (1 << LLVMIRParser.DIStringType) | (1 << LLVMIRParser.DISubprogram) | (1 << LLVMIRParser.DISubroutineType) | (1 << LLVMIRParser.DITemplateTypeParameter) | (1 << LLVMIRParser.DITemplateValueParameter) | (1 << LLVMIRParser.GenericDINode))) !== 0) || ((((_la - 35)) & ~0x1F) === 0 && ((1 << (_la - 35)) & ((1 << (LLVMIRParser.LocalIdent - 35)) | (1 << (LLVMIRParser.MetadataId - 35)) | (1 << (LLVMIRParser.IntType - 35)))) !== 0) || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwNull - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.Exclamation - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 1647;
				this.mdField();
				this.state = 1652;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1648;
					this.match(LLVMIRParser.Comma);
					this.state = 1649;
					this.mdField();
					}
					}
					this.state = 1654;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1657;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public metadata(): MetadataContext {
		let _localctx: MetadataContext = new MetadataContext(this._ctx, this.state);
		this.enterRule(_localctx, 156, LLVMIRParser.RULE_metadata);
		try {
			this.state = 1665;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 113, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1659;
				this.typeValue();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1660;
				this.mdString();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1661;
				this.mdTuple();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1662;
				this.match(LLVMIRParser.MetadataId);
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1663;
				this.diArgList();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1664;
				this.specializedMDNode();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diArgList(): DiArgListContext {
		let _localctx: DiArgListContext = new DiArgListContext(this._ctx, this.state);
		this.enterRule(_localctx, 158, LLVMIRParser.RULE_diArgList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1667;
			this.match(LLVMIRParser.DIArgList);
			this.state = 1668;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1677;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 1669;
				this.typeValue();
				this.state = 1674;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 1670;
					this.match(LLVMIRParser.Comma);
					this.state = 1671;
					this.typeValue();
					}
					}
					this.state = 1676;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 1679;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeValue(): TypeValueContext {
		let _localctx: TypeValueContext = new TypeValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 160, LLVMIRParser.RULE_typeValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1681;
			this.firstClassType();
			this.state = 1682;
			this.value();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public value(): ValueContext {
		let _localctx: ValueContext = new ValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 162, LLVMIRParser.RULE_value);
		try {
			this.state = 1687;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.IntLit:
			case LLVMIRParser.FloatLit:
			case LLVMIRParser.GlobalIdent:
			case LLVMIRParser.OpBitcast:
			case LLVMIRParser.OpAddrspacecast:
			case LLVMIRParser.OpInttoptr:
			case LLVMIRParser.OpIcmp:
			case LLVMIRParser.OpFcmp:
			case LLVMIRParser.OpSelect:
			case LLVMIRParser.OpTrunc:
			case LLVMIRParser.OpZext:
			case LLVMIRParser.OpSext:
			case LLVMIRParser.OpFptrunc:
			case LLVMIRParser.OpFpext:
			case LLVMIRParser.OpFptoui:
			case LLVMIRParser.OpFptosi:
			case LLVMIRParser.OpUitofp:
			case LLVMIRParser.OpSitofp:
			case LLVMIRParser.OpPtrtoint:
			case LLVMIRParser.OpExtractelement:
			case LLVMIRParser.OpInsertelement:
			case LLVMIRParser.OpShufflevector:
			case LLVMIRParser.OpShl:
			case LLVMIRParser.OpLshr:
			case LLVMIRParser.OpAshr:
			case LLVMIRParser.OpAnd:
			case LLVMIRParser.OpOr:
			case LLVMIRParser.OpXor:
			case LLVMIRParser.OpAdd:
			case LLVMIRParser.OpSub:
			case LLVMIRParser.OpMul:
			case LLVMIRParser.OpFneg:
			case LLVMIRParser.KwTrue:
			case LLVMIRParser.KwFalse:
			case LLVMIRParser.KwNull:
			case LLVMIRParser.Kwnone:
			case LLVMIRParser.KwC:
			case LLVMIRParser.KwZeroinitializer:
			case LLVMIRParser.KwUndef:
			case LLVMIRParser.KwPoison:
			case LLVMIRParser.KwBlockaddress:
			case LLVMIRParser.KwDsoLocalEquivalent:
			case LLVMIRParser.KwNoCfi:
			case LLVMIRParser.KwGetelementptr:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1684;
				this.constant();
				}
				break;
			case LLVMIRParser.LocalIdent:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1685;
				this.match(LLVMIRParser.LocalIdent);
				}
				break;
			case LLVMIRParser.KwAsm:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1686;
				this.inlineAsm();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inlineAsm(): InlineAsmContext {
		let _localctx: InlineAsmContext = new InlineAsmContext(this._ctx, this.state);
		this.enterRule(_localctx, 164, LLVMIRParser.RULE_inlineAsm);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1689;
			this.match(LLVMIRParser.KwAsm);
			this.state = 1691;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwSideeffect) {
				{
				this.state = 1690;
				_localctx._sideEffect = this.match(LLVMIRParser.KwSideeffect);
				}
			}

			this.state = 1694;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAlignstack) {
				{
				this.state = 1693;
				_localctx._alignStackTok = this.match(LLVMIRParser.KwAlignstack);
				}
			}

			this.state = 1697;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwInteldialect) {
				{
				this.state = 1696;
				_localctx._intelDialect = this.match(LLVMIRParser.KwInteldialect);
				}
			}

			this.state = 1700;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwUnwind) {
				{
				this.state = 1699;
				_localctx._unwind = this.match(LLVMIRParser.KwUnwind);
				}
			}

			this.state = 1702;
			this.match(LLVMIRParser.StringLit);
			this.state = 1703;
			this.match(LLVMIRParser.Comma);
			this.state = 1704;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mdString(): MdStringContext {
		let _localctx: MdStringContext = new MdStringContext(this._ctx, this.state);
		this.enterRule(_localctx, 166, LLVMIRParser.RULE_mdString);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1706;
			this.match(LLVMIRParser.Exclamation);
			this.state = 1707;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mdFieldOrInt(): MdFieldOrIntContext {
		let _localctx: MdFieldOrIntContext = new MdFieldOrIntContext(this._ctx, this.state);
		this.enterRule(_localctx, 168, LLVMIRParser.RULE_mdFieldOrInt);
		try {
			this.state = 1711;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.IntLit:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1709;
				this.match(LLVMIRParser.IntLit);
				}
				break;
			case LLVMIRParser.DIExpression:
			case LLVMIRParser.DIArgList:
			case LLVMIRParser.DIBasicType:
			case LLVMIRParser.DICommonBlock:
			case LLVMIRParser.DICompileUnit:
			case LLVMIRParser.DICompositeType:
			case LLVMIRParser.DIDerivedType:
			case LLVMIRParser.DIEnumerator:
			case LLVMIRParser.DIFile:
			case LLVMIRParser.DIGlobalVariable:
			case LLVMIRParser.DIGlobalVariableExpression:
			case LLVMIRParser.DIImportedEntity:
			case LLVMIRParser.DILabel:
			case LLVMIRParser.DILexicalBlock:
			case LLVMIRParser.DILexicalBlockFile:
			case LLVMIRParser.DILocalVariable:
			case LLVMIRParser.DILocation:
			case LLVMIRParser.DIMacro:
			case LLVMIRParser.DIMacroFile:
			case LLVMIRParser.DIModule:
			case LLVMIRParser.DINamespace:
			case LLVMIRParser.DIObjCProperty:
			case LLVMIRParser.DIStringType:
			case LLVMIRParser.DISubprogram:
			case LLVMIRParser.DISubroutineType:
			case LLVMIRParser.DITemplateTypeParameter:
			case LLVMIRParser.DITemplateValueParameter:
			case LLVMIRParser.GenericDINode:
			case LLVMIRParser.LocalIdent:
			case LLVMIRParser.MetadataId:
			case LLVMIRParser.IntType:
			case LLVMIRParser.KwLabel:
			case LLVMIRParser.KwNull:
			case LLVMIRParser.KwVoid:
			case LLVMIRParser.KwOpaque:
			case LLVMIRParser.KwX86Mmx:
			case LLVMIRParser.KwToken:
			case LLVMIRParser.KwPtr:
			case LLVMIRParser.KwMetadata:
			case LLVMIRParser.KwHalf:
			case LLVMIRParser.KwBfloat:
			case LLVMIRParser.KwFloat:
			case LLVMIRParser.KwDouble:
			case LLVMIRParser.KwX86Fp80:
			case LLVMIRParser.KwFp128:
			case LLVMIRParser.KwPpcFp128:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.Exclamation:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1710;
				this.mdField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSPFlag(): DiSPFlagContext {
		let _localctx: DiSPFlagContext = new DiSPFlagContext(this._ctx, this.state);
		this.enterRule(_localctx, 170, LLVMIRParser.RULE_diSPFlag);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1713;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.IntLit || _la === LLVMIRParser.DispFlag)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcAttribute(): FuncAttributeContext {
		let _localctx: FuncAttributeContext = new FuncAttributeContext(this._ctx, this.state);
		this.enterRule(_localctx, 172, LLVMIRParser.RULE_funcAttribute);
		try {
			this.state = 1727;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 122, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1715;
				this.attrString();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1716;
				this.attrPair();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1717;
				this.match(LLVMIRParser.AttrGroupId);
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1718;
				this.alignPair();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1719;
				this.alignStack();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1720;
				this.alignStackPair();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1721;
				this.allocKind();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1722;
				this.allocSize();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1723;
				this.funcAttr();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1724;
				this.preallocated();
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 1725;
				this.unwindTable();
				}
				break;

			case 12:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 1726;
				this.vectorScaleRange();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}

	public type(): TypeContext;
	public type(_p: number): TypeContext;
	// @RuleVersion(0)
	public type(_p?: number): TypeContext {
		if (_p === undefined) {
			_p = 0;
		}

		let _parentctx: ParserRuleContext = this._ctx;
		let _parentState: number = this.state;
		let _localctx: TypeContext = new TypeContext(this._ctx, _parentState);
		let _prevctx: TypeContext = _localctx;
		let _startState: number = 174;
		this.enterRecursionRule(_localctx, 174, LLVMIRParser.RULE_type, _p);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1743;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 123, this._ctx) ) {
			case 1:
				{
				this.state = 1730;
				this.voidType();
				}
				break;

			case 2:
				{
				this.state = 1731;
				this.opaqueType();
				}
				break;

			case 3:
				{
				this.state = 1732;
				this.intType();
				}
				break;

			case 4:
				{
				this.state = 1733;
				this.floatType();
				}
				break;

			case 5:
				{
				this.state = 1734;
				this.opaquePointerType();
				}
				break;

			case 6:
				{
				this.state = 1735;
				this.vectorType();
				}
				break;

			case 7:
				{
				this.state = 1736;
				this.labelType();
				}
				break;

			case 8:
				{
				this.state = 1737;
				this.arrayType();
				}
				break;

			case 9:
				{
				this.state = 1738;
				this.structType();
				}
				break;

			case 10:
				{
				this.state = 1739;
				this.namedType();
				}
				break;

			case 11:
				{
				this.state = 1740;
				this.mmxType();
				}
				break;

			case 12:
				{
				this.state = 1741;
				this.tokenType();
				}
				break;

			case 13:
				{
				this.state = 1742;
				this.metadataType();
				}
				break;
			}
			this._ctx._stop = this._input.tryLT(-1);
			this.state = 1757;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 126, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					if (this._parseListeners != null) {
						this.triggerExitRuleEvent();
					}
					_prevctx = _localctx;
					{
					this.state = 1755;
					this._errHandler.sync(this);
					switch ( this.interpreter.adaptivePredict(this._input, 125, this._ctx) ) {
					case 1:
						{
						_localctx = new TypeContext(_parentctx, _parentState);
						this.pushNewRecursionContext(_localctx, _startState, LLVMIRParser.RULE_type);
						this.state = 1745;
						if (!(this.precpred(this._ctx, 13))) {
							throw this.createFailedPredicateException("this.precpred(this._ctx, 13)");
						}
						this.state = 1746;
						this.match(LLVMIRParser.LParenthesis);
						this.state = 1747;
						this.params();
						this.state = 1748;
						this.match(LLVMIRParser.RParenthesis);
						}
						break;

					case 2:
						{
						_localctx = new TypeContext(_parentctx, _parentState);
						this.pushNewRecursionContext(_localctx, _startState, LLVMIRParser.RULE_type);
						this.state = 1750;
						if (!(this.precpred(this._ctx, 10))) {
							throw this.createFailedPredicateException("this.precpred(this._ctx, 10)");
						}
						this.state = 1752;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						if (_la === LLVMIRParser.KwAddrspace) {
							{
							this.state = 1751;
							this.addrSpace();
							}
						}

						this.state = 1754;
						this.match(LLVMIRParser.Asterisk);
						}
						break;
					}
					}
				}
				this.state = 1759;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 126, this._ctx);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public voidType(): VoidTypeContext {
		let _localctx: VoidTypeContext = new VoidTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 176, LLVMIRParser.RULE_voidType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1760;
			_localctx._symbol = this.match(LLVMIRParser.KwVoid);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public opaqueType(): OpaqueTypeContext {
		let _localctx: OpaqueTypeContext = new OpaqueTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 178, LLVMIRParser.RULE_opaqueType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1762;
			_localctx._symbol = this.match(LLVMIRParser.KwOpaque);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public params(): ParamsContext {
		let _localctx: ParamsContext = new ParamsContext(this._ctx, this.state);
		this.enterRule(_localctx, 180, LLVMIRParser.RULE_params);
		let _la: number;
		try {
			let _alt: number;
			this.state = 1779;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.RParenthesis:
			case LLVMIRParser.Ellipsis:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1765;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.Ellipsis) {
					{
					this.state = 1764;
					_localctx._ellipsis = this.match(LLVMIRParser.Ellipsis);
					}
				}

				}
				break;
			case LLVMIRParser.LocalIdent:
			case LLVMIRParser.IntType:
			case LLVMIRParser.KwLabel:
			case LLVMIRParser.KwVoid:
			case LLVMIRParser.KwOpaque:
			case LLVMIRParser.KwX86Mmx:
			case LLVMIRParser.KwToken:
			case LLVMIRParser.KwPtr:
			case LLVMIRParser.KwMetadata:
			case LLVMIRParser.KwHalf:
			case LLVMIRParser.KwBfloat:
			case LLVMIRParser.KwFloat:
			case LLVMIRParser.KwDouble:
			case LLVMIRParser.KwX86Fp80:
			case LLVMIRParser.KwFp128:
			case LLVMIRParser.KwPpcFp128:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1767;
				this.param();
				this.state = 1772;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 128, this._ctx);
				while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
					if (_alt === 1) {
						{
						{
						this.state = 1768;
						this.match(LLVMIRParser.Comma);
						this.state = 1769;
						this.param();
						}
						}
					}
					this.state = 1774;
					this._errHandler.sync(this);
					_alt = this.interpreter.adaptivePredict(this._input, 128, this._ctx);
				}
				this.state = 1777;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.Comma) {
					{
					this.state = 1775;
					this.match(LLVMIRParser.Comma);
					this.state = 1776;
					_localctx._ellipsis = this.match(LLVMIRParser.Ellipsis);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public param(): ParamContext {
		let _localctx: ParamContext = new ParamContext(this._ctx, this.state);
		this.enterRule(_localctx, 182, LLVMIRParser.RULE_param);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1781;
			this.type(0);
			this.state = 1785;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || ((((_la - 173)) & ~0x1F) === 0 && ((1 << (_la - 173)) & ((1 << (LLVMIRParser.KwAlignstack - 173)) | (1 << (LLVMIRParser.KwAlign - 173)) | (1 << (LLVMIRParser.KwByref - 173)) | (1 << (LLVMIRParser.KwByval - 173)) | (1 << (LLVMIRParser.KwDereferenceable - 173)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 173)) | (1 << (LLVMIRParser.KwElementtype - 173)) | (1 << (LLVMIRParser.KwInalloca - 173)) | (1 << (LLVMIRParser.KwAllocalign - 173)) | (1 << (LLVMIRParser.KwAllocptr - 173)) | (1 << (LLVMIRParser.KwImmarg - 173)) | (1 << (LLVMIRParser.KwInreg - 173)) | (1 << (LLVMIRParser.KwNest - 173)) | (1 << (LLVMIRParser.KwNoalias - 173)) | (1 << (LLVMIRParser.KwNocapture - 173)) | (1 << (LLVMIRParser.KwNofree - 173)) | (1 << (LLVMIRParser.KwNonnull - 173)) | (1 << (LLVMIRParser.KwNoundef - 173)) | (1 << (LLVMIRParser.KwReadnone - 173)) | (1 << (LLVMIRParser.KwReadonly - 173)) | (1 << (LLVMIRParser.KwReturned - 173)) | (1 << (LLVMIRParser.KwSignext - 173)) | (1 << (LLVMIRParser.KwSwiftasync - 173)))) !== 0) || ((((_la - 205)) & ~0x1F) === 0 && ((1 << (_la - 205)) & ((1 << (LLVMIRParser.KwSwifterror - 205)) | (1 << (LLVMIRParser.KwSwiftself - 205)) | (1 << (LLVMIRParser.KwWriteonly - 205)) | (1 << (LLVMIRParser.KwZeroext - 205)) | (1 << (LLVMIRParser.KwPreallocated - 205)) | (1 << (LLVMIRParser.KwSret - 205)))) !== 0)) {
				{
				{
				this.state = 1782;
				this.paramAttribute();
				}
				}
				this.state = 1787;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1789;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent) {
				{
				this.state = 1788;
				this.match(LLVMIRParser.LocalIdent);
				}
			}

			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public paramAttribute(): ParamAttributeContext {
		let _localctx: ParamAttributeContext = new ParamAttributeContext(this._ctx, this.state);
		this.enterRule(_localctx, 184, LLVMIRParser.RULE_paramAttribute);
		try {
			this.state = 1803;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 133, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1791;
				this.attrString();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1792;
				this.attrPair();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1793;
				this.align();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1794;
				this.alignStack();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1795;
				this.byRefAttr();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1796;
				this.byval();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1797;
				this.dereferenceable();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1798;
				this.elementType();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1799;
				this.inAlloca();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1800;
				this.paramAttr();
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 1801;
				this.preallocated();
				}
				break;

			case 12:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 1802;
				this.structRetAttr();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public attrString(): AttrStringContext {
		let _localctx: AttrStringContext = new AttrStringContext(this._ctx, this.state);
		this.enterRule(_localctx, 186, LLVMIRParser.RULE_attrString);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1805;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public attrPair(): AttrPairContext {
		let _localctx: AttrPairContext = new AttrPairContext(this._ctx, this.state);
		this.enterRule(_localctx, 188, LLVMIRParser.RULE_attrPair);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1807;
			this.match(LLVMIRParser.StringLit);
			this.state = 1808;
			this.match(LLVMIRParser.Equal);
			this.state = 1809;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public align(): AlignContext {
		let _localctx: AlignContext = new AlignContext(this._ctx, this.state);
		this.enterRule(_localctx, 190, LLVMIRParser.RULE_align);
		try {
			this.state = 1817;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 134, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1811;
				this.match(LLVMIRParser.KwAlign);
				this.state = 1812;
				this.match(LLVMIRParser.IntLit);
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1813;
				this.match(LLVMIRParser.KwAlign);
				this.state = 1814;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1815;
				this.match(LLVMIRParser.IntLit);
				this.state = 1816;
				this.match(LLVMIRParser.RParenthesis);
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public alignPair(): AlignPairContext {
		let _localctx: AlignPairContext = new AlignPairContext(this._ctx, this.state);
		this.enterRule(_localctx, 192, LLVMIRParser.RULE_alignPair);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1819;
			this.match(LLVMIRParser.KwAlign);
			this.state = 1820;
			this.match(LLVMIRParser.Equal);
			this.state = 1821;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public alignStack(): AlignStackContext {
		let _localctx: AlignStackContext = new AlignStackContext(this._ctx, this.state);
		this.enterRule(_localctx, 194, LLVMIRParser.RULE_alignStack);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1823;
			this.match(LLVMIRParser.KwAlignstack);
			this.state = 1824;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1825;
			this.match(LLVMIRParser.IntLit);
			this.state = 1826;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public alignStackPair(): AlignStackPairContext {
		let _localctx: AlignStackPairContext = new AlignStackPairContext(this._ctx, this.state);
		this.enterRule(_localctx, 196, LLVMIRParser.RULE_alignStackPair);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1828;
			this.match(LLVMIRParser.KwAlignstack);
			this.state = 1829;
			this.match(LLVMIRParser.Equal);
			this.state = 1830;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public allocKind(): AllocKindContext {
		let _localctx: AllocKindContext = new AllocKindContext(this._ctx, this.state);
		this.enterRule(_localctx, 198, LLVMIRParser.RULE_allocKind);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1832;
			this.match(LLVMIRParser.KwAllockind);
			this.state = 1833;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1834;
			this.match(LLVMIRParser.StringLit);
			this.state = 1835;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public allocSize(): AllocSizeContext {
		let _localctx: AllocSizeContext = new AllocSizeContext(this._ctx, this.state);
		this.enterRule(_localctx, 200, LLVMIRParser.RULE_allocSize);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1837;
			this.match(LLVMIRParser.KwAllocsize);
			this.state = 1838;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1839;
			this.match(LLVMIRParser.IntLit);
			this.state = 1842;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.Comma) {
				{
				this.state = 1840;
				this.match(LLVMIRParser.Comma);
				this.state = 1841;
				this.match(LLVMIRParser.IntLit);
				}
			}

			this.state = 1844;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unwindTable(): UnwindTableContext {
		let _localctx: UnwindTableContext = new UnwindTableContext(this._ctx, this.state);
		this.enterRule(_localctx, 202, LLVMIRParser.RULE_unwindTable);
		let _la: number;
		try {
			this.state = 1851;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 136, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1846;
				this.match(LLVMIRParser.KwUwtable);
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1847;
				this.match(LLVMIRParser.KwUwtable);
				this.state = 1848;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1849;
				_localctx._unwindTableKind = this._input.LT(1);
				_la = this._input.LA(1);
				if (!(_la === LLVMIRParser.KwAsync || _la === LLVMIRParser.KwSync)) {
					_localctx._unwindTableKind = this._errHandler.recoverInline(this);
				} else {
					if (this._input.LA(1) === Token.EOF) {
						this.matchedEOF = true;
					}

					this._errHandler.reportMatch(this);
					this.consume();
				}
				this.state = 1850;
				this.match(LLVMIRParser.RParenthesis);
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public vectorScaleRange(): VectorScaleRangeContext {
		let _localctx: VectorScaleRangeContext = new VectorScaleRangeContext(this._ctx, this.state);
		this.enterRule(_localctx, 204, LLVMIRParser.RULE_vectorScaleRange);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1853;
			this.match(LLVMIRParser.KwVscaleRange);
			this.state = 1862;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LParenthesis) {
				{
				this.state = 1854;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1859;
				this._errHandler.sync(this);
				switch ( this.interpreter.adaptivePredict(this._input, 137, this._ctx) ) {
				case 1:
					{
					this.state = 1855;
					this.match(LLVMIRParser.IntLit);
					}
					break;

				case 2:
					{
					this.state = 1856;
					this.match(LLVMIRParser.IntLit);
					this.state = 1857;
					this.match(LLVMIRParser.Comma);
					this.state = 1858;
					this.match(LLVMIRParser.IntLit);
					}
					break;
				}
				this.state = 1861;
				this.match(LLVMIRParser.RParenthesis);
				}
			}

			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public byRefAttr(): ByRefAttrContext {
		let _localctx: ByRefAttrContext = new ByRefAttrContext(this._ctx, this.state);
		this.enterRule(_localctx, 206, LLVMIRParser.RULE_byRefAttr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1864;
			this.match(LLVMIRParser.KwByref);
			this.state = 1865;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1866;
			this.type(0);
			this.state = 1867;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public byval(): ByvalContext {
		let _localctx: ByvalContext = new ByvalContext(this._ctx, this.state);
		this.enterRule(_localctx, 208, LLVMIRParser.RULE_byval);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1869;
			this.match(LLVMIRParser.KwByval);
			this.state = 1874;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LParenthesis) {
				{
				this.state = 1870;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1871;
				this.type(0);
				this.state = 1872;
				this.match(LLVMIRParser.RParenthesis);
				}
			}

			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dereferenceable(): DereferenceableContext {
		let _localctx: DereferenceableContext = new DereferenceableContext(this._ctx, this.state);
		this.enterRule(_localctx, 210, LLVMIRParser.RULE_dereferenceable);
		try {
			this.state = 1884;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwDereferenceable:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1876;
				this.match(LLVMIRParser.KwDereferenceable);
				this.state = 1877;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1878;
				this.match(LLVMIRParser.IntLit);
				this.state = 1879;
				this.match(LLVMIRParser.RParenthesis);
				}
				break;
			case LLVMIRParser.KwDereferenceableOrNull:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1880;
				this.match(LLVMIRParser.KwDereferenceableOrNull);
				this.state = 1881;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 1882;
				this.match(LLVMIRParser.IntLit);
				this.state = 1883;
				this.match(LLVMIRParser.RParenthesis);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public elementType(): ElementTypeContext {
		let _localctx: ElementTypeContext = new ElementTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 212, LLVMIRParser.RULE_elementType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1886;
			this.match(LLVMIRParser.KwElementtype);
			this.state = 1887;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1888;
			this.type(0);
			this.state = 1889;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inAlloca(): InAllocaContext {
		let _localctx: InAllocaContext = new InAllocaContext(this._ctx, this.state);
		this.enterRule(_localctx, 214, LLVMIRParser.RULE_inAlloca);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1891;
			this.match(LLVMIRParser.KwInalloca);
			this.state = 1892;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1893;
			this.type(0);
			this.state = 1894;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public paramAttr(): ParamAttrContext {
		let _localctx: ParamAttrContext = new ParamAttrContext(this._ctx, this.state);
		this.enterRule(_localctx, 216, LLVMIRParser.RULE_paramAttr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1896;
			_la = this._input.LA(1);
			if (!(((((_la - 190)) & ~0x1F) === 0 && ((1 << (_la - 190)) & ((1 << (LLVMIRParser.KwAllocalign - 190)) | (1 << (LLVMIRParser.KwAllocptr - 190)) | (1 << (LLVMIRParser.KwImmarg - 190)) | (1 << (LLVMIRParser.KwInreg - 190)) | (1 << (LLVMIRParser.KwNest - 190)) | (1 << (LLVMIRParser.KwNoalias - 190)) | (1 << (LLVMIRParser.KwNocapture - 190)) | (1 << (LLVMIRParser.KwNofree - 190)) | (1 << (LLVMIRParser.KwNonnull - 190)) | (1 << (LLVMIRParser.KwNoundef - 190)) | (1 << (LLVMIRParser.KwReadnone - 190)) | (1 << (LLVMIRParser.KwReadonly - 190)) | (1 << (LLVMIRParser.KwReturned - 190)) | (1 << (LLVMIRParser.KwSignext - 190)) | (1 << (LLVMIRParser.KwSwiftasync - 190)) | (1 << (LLVMIRParser.KwSwifterror - 190)) | (1 << (LLVMIRParser.KwSwiftself - 190)) | (1 << (LLVMIRParser.KwWriteonly - 190)) | (1 << (LLVMIRParser.KwZeroext - 190)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public preallocated(): PreallocatedContext {
		let _localctx: PreallocatedContext = new PreallocatedContext(this._ctx, this.state);
		this.enterRule(_localctx, 218, LLVMIRParser.RULE_preallocated);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1898;
			this.match(LLVMIRParser.KwPreallocated);
			this.state = 1899;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1900;
			this.type(0);
			this.state = 1901;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public structRetAttr(): StructRetAttrContext {
		let _localctx: StructRetAttrContext = new StructRetAttrContext(this._ctx, this.state);
		this.enterRule(_localctx, 220, LLVMIRParser.RULE_structRetAttr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1903;
			this.match(LLVMIRParser.KwSret);
			this.state = 1904;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 1905;
			this.type(0);
			this.state = 1906;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public firstClassType(): FirstClassTypeContext {
		let _localctx: FirstClassTypeContext = new FirstClassTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 222, LLVMIRParser.RULE_firstClassType);
		try {
			this.state = 1910;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 141, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1908;
				this.concreteType();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1909;
				this.metadataType();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public concreteType(): ConcreteTypeContext {
		let _localctx: ConcreteTypeContext = new ConcreteTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 224, LLVMIRParser.RULE_concreteType);
		try {
			this.state = 1922;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 142, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1912;
				this.intType();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1913;
				this.floatType();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 1914;
				this.pointerType();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 1915;
				this.vectorType();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 1916;
				this.labelType();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 1917;
				this.arrayType();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 1918;
				this.structType();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 1919;
				this.namedType();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 1920;
				this.mmxType();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 1921;
				this.tokenType();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public intType(): IntTypeContext {
		let _localctx: IntTypeContext = new IntTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 226, LLVMIRParser.RULE_intType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1924;
			this.match(LLVMIRParser.IntType);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public floatType(): FloatTypeContext {
		let _localctx: FloatTypeContext = new FloatTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 228, LLVMIRParser.RULE_floatType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1926;
			this.floatKind();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pointerType(): PointerTypeContext {
		let _localctx: PointerTypeContext = new PointerTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 230, LLVMIRParser.RULE_pointerType);
		let _la: number;
		try {
			this.state = 1935;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 144, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1928;
				this.type(0);
				this.state = 1930;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwAddrspace) {
					{
					this.state = 1929;
					this.addrSpace();
					}
				}

				this.state = 1932;
				this.match(LLVMIRParser.Asterisk);
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1934;
				this.opaquePointerType();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public vectorType(): VectorTypeContext {
		let _localctx: VectorTypeContext = new VectorTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 232, LLVMIRParser.RULE_vectorType);
		try {
			this.state = 1951;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 145, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1937;
				this.match(LLVMIRParser.LAngleBrackets);
				this.state = 1938;
				this.match(LLVMIRParser.IntLit);
				this.state = 1939;
				this.match(LLVMIRParser.KwX);
				this.state = 1940;
				this.type(0);
				this.state = 1941;
				this.match(LLVMIRParser.RAngleBrackets);
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1943;
				this.match(LLVMIRParser.LAngleBrackets);
				this.state = 1944;
				this.match(LLVMIRParser.KwVscale);
				this.state = 1945;
				this.match(LLVMIRParser.KwX);
				this.state = 1946;
				this.match(LLVMIRParser.IntLit);
				this.state = 1947;
				this.match(LLVMIRParser.KwX);
				this.state = 1948;
				this.type(0);
				this.state = 1949;
				this.match(LLVMIRParser.RAngleBrackets);
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public labelType(): LabelTypeContext {
		let _localctx: LabelTypeContext = new LabelTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 234, LLVMIRParser.RULE_labelType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1953;
			this.match(LLVMIRParser.KwLabel);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public arrayType(): ArrayTypeContext {
		let _localctx: ArrayTypeContext = new ArrayTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 236, LLVMIRParser.RULE_arrayType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1955;
			this.match(LLVMIRParser.LBracket);
			this.state = 1956;
			this.match(LLVMIRParser.IntLit);
			this.state = 1957;
			this.match(LLVMIRParser.KwX);
			this.state = 1958;
			this.type(0);
			this.state = 1959;
			this.match(LLVMIRParser.RBracket);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public structType(): StructTypeContext {
		let _localctx: StructTypeContext = new StructTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 238, LLVMIRParser.RULE_structType);
		let _la: number;
		try {
			this.state = 1987;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.LBraces:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 1961;
				this.match(LLVMIRParser.LBraces);
				this.state = 1970;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
					{
					this.state = 1962;
					this.type(0);
					this.state = 1967;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === LLVMIRParser.Comma) {
						{
						{
						this.state = 1963;
						this.match(LLVMIRParser.Comma);
						this.state = 1964;
						this.type(0);
						}
						}
						this.state = 1969;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					}
				}

				this.state = 1972;
				this.match(LLVMIRParser.RBraces);
				}
				break;
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 1973;
				this.match(LLVMIRParser.LAngleBrackets);
				this.state = 1974;
				this.match(LLVMIRParser.LBraces);
				this.state = 1983;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
					{
					this.state = 1975;
					this.type(0);
					this.state = 1980;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === LLVMIRParser.Comma) {
						{
						{
						this.state = 1976;
						this.match(LLVMIRParser.Comma);
						this.state = 1977;
						this.type(0);
						}
						}
						this.state = 1982;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					}
				}

				this.state = 1985;
				this.match(LLVMIRParser.RBraces);
				this.state = 1986;
				this.match(LLVMIRParser.RAngleBrackets);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public namedType(): NamedTypeContext {
		let _localctx: NamedTypeContext = new NamedTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 240, LLVMIRParser.RULE_namedType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1989;
			this.match(LLVMIRParser.LocalIdent);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mmxType(): MmxTypeContext {
		let _localctx: MmxTypeContext = new MmxTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 242, LLVMIRParser.RULE_mmxType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1991;
			this.match(LLVMIRParser.KwX86Mmx);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public tokenType(): TokenTypeContext {
		let _localctx: TokenTypeContext = new TokenTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 244, LLVMIRParser.RULE_tokenType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1993;
			this.match(LLVMIRParser.KwToken);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public opaquePointerType(): OpaquePointerTypeContext {
		let _localctx: OpaquePointerTypeContext = new OpaquePointerTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 246, LLVMIRParser.RULE_opaquePointerType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1995;
			this.match(LLVMIRParser.KwPtr);
			this.state = 1997;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 151, this._ctx) ) {
			case 1:
				{
				this.state = 1996;
				this.addrSpace();
				}
				break;
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addrSpace(): AddrSpaceContext {
		let _localctx: AddrSpaceContext = new AddrSpaceContext(this._ctx, this.state);
		this.enterRule(_localctx, 248, LLVMIRParser.RULE_addrSpace);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1999;
			this.match(LLVMIRParser.KwAddrspace);
			this.state = 2000;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2001;
			this.match(LLVMIRParser.IntLit);
			this.state = 2002;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public threadLocal(): ThreadLocalContext {
		let _localctx: ThreadLocalContext = new ThreadLocalContext(this._ctx, this.state);
		this.enterRule(_localctx, 250, LLVMIRParser.RULE_threadLocal);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2004;
			this.match(LLVMIRParser.KwThreadLocal);
			this.state = 2009;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LParenthesis) {
				{
				this.state = 2005;
				this.match(LLVMIRParser.LParenthesis);
				this.state = 2006;
				this.tlsModel();
				this.state = 2007;
				this.match(LLVMIRParser.RParenthesis);
				}
			}

			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public metadataType(): MetadataTypeContext {
		let _localctx: MetadataTypeContext = new MetadataTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 252, LLVMIRParser.RULE_metadataType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2011;
			this.match(LLVMIRParser.KwMetadata);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bitCastExpr(): BitCastExprContext {
		let _localctx: BitCastExprContext = new BitCastExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 254, LLVMIRParser.RULE_bitCastExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2013;
			this.match(LLVMIRParser.OpBitcast);
			this.state = 2014;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2015;
			this.typeConst();
			this.state = 2016;
			this.match(LLVMIRParser.KwTo);
			this.state = 2017;
			this.type(0);
			this.state = 2018;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public getElementPtrExpr(): GetElementPtrExprContext {
		let _localctx: GetElementPtrExprContext = new GetElementPtrExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 256, LLVMIRParser.RULE_getElementPtrExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2020;
			this.match(LLVMIRParser.KwGetelementptr);
			this.state = 2022;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwInbounds) {
				{
				this.state = 2021;
				this.inBounds();
				}
			}

			this.state = 2024;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2025;
			this.type(0);
			this.state = 2026;
			this.match(LLVMIRParser.Comma);
			this.state = 2027;
			this.typeConst();
			this.state = 2032;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2028;
				this.match(LLVMIRParser.Comma);
				this.state = 2029;
				this.gepIndex();
				}
				}
				this.state = 2034;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2035;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public gepIndex(): GepIndexContext {
		let _localctx: GepIndexContext = new GepIndexContext(this._ctx, this.state);
		this.enterRule(_localctx, 258, LLVMIRParser.RULE_gepIndex);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2038;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwInrange) {
				{
				this.state = 2037;
				_localctx._inRange = this.match(LLVMIRParser.KwInrange);
				}
			}

			this.state = 2040;
			this.typeConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addrSpaceCastExpr(): AddrSpaceCastExprContext {
		let _localctx: AddrSpaceCastExprContext = new AddrSpaceCastExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 260, LLVMIRParser.RULE_addrSpaceCastExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2042;
			this.match(LLVMIRParser.OpAddrspacecast);
			this.state = 2043;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2044;
			this.typeConst();
			this.state = 2045;
			this.match(LLVMIRParser.KwTo);
			this.state = 2046;
			this.type(0);
			this.state = 2047;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public intToPtrExpr(): IntToPtrExprContext {
		let _localctx: IntToPtrExprContext = new IntToPtrExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 262, LLVMIRParser.RULE_intToPtrExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2049;
			this.match(LLVMIRParser.OpInttoptr);
			this.state = 2050;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2051;
			this.typeConst();
			this.state = 2052;
			this.match(LLVMIRParser.KwTo);
			this.state = 2053;
			this.type(0);
			this.state = 2054;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public iCmpExpr(): ICmpExprContext {
		let _localctx: ICmpExprContext = new ICmpExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 264, LLVMIRParser.RULE_iCmpExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2056;
			this.match(LLVMIRParser.OpIcmp);
			this.state = 2057;
			this.iPred();
			this.state = 2058;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2059;
			this.typeConst();
			this.state = 2060;
			this.match(LLVMIRParser.Comma);
			this.state = 2061;
			this.typeConst();
			this.state = 2062;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fCmpExpr(): FCmpExprContext {
		let _localctx: FCmpExprContext = new FCmpExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 266, LLVMIRParser.RULE_fCmpExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2064;
			this.match(LLVMIRParser.OpFcmp);
			this.state = 2065;
			this.fPred();
			this.state = 2066;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2067;
			this.typeConst();
			this.state = 2068;
			this.match(LLVMIRParser.Comma);
			this.state = 2069;
			this.typeConst();
			this.state = 2070;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public selectExpr(): SelectExprContext {
		let _localctx: SelectExprContext = new SelectExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 268, LLVMIRParser.RULE_selectExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2072;
			this.match(LLVMIRParser.OpSelect);
			this.state = 2073;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2074;
			this.typeConst();
			this.state = 2075;
			this.match(LLVMIRParser.Comma);
			this.state = 2076;
			this.typeConst();
			this.state = 2077;
			this.match(LLVMIRParser.Comma);
			this.state = 2078;
			this.typeConst();
			this.state = 2079;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public truncExpr(): TruncExprContext {
		let _localctx: TruncExprContext = new TruncExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 270, LLVMIRParser.RULE_truncExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2081;
			this.match(LLVMIRParser.OpTrunc);
			this.state = 2082;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2083;
			this.typeConst();
			this.state = 2084;
			this.match(LLVMIRParser.KwTo);
			this.state = 2085;
			this.type(0);
			this.state = 2086;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public zExtExpr(): ZExtExprContext {
		let _localctx: ZExtExprContext = new ZExtExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 272, LLVMIRParser.RULE_zExtExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2088;
			this.match(LLVMIRParser.OpZext);
			this.state = 2089;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2090;
			this.typeConst();
			this.state = 2091;
			this.match(LLVMIRParser.KwTo);
			this.state = 2092;
			this.type(0);
			this.state = 2093;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sExtExpr(): SExtExprContext {
		let _localctx: SExtExprContext = new SExtExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 274, LLVMIRParser.RULE_sExtExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2095;
			this.match(LLVMIRParser.OpSext);
			this.state = 2096;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2097;
			this.typeConst();
			this.state = 2098;
			this.match(LLVMIRParser.KwTo);
			this.state = 2099;
			this.type(0);
			this.state = 2100;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpTruncExpr(): FpTruncExprContext {
		let _localctx: FpTruncExprContext = new FpTruncExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 276, LLVMIRParser.RULE_fpTruncExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2102;
			this.match(LLVMIRParser.OpFptrunc);
			this.state = 2103;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2104;
			this.typeConst();
			this.state = 2105;
			this.match(LLVMIRParser.KwTo);
			this.state = 2106;
			this.type(0);
			this.state = 2107;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpExtExpr(): FpExtExprContext {
		let _localctx: FpExtExprContext = new FpExtExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 278, LLVMIRParser.RULE_fpExtExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2109;
			this.match(LLVMIRParser.OpFpext);
			this.state = 2110;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2111;
			this.typeConst();
			this.state = 2112;
			this.match(LLVMIRParser.KwTo);
			this.state = 2113;
			this.type(0);
			this.state = 2114;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpToUiExpr(): FpToUiExprContext {
		let _localctx: FpToUiExprContext = new FpToUiExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 280, LLVMIRParser.RULE_fpToUiExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2116;
			this.match(LLVMIRParser.OpFptoui);
			this.state = 2117;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2118;
			this.typeConst();
			this.state = 2119;
			this.match(LLVMIRParser.KwTo);
			this.state = 2120;
			this.type(0);
			this.state = 2121;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpToSiExpr(): FpToSiExprContext {
		let _localctx: FpToSiExprContext = new FpToSiExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 282, LLVMIRParser.RULE_fpToSiExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2123;
			this.match(LLVMIRParser.OpFptosi);
			this.state = 2124;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2125;
			this.typeConst();
			this.state = 2126;
			this.match(LLVMIRParser.KwTo);
			this.state = 2127;
			this.type(0);
			this.state = 2128;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public uiToFpExpr(): UiToFpExprContext {
		let _localctx: UiToFpExprContext = new UiToFpExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 284, LLVMIRParser.RULE_uiToFpExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2130;
			this.match(LLVMIRParser.OpUitofp);
			this.state = 2131;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2132;
			this.typeConst();
			this.state = 2133;
			this.match(LLVMIRParser.KwTo);
			this.state = 2134;
			this.type(0);
			this.state = 2135;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public siToFpExpr(): SiToFpExprContext {
		let _localctx: SiToFpExprContext = new SiToFpExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 286, LLVMIRParser.RULE_siToFpExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2137;
			this.match(LLVMIRParser.OpSitofp);
			this.state = 2138;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2139;
			this.typeConst();
			this.state = 2140;
			this.match(LLVMIRParser.KwTo);
			this.state = 2141;
			this.type(0);
			this.state = 2142;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ptrToIntExpr(): PtrToIntExprContext {
		let _localctx: PtrToIntExprContext = new PtrToIntExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 288, LLVMIRParser.RULE_ptrToIntExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2144;
			this.match(LLVMIRParser.OpPtrtoint);
			this.state = 2145;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2146;
			this.typeConst();
			this.state = 2147;
			this.match(LLVMIRParser.KwTo);
			this.state = 2148;
			this.type(0);
			this.state = 2149;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extractElementExpr(): ExtractElementExprContext {
		let _localctx: ExtractElementExprContext = new ExtractElementExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 290, LLVMIRParser.RULE_extractElementExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2151;
			this.match(LLVMIRParser.OpExtractelement);
			this.state = 2152;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2153;
			this.typeConst();
			this.state = 2154;
			this.match(LLVMIRParser.Comma);
			this.state = 2155;
			this.typeConst();
			this.state = 2156;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public insertElementExpr(): InsertElementExprContext {
		let _localctx: InsertElementExprContext = new InsertElementExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 292, LLVMIRParser.RULE_insertElementExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2158;
			this.match(LLVMIRParser.OpInsertelement);
			this.state = 2159;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2160;
			this.typeConst();
			this.state = 2161;
			this.match(LLVMIRParser.Comma);
			this.state = 2162;
			this.typeConst();
			this.state = 2163;
			this.match(LLVMIRParser.Comma);
			this.state = 2164;
			this.typeConst();
			this.state = 2165;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public shuffleVectorExpr(): ShuffleVectorExprContext {
		let _localctx: ShuffleVectorExprContext = new ShuffleVectorExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 294, LLVMIRParser.RULE_shuffleVectorExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2167;
			this.match(LLVMIRParser.OpShufflevector);
			this.state = 2168;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2169;
			this.typeConst();
			this.state = 2170;
			this.match(LLVMIRParser.Comma);
			this.state = 2171;
			this.typeConst();
			this.state = 2172;
			this.match(LLVMIRParser.Comma);
			this.state = 2173;
			this.typeConst();
			this.state = 2174;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public shlExpr(): ShlExprContext {
		let _localctx: ShlExprContext = new ShlExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 296, LLVMIRParser.RULE_shlExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2176;
			this.match(LLVMIRParser.OpShl);
			this.state = 2180;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2177;
				this.overflowFlag();
				}
				}
				this.state = 2182;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2183;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2184;
			this.typeConst();
			this.state = 2185;
			this.match(LLVMIRParser.Comma);
			this.state = 2186;
			this.typeConst();
			this.state = 2187;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lShrExpr(): LShrExprContext {
		let _localctx: LShrExprContext = new LShrExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 298, LLVMIRParser.RULE_lShrExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2189;
			this.match(LLVMIRParser.OpLshr);
			this.state = 2191;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2190;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2193;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2194;
			this.typeConst();
			this.state = 2195;
			this.match(LLVMIRParser.Comma);
			this.state = 2196;
			this.typeConst();
			this.state = 2197;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public aShrExpr(): AShrExprContext {
		let _localctx: AShrExprContext = new AShrExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 300, LLVMIRParser.RULE_aShrExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2199;
			this.match(LLVMIRParser.OpAshr);
			this.state = 2201;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2200;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2203;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2204;
			this.typeConst();
			this.state = 2205;
			this.match(LLVMIRParser.Comma);
			this.state = 2206;
			this.typeConst();
			this.state = 2207;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public andExpr(): AndExprContext {
		let _localctx: AndExprContext = new AndExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 302, LLVMIRParser.RULE_andExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2209;
			this.match(LLVMIRParser.OpAnd);
			this.state = 2210;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2211;
			this.typeConst();
			this.state = 2212;
			this.match(LLVMIRParser.Comma);
			this.state = 2213;
			this.typeConst();
			this.state = 2214;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public orExpr(): OrExprContext {
		let _localctx: OrExprContext = new OrExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 304, LLVMIRParser.RULE_orExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2216;
			this.match(LLVMIRParser.OpOr);
			this.state = 2217;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2218;
			this.typeConst();
			this.state = 2219;
			this.match(LLVMIRParser.Comma);
			this.state = 2220;
			this.typeConst();
			this.state = 2221;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public xorExpr(): XorExprContext {
		let _localctx: XorExprContext = new XorExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 306, LLVMIRParser.RULE_xorExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2223;
			this.match(LLVMIRParser.OpXor);
			this.state = 2224;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2225;
			this.typeConst();
			this.state = 2226;
			this.match(LLVMIRParser.Comma);
			this.state = 2227;
			this.typeConst();
			this.state = 2228;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addExpr(): AddExprContext {
		let _localctx: AddExprContext = new AddExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 308, LLVMIRParser.RULE_addExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2230;
			this.match(LLVMIRParser.OpAdd);
			this.state = 2234;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2231;
				this.overflowFlag();
				}
				}
				this.state = 2236;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2237;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2238;
			this.typeConst();
			this.state = 2239;
			this.match(LLVMIRParser.Comma);
			this.state = 2240;
			this.typeConst();
			this.state = 2241;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public subExpr(): SubExprContext {
		let _localctx: SubExprContext = new SubExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 310, LLVMIRParser.RULE_subExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2243;
			this.match(LLVMIRParser.OpSub);
			this.state = 2247;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2244;
				this.overflowFlag();
				}
				}
				this.state = 2249;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2250;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2251;
			this.typeConst();
			this.state = 2252;
			this.match(LLVMIRParser.Comma);
			this.state = 2253;
			this.typeConst();
			this.state = 2254;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mulExpr(): MulExprContext {
		let _localctx: MulExprContext = new MulExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 312, LLVMIRParser.RULE_mulExpr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2256;
			this.match(LLVMIRParser.OpMul);
			this.state = 2260;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2257;
				this.overflowFlag();
				}
				}
				this.state = 2262;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2263;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2264;
			this.typeConst();
			this.state = 2265;
			this.match(LLVMIRParser.Comma);
			this.state = 2266;
			this.typeConst();
			this.state = 2267;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fNegExpr(): FNegExprContext {
		let _localctx: FNegExprContext = new FNegExprContext(this._ctx, this.state);
		this.enterRule(_localctx, 314, LLVMIRParser.RULE_fNegExpr);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2269;
			this.match(LLVMIRParser.OpFneg);
			this.state = 2270;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2271;
			this.typeConst();
			this.state = 2272;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localDefInst(): LocalDefInstContext {
		let _localctx: LocalDefInstContext = new LocalDefInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 316, LLVMIRParser.RULE_localDefInst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2274;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 2275;
			this.match(LLVMIRParser.Equal);
			this.state = 2276;
			this.valueInstruction();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public valueInstruction(): ValueInstructionContext {
		let _localctx: ValueInstructionContext = new ValueInstructionContext(this._ctx, this.state);
		this.enterRule(_localctx, 318, LLVMIRParser.RULE_valueInstruction);
		try {
			this.state = 2330;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.OpFneg:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 2278;
				this.fNegInst();
				}
				break;
			case LLVMIRParser.OpAdd:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 2279;
				this.addInst();
				}
				break;
			case LLVMIRParser.OpFadd:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 2280;
				this.fAddInst();
				}
				break;
			case LLVMIRParser.OpSub:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 2281;
				this.subInst();
				}
				break;
			case LLVMIRParser.OpFsub:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 2282;
				this.fSubInst();
				}
				break;
			case LLVMIRParser.OpMul:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 2283;
				this.mulInst();
				}
				break;
			case LLVMIRParser.OpFmul:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 2284;
				this.fMulInst();
				}
				break;
			case LLVMIRParser.OpUdiv:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 2285;
				this.uDivInst();
				}
				break;
			case LLVMIRParser.OpSdiv:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 2286;
				this.sDivInst();
				}
				break;
			case LLVMIRParser.OpFdiv:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 2287;
				this.fDivInst();
				}
				break;
			case LLVMIRParser.OpUrem:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 2288;
				this.uRemInst();
				}
				break;
			case LLVMIRParser.OpSrem:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 2289;
				this.sRemInst();
				}
				break;
			case LLVMIRParser.OpFrem:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 2290;
				this.fRemInst();
				}
				break;
			case LLVMIRParser.OpShl:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 2291;
				this.shlInst();
				}
				break;
			case LLVMIRParser.OpLshr:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 2292;
				this.lShrInst();
				}
				break;
			case LLVMIRParser.OpAshr:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 2293;
				this.aShrInst();
				}
				break;
			case LLVMIRParser.OpAnd:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 2294;
				this.andInst();
				}
				break;
			case LLVMIRParser.OpOr:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 2295;
				this.orInst();
				}
				break;
			case LLVMIRParser.OpXor:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 2296;
				this.xorInst();
				}
				break;
			case LLVMIRParser.OpExtractelement:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 2297;
				this.extractElementInst();
				}
				break;
			case LLVMIRParser.OpInsertelement:
				this.enterOuterAlt(_localctx, 21);
				{
				this.state = 2298;
				this.insertElementInst();
				}
				break;
			case LLVMIRParser.OpShufflevector:
				this.enterOuterAlt(_localctx, 22);
				{
				this.state = 2299;
				this.shuffleVectorInst();
				}
				break;
			case LLVMIRParser.OpExtractvalue:
				this.enterOuterAlt(_localctx, 23);
				{
				this.state = 2300;
				this.extractValueInst();
				}
				break;
			case LLVMIRParser.OpInsertvalue:
				this.enterOuterAlt(_localctx, 24);
				{
				this.state = 2301;
				this.insertValueInst();
				}
				break;
			case LLVMIRParser.OpAlloca:
				this.enterOuterAlt(_localctx, 25);
				{
				this.state = 2302;
				this.allocaInst();
				}
				break;
			case LLVMIRParser.OpLoad:
				this.enterOuterAlt(_localctx, 26);
				{
				this.state = 2303;
				this.loadInst();
				}
				break;
			case LLVMIRParser.OpCmpxchg:
				this.enterOuterAlt(_localctx, 27);
				{
				this.state = 2304;
				this.cmpXchgInst();
				}
				break;
			case LLVMIRParser.OpAtomicrmw:
				this.enterOuterAlt(_localctx, 28);
				{
				this.state = 2305;
				this.atomicRMWInst();
				}
				break;
			case LLVMIRParser.KwGetelementptr:
				this.enterOuterAlt(_localctx, 29);
				{
				this.state = 2306;
				this.getElementPtrInst();
				}
				break;
			case LLVMIRParser.OpTrunc:
				this.enterOuterAlt(_localctx, 30);
				{
				this.state = 2307;
				this.truncInst();
				}
				break;
			case LLVMIRParser.OpZext:
				this.enterOuterAlt(_localctx, 31);
				{
				this.state = 2308;
				this.zExtInst();
				}
				break;
			case LLVMIRParser.OpSext:
				this.enterOuterAlt(_localctx, 32);
				{
				this.state = 2309;
				this.sExtInst();
				}
				break;
			case LLVMIRParser.OpFptrunc:
				this.enterOuterAlt(_localctx, 33);
				{
				this.state = 2310;
				this.fpTruncInst();
				}
				break;
			case LLVMIRParser.OpFpext:
				this.enterOuterAlt(_localctx, 34);
				{
				this.state = 2311;
				this.fpExtInst();
				}
				break;
			case LLVMIRParser.OpFptoui:
				this.enterOuterAlt(_localctx, 35);
				{
				this.state = 2312;
				this.fpToUiInst();
				}
				break;
			case LLVMIRParser.OpFptosi:
				this.enterOuterAlt(_localctx, 36);
				{
				this.state = 2313;
				this.fpToSiInst();
				}
				break;
			case LLVMIRParser.OpUitofp:
				this.enterOuterAlt(_localctx, 37);
				{
				this.state = 2314;
				this.uiToFpInst();
				}
				break;
			case LLVMIRParser.OpSitofp:
				this.enterOuterAlt(_localctx, 38);
				{
				this.state = 2315;
				this.siToFpInst();
				}
				break;
			case LLVMIRParser.OpPtrtoint:
				this.enterOuterAlt(_localctx, 39);
				{
				this.state = 2316;
				this.ptrToIntInst();
				}
				break;
			case LLVMIRParser.OpInttoptr:
				this.enterOuterAlt(_localctx, 40);
				{
				this.state = 2317;
				this.intToPtrInst();
				}
				break;
			case LLVMIRParser.OpBitcast:
				this.enterOuterAlt(_localctx, 41);
				{
				this.state = 2318;
				this.bitCastInst();
				}
				break;
			case LLVMIRParser.OpAddrspacecast:
				this.enterOuterAlt(_localctx, 42);
				{
				this.state = 2319;
				this.addrSpaceCastInst();
				}
				break;
			case LLVMIRParser.OpIcmp:
				this.enterOuterAlt(_localctx, 43);
				{
				this.state = 2320;
				this.iCmpInst();
				}
				break;
			case LLVMIRParser.OpFcmp:
				this.enterOuterAlt(_localctx, 44);
				{
				this.state = 2321;
				this.fCmpInst();
				}
				break;
			case LLVMIRParser.OpPhi:
				this.enterOuterAlt(_localctx, 45);
				{
				this.state = 2322;
				this.phiInst();
				}
				break;
			case LLVMIRParser.OpSelect:
				this.enterOuterAlt(_localctx, 46);
				{
				this.state = 2323;
				this.selectInst();
				}
				break;
			case LLVMIRParser.OpFreeze:
				this.enterOuterAlt(_localctx, 47);
				{
				this.state = 2324;
				this.freezeInst();
				}
				break;
			case LLVMIRParser.OpCall:
			case LLVMIRParser.KwMusttail:
			case LLVMIRParser.KwNotail:
			case LLVMIRParser.KwTail:
				this.enterOuterAlt(_localctx, 48);
				{
				this.state = 2325;
				this.callInst();
				}
				break;
			case LLVMIRParser.OpVaArg:
				this.enterOuterAlt(_localctx, 49);
				{
				this.state = 2326;
				this.vaargInst();
				}
				break;
			case LLVMIRParser.OpLandingpad:
				this.enterOuterAlt(_localctx, 50);
				{
				this.state = 2327;
				this.landingPadInst();
				}
				break;
			case LLVMIRParser.OpCatchpad:
				this.enterOuterAlt(_localctx, 51);
				{
				this.state = 2328;
				this.catchPadInst();
				}
				break;
			case LLVMIRParser.OpCleanuppad:
				this.enterOuterAlt(_localctx, 52);
				{
				this.state = 2329;
				this.cleanupPadInst();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public storeInst(): StoreInstContext {
		let _localctx: StoreInstContext = new StoreInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 320, LLVMIRParser.RULE_storeInst);
		let _la: number;
		try {
			this.state = 2373;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 170, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 2332;
				this.match(LLVMIRParser.OpStore);
				this.state = 2334;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwVolatile) {
					{
					this.state = 2333;
					_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
					}
				}

				this.state = 2336;
				this.typeValue();
				this.state = 2337;
				this.match(LLVMIRParser.Comma);
				this.state = 2338;
				this.typeValue();
				this.state = 2341;
				this._errHandler.sync(this);
				switch ( this.interpreter.adaptivePredict(this._input, 164, this._ctx) ) {
				case 1:
					{
					this.state = 2339;
					this.match(LLVMIRParser.Comma);
					this.state = 2340;
					this.align();
					}
					break;
				}
				this.state = 2347;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 2343;
					this.match(LLVMIRParser.Comma);
					this.state = 2344;
					this.metadataAttachment();
					}
					}
					this.state = 2349;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 2350;
				this.match(LLVMIRParser.OpStore);
				this.state = 2351;
				_localctx._atomic = this.match(LLVMIRParser.KwAtomic);
				this.state = 2353;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwVolatile) {
					{
					this.state = 2352;
					_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
					}
				}

				this.state = 2355;
				this.typeValue();
				this.state = 2356;
				this.match(LLVMIRParser.Comma);
				this.state = 2357;
				this.typeValue();
				this.state = 2359;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwSyncscope) {
					{
					this.state = 2358;
					this.syncScope();
					}
				}

				this.state = 2361;
				this.atomicOrdering();
				this.state = 2364;
				this._errHandler.sync(this);
				switch ( this.interpreter.adaptivePredict(this._input, 168, this._ctx) ) {
				case 1:
					{
					this.state = 2362;
					this.match(LLVMIRParser.Comma);
					this.state = 2363;
					this.align();
					}
					break;
				}
				this.state = 2370;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 2366;
					this.match(LLVMIRParser.Comma);
					this.state = 2367;
					this.metadataAttachment();
					}
					}
					this.state = 2372;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public syncScope(): SyncScopeContext {
		let _localctx: SyncScopeContext = new SyncScopeContext(this._ctx, this.state);
		this.enterRule(_localctx, 322, LLVMIRParser.RULE_syncScope);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2375;
			this.match(LLVMIRParser.KwSyncscope);
			this.state = 2376;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 2377;
			this.match(LLVMIRParser.StringLit);
			this.state = 2378;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fenceInst(): FenceInstContext {
		let _localctx: FenceInstContext = new FenceInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 324, LLVMIRParser.RULE_fenceInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2380;
			this.match(LLVMIRParser.OpFence);
			this.state = 2382;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwSyncscope) {
				{
				this.state = 2381;
				this.syncScope();
				}
			}

			this.state = 2384;
			this.atomicOrdering();
			this.state = 2389;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2385;
				this.match(LLVMIRParser.Comma);
				this.state = 2386;
				this.metadataAttachment();
				}
				}
				this.state = 2391;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fNegInst(): FNegInstContext {
		let _localctx: FNegInstContext = new FNegInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 326, LLVMIRParser.RULE_fNegInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2392;
			this.match(LLVMIRParser.OpFneg);
			this.state = 2396;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2393;
				this.fastMathFlag();
				}
				}
				this.state = 2398;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2399;
			this.typeValue();
			this.state = 2404;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2400;
				this.match(LLVMIRParser.Comma);
				this.state = 2401;
				this.metadataAttachment();
				}
				}
				this.state = 2406;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addInst(): AddInstContext {
		let _localctx: AddInstContext = new AddInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 328, LLVMIRParser.RULE_addInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2407;
			this.match(LLVMIRParser.OpAdd);
			this.state = 2411;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2408;
				this.overflowFlag();
				}
				}
				this.state = 2413;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2414;
			this.typeValue();
			this.state = 2415;
			this.match(LLVMIRParser.Comma);
			this.state = 2416;
			this.value();
			this.state = 2421;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2417;
				this.match(LLVMIRParser.Comma);
				this.state = 2418;
				this.metadataAttachment();
				}
				}
				this.state = 2423;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fAddInst(): FAddInstContext {
		let _localctx: FAddInstContext = new FAddInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 330, LLVMIRParser.RULE_fAddInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2424;
			this.match(LLVMIRParser.OpFadd);
			this.state = 2428;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2425;
				this.fastMathFlag();
				}
				}
				this.state = 2430;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2431;
			this.typeValue();
			this.state = 2432;
			this.match(LLVMIRParser.Comma);
			this.state = 2433;
			this.value();
			this.state = 2438;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2434;
				this.match(LLVMIRParser.Comma);
				this.state = 2435;
				this.metadataAttachment();
				}
				}
				this.state = 2440;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public subInst(): SubInstContext {
		let _localctx: SubInstContext = new SubInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 332, LLVMIRParser.RULE_subInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2441;
			this.match(LLVMIRParser.OpSub);
			this.state = 2445;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2442;
				this.overflowFlag();
				}
				}
				this.state = 2447;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2448;
			this.typeValue();
			this.state = 2449;
			this.match(LLVMIRParser.Comma);
			this.state = 2450;
			this.value();
			this.state = 2455;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2451;
				this.match(LLVMIRParser.Comma);
				this.state = 2452;
				this.metadataAttachment();
				}
				}
				this.state = 2457;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fSubInst(): FSubInstContext {
		let _localctx: FSubInstContext = new FSubInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 334, LLVMIRParser.RULE_fSubInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2458;
			this.match(LLVMIRParser.OpFsub);
			this.state = 2462;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2459;
				this.fastMathFlag();
				}
				}
				this.state = 2464;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2465;
			this.typeValue();
			this.state = 2466;
			this.match(LLVMIRParser.Comma);
			this.state = 2467;
			this.value();
			this.state = 2472;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2468;
				this.match(LLVMIRParser.Comma);
				this.state = 2469;
				this.metadataAttachment();
				}
				}
				this.state = 2474;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mulInst(): MulInstContext {
		let _localctx: MulInstContext = new MulInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 336, LLVMIRParser.RULE_mulInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2475;
			this.match(LLVMIRParser.OpMul);
			this.state = 2479;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2476;
				this.overflowFlag();
				}
				}
				this.state = 2481;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2482;
			this.typeValue();
			this.state = 2483;
			this.match(LLVMIRParser.Comma);
			this.state = 2484;
			this.value();
			this.state = 2489;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2485;
				this.match(LLVMIRParser.Comma);
				this.state = 2486;
				this.metadataAttachment();
				}
				}
				this.state = 2491;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fMulInst(): FMulInstContext {
		let _localctx: FMulInstContext = new FMulInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 338, LLVMIRParser.RULE_fMulInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2492;
			this.match(LLVMIRParser.OpFmul);
			this.state = 2496;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2493;
				this.fastMathFlag();
				}
				}
				this.state = 2498;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2499;
			this.typeValue();
			this.state = 2500;
			this.match(LLVMIRParser.Comma);
			this.state = 2501;
			this.value();
			this.state = 2506;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2502;
				this.match(LLVMIRParser.Comma);
				this.state = 2503;
				this.metadataAttachment();
				}
				}
				this.state = 2508;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public uDivInst(): UDivInstContext {
		let _localctx: UDivInstContext = new UDivInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 340, LLVMIRParser.RULE_uDivInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2509;
			this.match(LLVMIRParser.OpUdiv);
			this.state = 2511;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2510;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2513;
			this.typeValue();
			this.state = 2514;
			this.match(LLVMIRParser.Comma);
			this.state = 2515;
			this.value();
			this.state = 2520;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2516;
				this.match(LLVMIRParser.Comma);
				this.state = 2517;
				this.metadataAttachment();
				}
				}
				this.state = 2522;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sDivInst(): SDivInstContext {
		let _localctx: SDivInstContext = new SDivInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 342, LLVMIRParser.RULE_sDivInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2523;
			this.match(LLVMIRParser.OpSdiv);
			this.state = 2525;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2524;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2527;
			this.typeValue();
			this.state = 2528;
			this.match(LLVMIRParser.Comma);
			this.state = 2529;
			this.value();
			this.state = 2534;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2530;
				this.match(LLVMIRParser.Comma);
				this.state = 2531;
				this.metadataAttachment();
				}
				}
				this.state = 2536;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fDivInst(): FDivInstContext {
		let _localctx: FDivInstContext = new FDivInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 344, LLVMIRParser.RULE_fDivInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2537;
			this.match(LLVMIRParser.OpFdiv);
			this.state = 2541;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2538;
				this.fastMathFlag();
				}
				}
				this.state = 2543;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2544;
			this.typeValue();
			this.state = 2545;
			this.match(LLVMIRParser.Comma);
			this.state = 2546;
			this.value();
			this.state = 2551;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2547;
				this.match(LLVMIRParser.Comma);
				this.state = 2548;
				this.metadataAttachment();
				}
				}
				this.state = 2553;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public uRemInst(): URemInstContext {
		let _localctx: URemInstContext = new URemInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 346, LLVMIRParser.RULE_uRemInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2554;
			this.match(LLVMIRParser.OpUrem);
			this.state = 2555;
			this.typeValue();
			this.state = 2556;
			this.match(LLVMIRParser.Comma);
			this.state = 2557;
			this.value();
			this.state = 2562;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2558;
				this.match(LLVMIRParser.Comma);
				this.state = 2559;
				this.metadataAttachment();
				}
				}
				this.state = 2564;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sRemInst(): SRemInstContext {
		let _localctx: SRemInstContext = new SRemInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 348, LLVMIRParser.RULE_sRemInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2565;
			this.match(LLVMIRParser.OpSrem);
			this.state = 2566;
			this.typeValue();
			this.state = 2567;
			this.match(LLVMIRParser.Comma);
			this.state = 2568;
			this.value();
			this.state = 2573;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2569;
				this.match(LLVMIRParser.Comma);
				this.state = 2570;
				this.metadataAttachment();
				}
				}
				this.state = 2575;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fRemInst(): FRemInstContext {
		let _localctx: FRemInstContext = new FRemInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 350, LLVMIRParser.RULE_fRemInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2576;
			this.match(LLVMIRParser.OpFrem);
			this.state = 2580;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 2577;
				this.fastMathFlag();
				}
				}
				this.state = 2582;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2583;
			this.typeValue();
			this.state = 2584;
			this.match(LLVMIRParser.Comma);
			this.state = 2585;
			this.value();
			this.state = 2590;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2586;
				this.match(LLVMIRParser.Comma);
				this.state = 2587;
				this.metadataAttachment();
				}
				}
				this.state = 2592;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public shlInst(): ShlInstContext {
		let _localctx: ShlInstContext = new ShlInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 352, LLVMIRParser.RULE_shlInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2593;
			this.match(LLVMIRParser.OpShl);
			this.state = 2597;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw) {
				{
				{
				this.state = 2594;
				this.overflowFlag();
				}
				}
				this.state = 2599;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2600;
			this.typeValue();
			this.state = 2601;
			this.match(LLVMIRParser.Comma);
			this.state = 2602;
			this.value();
			this.state = 2607;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2603;
				this.match(LLVMIRParser.Comma);
				this.state = 2604;
				this.metadataAttachment();
				}
				}
				this.state = 2609;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lShrInst(): LShrInstContext {
		let _localctx: LShrInstContext = new LShrInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 354, LLVMIRParser.RULE_lShrInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2610;
			this.match(LLVMIRParser.OpLshr);
			this.state = 2612;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2611;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2614;
			this.typeValue();
			this.state = 2615;
			this.match(LLVMIRParser.Comma);
			this.state = 2616;
			this.value();
			this.state = 2621;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2617;
				this.match(LLVMIRParser.Comma);
				this.state = 2618;
				this.metadataAttachment();
				}
				}
				this.state = 2623;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public aShrInst(): AShrInstContext {
		let _localctx: AShrInstContext = new AShrInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 356, LLVMIRParser.RULE_aShrInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2624;
			this.match(LLVMIRParser.OpAshr);
			this.state = 2626;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExact) {
				{
				this.state = 2625;
				_localctx._exact = this.match(LLVMIRParser.KwExact);
				}
			}

			this.state = 2628;
			this.typeValue();
			this.state = 2629;
			this.match(LLVMIRParser.Comma);
			this.state = 2630;
			this.value();
			this.state = 2635;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2631;
				this.match(LLVMIRParser.Comma);
				this.state = 2632;
				this.metadataAttachment();
				}
				}
				this.state = 2637;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public andInst(): AndInstContext {
		let _localctx: AndInstContext = new AndInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 358, LLVMIRParser.RULE_andInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2638;
			this.match(LLVMIRParser.OpAnd);
			this.state = 2639;
			this.typeValue();
			this.state = 2640;
			this.match(LLVMIRParser.Comma);
			this.state = 2641;
			this.value();
			this.state = 2646;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2642;
				this.match(LLVMIRParser.Comma);
				this.state = 2643;
				this.metadataAttachment();
				}
				}
				this.state = 2648;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public orInst(): OrInstContext {
		let _localctx: OrInstContext = new OrInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 360, LLVMIRParser.RULE_orInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2649;
			this.match(LLVMIRParser.OpOr);
			this.state = 2650;
			this.typeValue();
			this.state = 2651;
			this.match(LLVMIRParser.Comma);
			this.state = 2652;
			this.value();
			this.state = 2657;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2653;
				this.match(LLVMIRParser.Comma);
				this.state = 2654;
				this.metadataAttachment();
				}
				}
				this.state = 2659;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public xorInst(): XorInstContext {
		let _localctx: XorInstContext = new XorInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 362, LLVMIRParser.RULE_xorInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2660;
			this.match(LLVMIRParser.OpXor);
			this.state = 2661;
			this.typeValue();
			this.state = 2662;
			this.match(LLVMIRParser.Comma);
			this.state = 2663;
			this.value();
			this.state = 2668;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2664;
				this.match(LLVMIRParser.Comma);
				this.state = 2665;
				this.metadataAttachment();
				}
				}
				this.state = 2670;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extractElementInst(): ExtractElementInstContext {
		let _localctx: ExtractElementInstContext = new ExtractElementInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 364, LLVMIRParser.RULE_extractElementInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2671;
			this.match(LLVMIRParser.OpExtractelement);
			this.state = 2672;
			this.typeValue();
			this.state = 2673;
			this.match(LLVMIRParser.Comma);
			this.state = 2674;
			this.typeValue();
			this.state = 2679;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2675;
				this.match(LLVMIRParser.Comma);
				this.state = 2676;
				this.metadataAttachment();
				}
				}
				this.state = 2681;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public insertElementInst(): InsertElementInstContext {
		let _localctx: InsertElementInstContext = new InsertElementInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 366, LLVMIRParser.RULE_insertElementInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2682;
			this.match(LLVMIRParser.OpInsertelement);
			this.state = 2683;
			this.typeValue();
			this.state = 2684;
			this.match(LLVMIRParser.Comma);
			this.state = 2685;
			this.typeValue();
			this.state = 2686;
			this.match(LLVMIRParser.Comma);
			this.state = 2687;
			this.typeValue();
			this.state = 2692;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2688;
				this.match(LLVMIRParser.Comma);
				this.state = 2689;
				this.metadataAttachment();
				}
				}
				this.state = 2694;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public shuffleVectorInst(): ShuffleVectorInstContext {
		let _localctx: ShuffleVectorInstContext = new ShuffleVectorInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 368, LLVMIRParser.RULE_shuffleVectorInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2695;
			this.match(LLVMIRParser.OpShufflevector);
			this.state = 2696;
			this.typeValue();
			this.state = 2697;
			this.match(LLVMIRParser.Comma);
			this.state = 2698;
			this.typeValue();
			this.state = 2699;
			this.match(LLVMIRParser.Comma);
			this.state = 2700;
			this.typeValue();
			this.state = 2705;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2701;
				this.match(LLVMIRParser.Comma);
				this.state = 2702;
				this.metadataAttachment();
				}
				}
				this.state = 2707;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extractValueInst(): ExtractValueInstContext {
		let _localctx: ExtractValueInstContext = new ExtractValueInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 370, LLVMIRParser.RULE_extractValueInst);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2708;
			this.match(LLVMIRParser.OpExtractvalue);
			this.state = 2709;
			this.typeValue();
			this.state = 2712;
			this._errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					this.state = 2710;
					this.match(LLVMIRParser.Comma);
					this.state = 2711;
					this.match(LLVMIRParser.IntLit);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				this.state = 2714;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 209, this._ctx);
			} while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER);
			this.state = 2720;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2716;
				this.match(LLVMIRParser.Comma);
				this.state = 2717;
				this.metadataAttachment();
				}
				}
				this.state = 2722;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public insertValueInst(): InsertValueInstContext {
		let _localctx: InsertValueInstContext = new InsertValueInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 372, LLVMIRParser.RULE_insertValueInst);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2723;
			this.match(LLVMIRParser.OpInsertvalue);
			this.state = 2724;
			this.typeValue();
			this.state = 2725;
			this.match(LLVMIRParser.Comma);
			this.state = 2726;
			this.typeValue();
			this.state = 2729;
			this._errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					this.state = 2727;
					this.match(LLVMIRParser.Comma);
					this.state = 2728;
					this.match(LLVMIRParser.IntLit);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				this.state = 2731;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 211, this._ctx);
			} while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER);
			this.state = 2737;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2733;
				this.match(LLVMIRParser.Comma);
				this.state = 2734;
				this.metadataAttachment();
				}
				}
				this.state = 2739;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public allocaInst(): AllocaInstContext {
		let _localctx: AllocaInstContext = new AllocaInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 374, LLVMIRParser.RULE_allocaInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2740;
			this.match(LLVMIRParser.OpAlloca);
			this.state = 2742;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwInalloca) {
				{
				this.state = 2741;
				_localctx._inAllocaTok = this.match(LLVMIRParser.KwInalloca);
				}
			}

			this.state = 2745;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwSwifterror) {
				{
				this.state = 2744;
				_localctx._swiftError = this.match(LLVMIRParser.KwSwifterror);
				}
			}

			this.state = 2747;
			this.type(0);
			this.state = 2750;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 215, this._ctx) ) {
			case 1:
				{
				this.state = 2748;
				this.match(LLVMIRParser.Comma);
				this.state = 2749;
				this.typeValue();
				}
				break;
			}
			this.state = 2754;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 216, this._ctx) ) {
			case 1:
				{
				this.state = 2752;
				this.match(LLVMIRParser.Comma);
				this.state = 2753;
				this.align();
				}
				break;
			}
			this.state = 2758;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 217, this._ctx) ) {
			case 1:
				{
				this.state = 2756;
				this.match(LLVMIRParser.Comma);
				this.state = 2757;
				this.addrSpace();
				}
				break;
			}
			this.state = 2764;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2760;
				this.match(LLVMIRParser.Comma);
				this.state = 2761;
				this.metadataAttachment();
				}
				}
				this.state = 2766;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public loadInst(): LoadInstContext {
		let _localctx: LoadInstContext = new LoadInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 376, LLVMIRParser.RULE_loadInst);
		let _la: number;
		try {
			this.state = 2808;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 226, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 2767;
				this.match(LLVMIRParser.OpLoad);
				this.state = 2769;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwVolatile) {
					{
					this.state = 2768;
					_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
					}
				}

				this.state = 2771;
				this.type(0);
				this.state = 2772;
				this.match(LLVMIRParser.Comma);
				this.state = 2773;
				this.typeValue();
				this.state = 2776;
				this._errHandler.sync(this);
				switch ( this.interpreter.adaptivePredict(this._input, 220, this._ctx) ) {
				case 1:
					{
					this.state = 2774;
					this.match(LLVMIRParser.Comma);
					this.state = 2775;
					this.align();
					}
					break;
				}
				this.state = 2782;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 2778;
					this.match(LLVMIRParser.Comma);
					this.state = 2779;
					this.metadataAttachment();
					}
					}
					this.state = 2784;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 2785;
				this.match(LLVMIRParser.OpLoad);
				this.state = 2786;
				_localctx._atomic = this.match(LLVMIRParser.KwAtomic);
				this.state = 2788;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwVolatile) {
					{
					this.state = 2787;
					_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
					}
				}

				this.state = 2790;
				this.type(0);
				this.state = 2791;
				this.match(LLVMIRParser.Comma);
				this.state = 2792;
				this.typeValue();
				this.state = 2794;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.KwSyncscope) {
					{
					this.state = 2793;
					this.syncScope();
					}
				}

				this.state = 2796;
				this.atomicOrdering();
				this.state = 2799;
				this._errHandler.sync(this);
				switch ( this.interpreter.adaptivePredict(this._input, 224, this._ctx) ) {
				case 1:
					{
					this.state = 2797;
					this.match(LLVMIRParser.Comma);
					this.state = 2798;
					this.align();
					}
					break;
				}
				this.state = 2805;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 2801;
					this.match(LLVMIRParser.Comma);
					this.state = 2802;
					this.metadataAttachment();
					}
					}
					this.state = 2807;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cmpXchgInst(): CmpXchgInstContext {
		let _localctx: CmpXchgInstContext = new CmpXchgInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 378, LLVMIRParser.RULE_cmpXchgInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2810;
			this.match(LLVMIRParser.OpCmpxchg);
			this.state = 2812;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwWeak) {
				{
				this.state = 2811;
				_localctx._weak = this.match(LLVMIRParser.KwWeak);
				}
			}

			this.state = 2815;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwVolatile) {
				{
				this.state = 2814;
				_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
				}
			}

			this.state = 2817;
			this.typeValue();
			this.state = 2818;
			this.match(LLVMIRParser.Comma);
			this.state = 2819;
			this.typeValue();
			this.state = 2820;
			this.match(LLVMIRParser.Comma);
			this.state = 2821;
			this.typeValue();
			this.state = 2823;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwSyncscope) {
				{
				this.state = 2822;
				this.syncScope();
				}
			}

			this.state = 2825;
			this.atomicOrdering();
			this.state = 2826;
			this.atomicOrdering();
			this.state = 2829;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 230, this._ctx) ) {
			case 1:
				{
				this.state = 2827;
				this.match(LLVMIRParser.Comma);
				this.state = 2828;
				this.align();
				}
				break;
			}
			this.state = 2835;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2831;
				this.match(LLVMIRParser.Comma);
				this.state = 2832;
				this.metadataAttachment();
				}
				}
				this.state = 2837;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public atomicRMWInst(): AtomicRMWInstContext {
		let _localctx: AtomicRMWInstContext = new AtomicRMWInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 380, LLVMIRParser.RULE_atomicRMWInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2838;
			this.match(LLVMIRParser.OpAtomicrmw);
			this.state = 2840;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwVolatile) {
				{
				this.state = 2839;
				_localctx._volatile = this.match(LLVMIRParser.KwVolatile);
				}
			}

			this.state = 2842;
			this.atomicOp();
			this.state = 2843;
			this.typeValue();
			this.state = 2844;
			this.match(LLVMIRParser.Comma);
			this.state = 2845;
			this.typeValue();
			this.state = 2847;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwSyncscope) {
				{
				this.state = 2846;
				this.syncScope();
				}
			}

			this.state = 2849;
			this.atomicOrdering();
			this.state = 2852;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 234, this._ctx) ) {
			case 1:
				{
				this.state = 2850;
				this.match(LLVMIRParser.Comma);
				this.state = 2851;
				this.align();
				}
				break;
			}
			this.state = 2858;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2854;
				this.match(LLVMIRParser.Comma);
				this.state = 2855;
				this.metadataAttachment();
				}
				}
				this.state = 2860;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public getElementPtrInst(): GetElementPtrInstContext {
		let _localctx: GetElementPtrInstContext = new GetElementPtrInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 382, LLVMIRParser.RULE_getElementPtrInst);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2861;
			this.match(LLVMIRParser.KwGetelementptr);
			this.state = 2863;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwInbounds) {
				{
				this.state = 2862;
				this.inBounds();
				}
			}

			this.state = 2865;
			this.type(0);
			this.state = 2866;
			this.match(LLVMIRParser.Comma);
			this.state = 2867;
			this.typeValue();
			this.state = 2872;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 237, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 2868;
					this.match(LLVMIRParser.Comma);
					this.state = 2869;
					this.typeValue();
					}
					}
				}
				this.state = 2874;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 237, this._ctx);
			}
			this.state = 2879;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2875;
				this.match(LLVMIRParser.Comma);
				this.state = 2876;
				this.metadataAttachment();
				}
				}
				this.state = 2881;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public truncInst(): TruncInstContext {
		let _localctx: TruncInstContext = new TruncInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 384, LLVMIRParser.RULE_truncInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2882;
			this.match(LLVMIRParser.OpTrunc);
			this.state = 2883;
			this.typeValue();
			this.state = 2884;
			this.match(LLVMIRParser.KwTo);
			this.state = 2885;
			this.type(0);
			this.state = 2890;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2886;
				this.match(LLVMIRParser.Comma);
				this.state = 2887;
				this.metadataAttachment();
				}
				}
				this.state = 2892;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public zExtInst(): ZExtInstContext {
		let _localctx: ZExtInstContext = new ZExtInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 386, LLVMIRParser.RULE_zExtInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2893;
			this.match(LLVMIRParser.OpZext);
			this.state = 2894;
			this.typeValue();
			this.state = 2895;
			this.match(LLVMIRParser.KwTo);
			this.state = 2896;
			this.type(0);
			this.state = 2901;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2897;
				this.match(LLVMIRParser.Comma);
				this.state = 2898;
				this.metadataAttachment();
				}
				}
				this.state = 2903;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sExtInst(): SExtInstContext {
		let _localctx: SExtInstContext = new SExtInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 388, LLVMIRParser.RULE_sExtInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2904;
			this.match(LLVMIRParser.OpSext);
			this.state = 2905;
			this.typeValue();
			this.state = 2906;
			this.match(LLVMIRParser.KwTo);
			this.state = 2907;
			this.type(0);
			this.state = 2912;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2908;
				this.match(LLVMIRParser.Comma);
				this.state = 2909;
				this.metadataAttachment();
				}
				}
				this.state = 2914;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpTruncInst(): FpTruncInstContext {
		let _localctx: FpTruncInstContext = new FpTruncInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 390, LLVMIRParser.RULE_fpTruncInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2915;
			this.match(LLVMIRParser.OpFptrunc);
			this.state = 2916;
			this.typeValue();
			this.state = 2917;
			this.match(LLVMIRParser.KwTo);
			this.state = 2918;
			this.type(0);
			this.state = 2923;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2919;
				this.match(LLVMIRParser.Comma);
				this.state = 2920;
				this.metadataAttachment();
				}
				}
				this.state = 2925;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpExtInst(): FpExtInstContext {
		let _localctx: FpExtInstContext = new FpExtInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 392, LLVMIRParser.RULE_fpExtInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2926;
			this.match(LLVMIRParser.OpFpext);
			this.state = 2927;
			this.typeValue();
			this.state = 2928;
			this.match(LLVMIRParser.KwTo);
			this.state = 2929;
			this.type(0);
			this.state = 2934;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2930;
				this.match(LLVMIRParser.Comma);
				this.state = 2931;
				this.metadataAttachment();
				}
				}
				this.state = 2936;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpToUiInst(): FpToUiInstContext {
		let _localctx: FpToUiInstContext = new FpToUiInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 394, LLVMIRParser.RULE_fpToUiInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2937;
			this.match(LLVMIRParser.OpFptoui);
			this.state = 2938;
			this.typeValue();
			this.state = 2939;
			this.match(LLVMIRParser.KwTo);
			this.state = 2940;
			this.type(0);
			this.state = 2945;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2941;
				this.match(LLVMIRParser.Comma);
				this.state = 2942;
				this.metadataAttachment();
				}
				}
				this.state = 2947;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fpToSiInst(): FpToSiInstContext {
		let _localctx: FpToSiInstContext = new FpToSiInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 396, LLVMIRParser.RULE_fpToSiInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2948;
			this.match(LLVMIRParser.OpFptosi);
			this.state = 2949;
			this.typeValue();
			this.state = 2950;
			this.match(LLVMIRParser.KwTo);
			this.state = 2951;
			this.type(0);
			this.state = 2956;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2952;
				this.match(LLVMIRParser.Comma);
				this.state = 2953;
				this.metadataAttachment();
				}
				}
				this.state = 2958;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public uiToFpInst(): UiToFpInstContext {
		let _localctx: UiToFpInstContext = new UiToFpInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 398, LLVMIRParser.RULE_uiToFpInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2959;
			this.match(LLVMIRParser.OpUitofp);
			this.state = 2960;
			this.typeValue();
			this.state = 2961;
			this.match(LLVMIRParser.KwTo);
			this.state = 2962;
			this.type(0);
			this.state = 2967;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2963;
				this.match(LLVMIRParser.Comma);
				this.state = 2964;
				this.metadataAttachment();
				}
				}
				this.state = 2969;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public siToFpInst(): SiToFpInstContext {
		let _localctx: SiToFpInstContext = new SiToFpInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 400, LLVMIRParser.RULE_siToFpInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2970;
			this.match(LLVMIRParser.OpSitofp);
			this.state = 2971;
			this.typeValue();
			this.state = 2972;
			this.match(LLVMIRParser.KwTo);
			this.state = 2973;
			this.type(0);
			this.state = 2978;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2974;
				this.match(LLVMIRParser.Comma);
				this.state = 2975;
				this.metadataAttachment();
				}
				}
				this.state = 2980;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ptrToIntInst(): PtrToIntInstContext {
		let _localctx: PtrToIntInstContext = new PtrToIntInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 402, LLVMIRParser.RULE_ptrToIntInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2981;
			this.match(LLVMIRParser.OpPtrtoint);
			this.state = 2982;
			this.typeValue();
			this.state = 2983;
			this.match(LLVMIRParser.KwTo);
			this.state = 2984;
			this.type(0);
			this.state = 2989;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2985;
				this.match(LLVMIRParser.Comma);
				this.state = 2986;
				this.metadataAttachment();
				}
				}
				this.state = 2991;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public intToPtrInst(): IntToPtrInstContext {
		let _localctx: IntToPtrInstContext = new IntToPtrInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 404, LLVMIRParser.RULE_intToPtrInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2992;
			this.match(LLVMIRParser.OpInttoptr);
			this.state = 2993;
			this.typeValue();
			this.state = 2994;
			this.match(LLVMIRParser.KwTo);
			this.state = 2995;
			this.type(0);
			this.state = 3000;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 2996;
				this.match(LLVMIRParser.Comma);
				this.state = 2997;
				this.metadataAttachment();
				}
				}
				this.state = 3002;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bitCastInst(): BitCastInstContext {
		let _localctx: BitCastInstContext = new BitCastInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 406, LLVMIRParser.RULE_bitCastInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3003;
			this.match(LLVMIRParser.OpBitcast);
			this.state = 3004;
			this.typeValue();
			this.state = 3005;
			this.match(LLVMIRParser.KwTo);
			this.state = 3006;
			this.type(0);
			this.state = 3011;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3007;
				this.match(LLVMIRParser.Comma);
				this.state = 3008;
				this.metadataAttachment();
				}
				}
				this.state = 3013;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addrSpaceCastInst(): AddrSpaceCastInstContext {
		let _localctx: AddrSpaceCastInstContext = new AddrSpaceCastInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 408, LLVMIRParser.RULE_addrSpaceCastInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3014;
			this.match(LLVMIRParser.OpAddrspacecast);
			this.state = 3015;
			this.typeValue();
			this.state = 3016;
			this.match(LLVMIRParser.KwTo);
			this.state = 3017;
			this.type(0);
			this.state = 3022;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3018;
				this.match(LLVMIRParser.Comma);
				this.state = 3019;
				this.metadataAttachment();
				}
				}
				this.state = 3024;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public iCmpInst(): ICmpInstContext {
		let _localctx: ICmpInstContext = new ICmpInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 410, LLVMIRParser.RULE_iCmpInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3025;
			this.match(LLVMIRParser.OpIcmp);
			this.state = 3026;
			this.iPred();
			this.state = 3027;
			this.typeValue();
			this.state = 3028;
			this.match(LLVMIRParser.Comma);
			this.state = 3029;
			this.value();
			this.state = 3034;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3030;
				this.match(LLVMIRParser.Comma);
				this.state = 3031;
				this.metadataAttachment();
				}
				}
				this.state = 3036;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fCmpInst(): FCmpInstContext {
		let _localctx: FCmpInstContext = new FCmpInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 412, LLVMIRParser.RULE_fCmpInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3037;
			this.match(LLVMIRParser.OpFcmp);
			this.state = 3041;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 3038;
				this.fastMathFlag();
				}
				}
				this.state = 3043;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3044;
			this.fPred();
			this.state = 3045;
			this.typeValue();
			this.state = 3046;
			this.match(LLVMIRParser.Comma);
			this.state = 3047;
			this.value();
			this.state = 3052;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3048;
				this.match(LLVMIRParser.Comma);
				this.state = 3049;
				this.metadataAttachment();
				}
				}
				this.state = 3054;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public phiInst(): PhiInstContext {
		let _localctx: PhiInstContext = new PhiInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 414, LLVMIRParser.RULE_phiInst);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3055;
			this.match(LLVMIRParser.OpPhi);
			this.state = 3059;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 3056;
				this.fastMathFlag();
				}
				}
				this.state = 3061;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3062;
			this.type(0);
			{
			this.state = 3063;
			this.inc();
			this.state = 3068;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 256, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 3064;
					this.match(LLVMIRParser.Comma);
					this.state = 3065;
					this.inc();
					}
					}
				}
				this.state = 3070;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 256, this._ctx);
			}
			}
			this.state = 3075;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3071;
				this.match(LLVMIRParser.Comma);
				this.state = 3072;
				this.metadataAttachment();
				}
				}
				this.state = 3077;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public selectInst(): SelectInstContext {
		let _localctx: SelectInstContext = new SelectInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 416, LLVMIRParser.RULE_selectInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3078;
			this.match(LLVMIRParser.OpSelect);
			this.state = 3082;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 3079;
				this.fastMathFlag();
				}
				}
				this.state = 3084;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3085;
			this.typeValue();
			this.state = 3086;
			this.match(LLVMIRParser.Comma);
			this.state = 3087;
			this.typeValue();
			this.state = 3088;
			this.match(LLVMIRParser.Comma);
			this.state = 3089;
			this.typeValue();
			this.state = 3094;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3090;
				this.match(LLVMIRParser.Comma);
				this.state = 3091;
				this.metadataAttachment();
				}
				}
				this.state = 3096;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public freezeInst(): FreezeInstContext {
		let _localctx: FreezeInstContext = new FreezeInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 418, LLVMIRParser.RULE_freezeInst);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3097;
			this.match(LLVMIRParser.OpFreeze);
			this.state = 3098;
			this.typeValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public callInst(): CallInstContext {
		let _localctx: CallInstContext = new CallInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 420, LLVMIRParser.RULE_callInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3101;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 226)) & ~0x1F) === 0 && ((1 << (_la - 226)) & ((1 << (LLVMIRParser.KwMusttail - 226)) | (1 << (LLVMIRParser.KwNotail - 226)) | (1 << (LLVMIRParser.KwTail - 226)))) !== 0)) {
				{
				this.state = 3100;
				_localctx._tail = this._input.LT(1);
				_la = this._input.LA(1);
				if (!(((((_la - 226)) & ~0x1F) === 0 && ((1 << (_la - 226)) & ((1 << (LLVMIRParser.KwMusttail - 226)) | (1 << (LLVMIRParser.KwNotail - 226)) | (1 << (LLVMIRParser.KwTail - 226)))) !== 0))) {
					_localctx._tail = this._errHandler.recoverInline(this);
				} else {
					if (this._input.LA(1) === Token.EOF) {
						this.matchedEOF = true;
					}

					this._errHandler.reportMatch(this);
					this.consume();
				}
				}
			}

			this.state = 3103;
			this.match(LLVMIRParser.OpCall);
			this.state = 3107;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0)) {
				{
				{
				this.state = 3104;
				this.fastMathFlag();
				}
				}
				this.state = 3109;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3111;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCc || ((((_la - 337)) & ~0x1F) === 0 && ((1 << (_la - 337)) & ((1 << (LLVMIRParser.KwAarch64SveVectorPcs - 337)) | (1 << (LLVMIRParser.KwAarch64VectorPcs - 337)) | (1 << (LLVMIRParser.KwAmdgpuCs - 337)) | (1 << (LLVMIRParser.KwAmdgpuEs - 337)) | (1 << (LLVMIRParser.KwAmdgpuGfx - 337)) | (1 << (LLVMIRParser.KwAmdgpuGs - 337)) | (1 << (LLVMIRParser.KwAmdgpuHs - 337)) | (1 << (LLVMIRParser.KwAmdgpuKernel - 337)) | (1 << (LLVMIRParser.KwAmdgpuLs - 337)) | (1 << (LLVMIRParser.KwAmdgpuPs - 337)) | (1 << (LLVMIRParser.KwAmdgpuVs - 337)) | (1 << (LLVMIRParser.KwAnyregcc - 337)) | (1 << (LLVMIRParser.KwArmAapcsVfpcc - 337)) | (1 << (LLVMIRParser.KwArmAapcscc - 337)) | (1 << (LLVMIRParser.KwArmApcscc - 337)) | (1 << (LLVMIRParser.KwAvrIntrcc - 337)) | (1 << (LLVMIRParser.KwAvrSignalcc - 337)) | (1 << (LLVMIRParser.KwCcc - 337)) | (1 << (LLVMIRParser.KwCfguardCheckcc - 337)) | (1 << (LLVMIRParser.KwColdcc - 337)) | (1 << (LLVMIRParser.KwCxxFastTlscc - 337)) | (1 << (LLVMIRParser.KwFastcc - 337)) | (1 << (LLVMIRParser.KwGhccc - 337)) | (1 << (LLVMIRParser.KwHhvmCcc - 337)) | (1 << (LLVMIRParser.KwHhvmcc - 337)) | (1 << (LLVMIRParser.KwIntelOclBicc - 337)) | (1 << (LLVMIRParser.KwMsp430Intrcc - 337)) | (1 << (LLVMIRParser.KwPreserveAllcc - 337)) | (1 << (LLVMIRParser.KwPreserveMostcc - 337)) | (1 << (LLVMIRParser.KwPtxDevice - 337)) | (1 << (LLVMIRParser.KwPtxKernel - 337)) | (1 << (LLVMIRParser.KwSpirFunc - 337)))) !== 0) || ((((_la - 369)) & ~0x1F) === 0 && ((1 << (_la - 369)) & ((1 << (LLVMIRParser.KwSpirKernel - 369)) | (1 << (LLVMIRParser.KwSwiftcc - 369)) | (1 << (LLVMIRParser.KwSwifttailcc - 369)) | (1 << (LLVMIRParser.KwTailcc - 369)) | (1 << (LLVMIRParser.KwWebkitJscc - 369)) | (1 << (LLVMIRParser.KwWin64cc - 369)) | (1 << (LLVMIRParser.KwX8664Sysvcc - 369)) | (1 << (LLVMIRParser.KwX86Fastcallcc - 369)) | (1 << (LLVMIRParser.KwX86Intrcc - 369)) | (1 << (LLVMIRParser.KwX86Regcallcc - 369)) | (1 << (LLVMIRParser.KwX86Stdcallcc - 369)) | (1 << (LLVMIRParser.KwX86Thiscallcc - 369)) | (1 << (LLVMIRParser.KwX86Vectorcallcc - 369)))) !== 0)) {
				{
				this.state = 3110;
				this.callingConv();
				}
			}

			this.state = 3116;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 186)) & ~0x1F) === 0 && ((1 << (_la - 186)) & ((1 << (LLVMIRParser.KwDereferenceable - 186)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 186)) | (1 << (LLVMIRParser.KwInreg - 186)) | (1 << (LLVMIRParser.KwNoalias - 186)) | (1 << (LLVMIRParser.KwNonnull - 186)) | (1 << (LLVMIRParser.KwNoundef - 186)) | (1 << (LLVMIRParser.KwSignext - 186)) | (1 << (LLVMIRParser.KwZeroext - 186)))) !== 0)) {
				{
				{
				this.state = 3113;
				this.returnAttribute();
				}
				}
				this.state = 3118;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3120;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwAddrspace) {
				{
				this.state = 3119;
				this.addrSpace();
				}
			}

			this.state = 3122;
			this.type(0);
			this.state = 3123;
			this.value();
			this.state = 3124;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3125;
			this.args();
			this.state = 3126;
			this.match(LLVMIRParser.RParenthesis);
			this.state = 3130;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.StringLit || _la === LLVMIRParser.AttrGroupId || ((((_la - 158)) & ~0x1F) === 0 && ((1 << (_la - 158)) & ((1 << (LLVMIRParser.KwSanitizeMemtag - 158)) | (1 << (LLVMIRParser.KwAlignstack - 158)) | (1 << (LLVMIRParser.KwAlign - 158)) | (1 << (LLVMIRParser.KwAllockind - 158)) | (1 << (LLVMIRParser.KwAllocsize - 158)) | (1 << (LLVMIRParser.KwUwtable - 158)) | (1 << (LLVMIRParser.KwVscaleRange - 158)))) !== 0) || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)) | (1 << (LLVMIRParser.KwPreallocated - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0)) {
				{
				{
				this.state = 3127;
				this.funcAttribute();
				}
				}
				this.state = 3132;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3144;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LBracket) {
				{
				this.state = 3133;
				this.match(LLVMIRParser.LBracket);
				this.state = 3134;
				this.operandBundle();
				this.state = 3139;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3135;
					this.match(LLVMIRParser.Comma);
					this.state = 3136;
					this.operandBundle();
					}
					}
					this.state = 3141;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				this.state = 3142;
				this.match(LLVMIRParser.RBracket);
				}
			}

			this.state = 3150;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3146;
				this.match(LLVMIRParser.Comma);
				this.state = 3147;
				this.metadataAttachment();
				}
				}
				this.state = 3152;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public vaargInst(): VaargInstContext {
		let _localctx: VaargInstContext = new VaargInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 422, LLVMIRParser.RULE_vaargInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3153;
			this.match(LLVMIRParser.OpVaArg);
			this.state = 3154;
			this.typeValue();
			this.state = 3155;
			this.match(LLVMIRParser.Comma);
			this.state = 3156;
			this.type(0);
			this.state = 3161;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3157;
				this.match(LLVMIRParser.Comma);
				this.state = 3158;
				this.metadataAttachment();
				}
				}
				this.state = 3163;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public landingPadInst(): LandingPadInstContext {
		let _localctx: LandingPadInstContext = new LandingPadInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 424, LLVMIRParser.RULE_landingPadInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3164;
			this.match(LLVMIRParser.OpLandingpad);
			this.state = 3165;
			this.type(0);
			this.state = 3167;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCleanup) {
				{
				this.state = 3166;
				_localctx._cleanUp = this.match(LLVMIRParser.KwCleanup);
				}
			}

			this.state = 3172;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.KwCatch || _la === LLVMIRParser.KwFilter) {
				{
				{
				this.state = 3169;
				this.clause();
				}
				}
				this.state = 3174;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3179;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3175;
				this.match(LLVMIRParser.Comma);
				this.state = 3176;
				this.metadataAttachment();
				}
				}
				this.state = 3181;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public catchPadInst(): CatchPadInstContext {
		let _localctx: CatchPadInstContext = new CatchPadInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 426, LLVMIRParser.RULE_catchPadInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3182;
			this.match(LLVMIRParser.OpCatchpad);
			this.state = 3183;
			this.match(LLVMIRParser.KwWithin);
			this.state = 3184;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 3185;
			this.match(LLVMIRParser.LBracket);
			this.state = 3194;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 3186;
				this.exceptionArg();
				this.state = 3191;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3187;
					this.match(LLVMIRParser.Comma);
					this.state = 3188;
					this.exceptionArg();
					}
					}
					this.state = 3193;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3196;
			this.match(LLVMIRParser.RBracket);
			this.state = 3201;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3197;
				this.match(LLVMIRParser.Comma);
				this.state = 3198;
				this.metadataAttachment();
				}
				}
				this.state = 3203;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cleanupPadInst(): CleanupPadInstContext {
		let _localctx: CleanupPadInstContext = new CleanupPadInstContext(this._ctx, this.state);
		this.enterRule(_localctx, 428, LLVMIRParser.RULE_cleanupPadInst);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3204;
			this.match(LLVMIRParser.OpCleanuppad);
			this.state = 3205;
			this.match(LLVMIRParser.KwWithin);
			this.state = 3206;
			this.exceptionPad();
			this.state = 3207;
			this.match(LLVMIRParser.LBracket);
			this.state = 3216;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 3208;
				this.exceptionArg();
				this.state = 3213;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3209;
					this.match(LLVMIRParser.Comma);
					this.state = 3210;
					this.exceptionArg();
					}
					}
					this.state = 3215;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3218;
			this.match(LLVMIRParser.RBracket);
			this.state = 3223;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Comma) {
				{
				{
				this.state = 3219;
				this.match(LLVMIRParser.Comma);
				this.state = 3220;
				this.metadataAttachment();
				}
				}
				this.state = 3225;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inc(): IncContext {
		let _localctx: IncContext = new IncContext(this._ctx, this.state);
		this.enterRule(_localctx, 430, LLVMIRParser.RULE_inc);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3226;
			this.match(LLVMIRParser.LBracket);
			this.state = 3227;
			this.value();
			this.state = 3228;
			this.match(LLVMIRParser.Comma);
			this.state = 3229;
			this.match(LLVMIRParser.LocalIdent);
			this.state = 3230;
			this.match(LLVMIRParser.RBracket);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public operandBundle(): OperandBundleContext {
		let _localctx: OperandBundleContext = new OperandBundleContext(this._ctx, this.state);
		this.enterRule(_localctx, 432, LLVMIRParser.RULE_operandBundle);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3232;
			this.match(LLVMIRParser.StringLit);
			this.state = 3233;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3242;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.LocalIdent || _la === LLVMIRParser.IntType || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 3234;
				this.typeValue();
				this.state = 3239;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3235;
					this.match(LLVMIRParser.Comma);
					this.state = 3236;
					this.typeValue();
					}
					}
					this.state = 3241;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3244;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clause(): ClauseContext {
		let _localctx: ClauseContext = new ClauseContext(this._ctx, this.state);
		this.enterRule(_localctx, 434, LLVMIRParser.RULE_clause);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3246;
			_localctx._clauseType = this._input.LT(1);
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwCatch || _la === LLVMIRParser.KwFilter)) {
				_localctx._clauseType = this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			this.state = 3247;
			this.typeValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public args(): ArgsContext {
		let _localctx: ArgsContext = new ArgsContext(this._ctx, this.state);
		this.enterRule(_localctx, 436, LLVMIRParser.RULE_args);
		let _la: number;
		try {
			let _alt: number;
			this.state = 3264;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.RParenthesis:
			case LLVMIRParser.Ellipsis:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3250;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.Ellipsis) {
					{
					this.state = 3249;
					_localctx._ellipsis = this.match(LLVMIRParser.Ellipsis);
					}
				}

				}
				break;
			case LLVMIRParser.LocalIdent:
			case LLVMIRParser.IntType:
			case LLVMIRParser.KwLabel:
			case LLVMIRParser.KwVoid:
			case LLVMIRParser.KwOpaque:
			case LLVMIRParser.KwX86Mmx:
			case LLVMIRParser.KwToken:
			case LLVMIRParser.KwPtr:
			case LLVMIRParser.KwMetadata:
			case LLVMIRParser.KwHalf:
			case LLVMIRParser.KwBfloat:
			case LLVMIRParser.KwFloat:
			case LLVMIRParser.KwDouble:
			case LLVMIRParser.KwX86Fp80:
			case LLVMIRParser.KwFp128:
			case LLVMIRParser.KwPpcFp128:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3252;
				this.arg();
				this.state = 3257;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 282, this._ctx);
				while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
					if (_alt === 1) {
						{
						{
						this.state = 3253;
						this.match(LLVMIRParser.Comma);
						this.state = 3254;
						this.arg();
						}
						}
					}
					this.state = 3259;
					this._errHandler.sync(this);
					_alt = this.interpreter.adaptivePredict(this._input, 282, this._ctx);
				}
				this.state = 3262;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === LLVMIRParser.Comma) {
					{
					this.state = 3260;
					this.match(LLVMIRParser.Comma);
					this.state = 3261;
					_localctx._ellipsis = this.match(LLVMIRParser.Ellipsis);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public arg(): ArgContext {
		let _localctx: ArgContext = new ArgContext(this._ctx, this.state);
		this.enterRule(_localctx, 438, LLVMIRParser.RULE_arg);
		let _la: number;
		try {
			this.state = 3278;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 286, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3266;
				this.concreteType();
				this.state = 3270;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.StringLit || ((((_la - 173)) & ~0x1F) === 0 && ((1 << (_la - 173)) & ((1 << (LLVMIRParser.KwAlignstack - 173)) | (1 << (LLVMIRParser.KwAlign - 173)) | (1 << (LLVMIRParser.KwByref - 173)) | (1 << (LLVMIRParser.KwByval - 173)) | (1 << (LLVMIRParser.KwDereferenceable - 173)) | (1 << (LLVMIRParser.KwDereferenceableOrNull - 173)) | (1 << (LLVMIRParser.KwElementtype - 173)) | (1 << (LLVMIRParser.KwInalloca - 173)) | (1 << (LLVMIRParser.KwAllocalign - 173)) | (1 << (LLVMIRParser.KwAllocptr - 173)) | (1 << (LLVMIRParser.KwImmarg - 173)) | (1 << (LLVMIRParser.KwInreg - 173)) | (1 << (LLVMIRParser.KwNest - 173)) | (1 << (LLVMIRParser.KwNoalias - 173)) | (1 << (LLVMIRParser.KwNocapture - 173)) | (1 << (LLVMIRParser.KwNofree - 173)) | (1 << (LLVMIRParser.KwNonnull - 173)) | (1 << (LLVMIRParser.KwNoundef - 173)) | (1 << (LLVMIRParser.KwReadnone - 173)) | (1 << (LLVMIRParser.KwReadonly - 173)) | (1 << (LLVMIRParser.KwReturned - 173)) | (1 << (LLVMIRParser.KwSignext - 173)) | (1 << (LLVMIRParser.KwSwiftasync - 173)))) !== 0) || ((((_la - 205)) & ~0x1F) === 0 && ((1 << (_la - 205)) & ((1 << (LLVMIRParser.KwSwifterror - 205)) | (1 << (LLVMIRParser.KwSwiftself - 205)) | (1 << (LLVMIRParser.KwWriteonly - 205)) | (1 << (LLVMIRParser.KwZeroext - 205)) | (1 << (LLVMIRParser.KwPreallocated - 205)) | (1 << (LLVMIRParser.KwSret - 205)))) !== 0)) {
					{
					{
					this.state = 3267;
					this.paramAttribute();
					}
					}
					this.state = 3272;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				this.state = 3273;
				this.value();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3275;
				this.metadataType();
				this.state = 3276;
				this.metadata();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public exceptionArg(): ExceptionArgContext {
		let _localctx: ExceptionArgContext = new ExceptionArgContext(this._ctx, this.state);
		this.enterRule(_localctx, 440, LLVMIRParser.RULE_exceptionArg);
		try {
			this.state = 3286;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 287, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3280;
				this.concreteType();
				this.state = 3281;
				this.value();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3283;
				this.metadataType();
				this.state = 3284;
				this.metadata();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public exceptionPad(): ExceptionPadContext {
		let _localctx: ExceptionPadContext = new ExceptionPadContext(this._ctx, this.state);
		this.enterRule(_localctx, 442, LLVMIRParser.RULE_exceptionPad);
		try {
			this.state = 3290;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.Kwnone:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3288;
				this.noneConst();
				}
				break;
			case LLVMIRParser.LocalIdent:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3289;
				this.match(LLVMIRParser.LocalIdent);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public externalLinkage(): ExternalLinkageContext {
		let _localctx: ExternalLinkageContext = new ExternalLinkageContext(this._ctx, this.state);
		this.enterRule(_localctx, 444, LLVMIRParser.RULE_externalLinkage);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3292;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwExternWeak || _la === LLVMIRParser.KwExternal)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public internalLinkage(): InternalLinkageContext {
		let _localctx: InternalLinkageContext = new InternalLinkageContext(this._ctx, this.state);
		this.enterRule(_localctx, 446, LLVMIRParser.RULE_internalLinkage);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3294;
			_la = this._input.LA(1);
			if (!(((((_la - 225)) & ~0x1F) === 0 && ((1 << (_la - 225)) & ((1 << (LLVMIRParser.KwWeak - 225)) | (1 << (LLVMIRParser.KwAppending - 225)) | (1 << (LLVMIRParser.KwAvailableExternally - 225)) | (1 << (LLVMIRParser.KwCommon - 225)) | (1 << (LLVMIRParser.KwInternal - 225)) | (1 << (LLVMIRParser.KwLinkonce - 225)) | (1 << (LLVMIRParser.KwLinkonceOdr - 225)) | (1 << (LLVMIRParser.KwPrivate - 225)) | (1 << (LLVMIRParser.KwWeakOdr - 225)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public linkage(): LinkageContext {
		let _localctx: LinkageContext = new LinkageContext(this._ctx, this.state);
		this.enterRule(_localctx, 448, LLVMIRParser.RULE_linkage);
		try {
			this.state = 3298;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwWeak:
			case LLVMIRParser.KwAppending:
			case LLVMIRParser.KwAvailableExternally:
			case LLVMIRParser.KwCommon:
			case LLVMIRParser.KwInternal:
			case LLVMIRParser.KwLinkonce:
			case LLVMIRParser.KwLinkonceOdr:
			case LLVMIRParser.KwPrivate:
			case LLVMIRParser.KwWeakOdr:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3296;
				this.internalLinkage();
				}
				break;
			case LLVMIRParser.KwExternWeak:
			case LLVMIRParser.KwExternal:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3297;
				this.externalLinkage();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public preemption(): PreemptionContext {
		let _localctx: PreemptionContext = new PreemptionContext(this._ctx, this.state);
		this.enterRule(_localctx, 450, LLVMIRParser.RULE_preemption);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3300;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwDsoLocal || _la === LLVMIRParser.KwDsoPreemptable)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public visibility(): VisibilityContext {
		let _localctx: VisibilityContext = new VisibilityContext(this._ctx, this.state);
		this.enterRule(_localctx, 452, LLVMIRParser.RULE_visibility);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3302;
			_la = this._input.LA(1);
			if (!(((((_la - 244)) & ~0x1F) === 0 && ((1 << (_la - 244)) & ((1 << (LLVMIRParser.Kwdefault - 244)) | (1 << (LLVMIRParser.KwHidden - 244)) | (1 << (LLVMIRParser.KwProtected - 244)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dllStorageClass(): DllStorageClassContext {
		let _localctx: DllStorageClassContext = new DllStorageClassContext(this._ctx, this.state);
		this.enterRule(_localctx, 454, LLVMIRParser.RULE_dllStorageClass);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3304;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwDllexport || _la === LLVMIRParser.KwDllimport)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public tlsModel(): TlsModelContext {
		let _localctx: TlsModelContext = new TlsModelContext(this._ctx, this.state);
		this.enterRule(_localctx, 456, LLVMIRParser.RULE_tlsModel);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3306;
			_la = this._input.LA(1);
			if (!(((((_la - 249)) & ~0x1F) === 0 && ((1 << (_la - 249)) & ((1 << (LLVMIRParser.KwInitialexec - 249)) | (1 << (LLVMIRParser.KwLocaldynamic - 249)) | (1 << (LLVMIRParser.KwLocalexec - 249)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unnamedAddr(): UnnamedAddrContext {
		let _localctx: UnnamedAddrContext = new UnnamedAddrContext(this._ctx, this.state);
		this.enterRule(_localctx, 458, LLVMIRParser.RULE_unnamedAddr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3308;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwLocalUnnamedAddr || _la === LLVMIRParser.KwUnnamedAddr)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public externallyInitialized(): ExternallyInitializedContext {
		let _localctx: ExternallyInitializedContext = new ExternallyInitializedContext(this._ctx, this.state);
		this.enterRule(_localctx, 460, LLVMIRParser.RULE_externallyInitialized);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3310;
			this.match(LLVMIRParser.KwExternallyInitialized);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public immutable(): ImmutableContext {
		let _localctx: ImmutableContext = new ImmutableContext(this._ctx, this.state);
		this.enterRule(_localctx, 462, LLVMIRParser.RULE_immutable);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3312;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwConstant || _la === LLVMIRParser.KwGlobal)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public funcAttr(): FuncAttrContext {
		let _localctx: FuncAttrContext = new FuncAttrContext(this._ctx, this.state);
		this.enterRule(_localctx, 464, LLVMIRParser.RULE_funcAttr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3314;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwSanitizeMemtag || ((((_la - 197)) & ~0x1F) === 0 && ((1 << (_la - 197)) & ((1 << (LLVMIRParser.KwNofree - 197)) | (1 << (LLVMIRParser.KwReadnone - 197)) | (1 << (LLVMIRParser.KwReadonly - 197)) | (1 << (LLVMIRParser.KwWriteonly - 197)))) !== 0) || ((((_la - 257)) & ~0x1F) === 0 && ((1 << (_la - 257)) & ((1 << (LLVMIRParser.KwAlwaysinline - 257)) | (1 << (LLVMIRParser.KwArgmemonly - 257)) | (1 << (LLVMIRParser.KwBuiltin - 257)) | (1 << (LLVMIRParser.KwCold - 257)) | (1 << (LLVMIRParser.KwConvergent - 257)) | (1 << (LLVMIRParser.KwDisableSanitizerInstrumentation - 257)) | (1 << (LLVMIRParser.KwFnRetThunkExtern - 257)) | (1 << (LLVMIRParser.KwHot - 257)) | (1 << (LLVMIRParser.KwInaccessiblememOrArgmemonly - 257)) | (1 << (LLVMIRParser.KwInaccessiblememonly - 257)) | (1 << (LLVMIRParser.KwInlinehint - 257)) | (1 << (LLVMIRParser.KwJumptable - 257)) | (1 << (LLVMIRParser.KwMinsize - 257)) | (1 << (LLVMIRParser.KwMustprogress - 257)) | (1 << (LLVMIRParser.KwNaked - 257)) | (1 << (LLVMIRParser.KwNobuiltin - 257)) | (1 << (LLVMIRParser.KwNocallback - 257)) | (1 << (LLVMIRParser.KwNocfCheck - 257)) | (1 << (LLVMIRParser.KwNoduplicate - 257)) | (1 << (LLVMIRParser.KwNoimplicitfloat - 257)) | (1 << (LLVMIRParser.KwNoinline - 257)) | (1 << (LLVMIRParser.KwNomerge - 257)) | (1 << (LLVMIRParser.KwNonlazybind - 257)) | (1 << (LLVMIRParser.KwNoprofile - 257)) | (1 << (LLVMIRParser.KwNorecurse - 257)) | (1 << (LLVMIRParser.KwNoredzone - 257)) | (1 << (LLVMIRParser.KwNoreturn - 257)) | (1 << (LLVMIRParser.KwNosanitizeBounds - 257)) | (1 << (LLVMIRParser.KwNosanitizeCoverage - 257)) | (1 << (LLVMIRParser.KwNosync - 257)) | (1 << (LLVMIRParser.KwNounwind - 257)) | (1 << (LLVMIRParser.KwNullPointerIsValid - 257)))) !== 0) || ((((_la - 289)) & ~0x1F) === 0 && ((1 << (_la - 289)) & ((1 << (LLVMIRParser.KwOptforfuzzing - 289)) | (1 << (LLVMIRParser.KwOptnone - 289)) | (1 << (LLVMIRParser.KwOptsize - 289)) | (1 << (LLVMIRParser.KwPresplitcoroutine - 289)) | (1 << (LLVMIRParser.KwReturnsTwice - 289)) | (1 << (LLVMIRParser.KwSafestack - 289)) | (1 << (LLVMIRParser.KwSanitizeAddress - 289)) | (1 << (LLVMIRParser.KwSanitizeHwaddress - 289)) | (1 << (LLVMIRParser.KwSanitizeMemory - 289)) | (1 << (LLVMIRParser.KwSanitizeThread - 289)) | (1 << (LLVMIRParser.KwShadowcallstack - 289)) | (1 << (LLVMIRParser.KwSpeculatable - 289)) | (1 << (LLVMIRParser.KwSpeculativeLoadHardening - 289)) | (1 << (LLVMIRParser.KwSsp - 289)) | (1 << (LLVMIRParser.KwSspreq - 289)) | (1 << (LLVMIRParser.KwSspstrong - 289)) | (1 << (LLVMIRParser.KwStrictfp - 289)) | (1 << (LLVMIRParser.KwWillreturn - 289)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public distinct(): DistinctContext {
		let _localctx: DistinctContext = new DistinctContext(this._ctx, this.state);
		this.enterRule(_localctx, 466, LLVMIRParser.RULE_distinct);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3316;
			this.match(LLVMIRParser.KwDistinct);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inBounds(): InBoundsContext {
		let _localctx: InBoundsContext = new InBoundsContext(this._ctx, this.state);
		this.enterRule(_localctx, 468, LLVMIRParser.RULE_inBounds);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3318;
			this.match(LLVMIRParser.KwInbounds);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public returnAttr(): ReturnAttrContext {
		let _localctx: ReturnAttrContext = new ReturnAttrContext(this._ctx, this.state);
		this.enterRule(_localctx, 470, LLVMIRParser.RULE_returnAttr);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3320;
			_la = this._input.LA(1);
			if (!(((((_la - 193)) & ~0x1F) === 0 && ((1 << (_la - 193)) & ((1 << (LLVMIRParser.KwInreg - 193)) | (1 << (LLVMIRParser.KwNoalias - 193)) | (1 << (LLVMIRParser.KwNonnull - 193)) | (1 << (LLVMIRParser.KwNoundef - 193)) | (1 << (LLVMIRParser.KwSignext - 193)) | (1 << (LLVMIRParser.KwZeroext - 193)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public overflowFlag(): OverflowFlagContext {
		let _localctx: OverflowFlagContext = new OverflowFlagContext(this._ctx, this.state);
		this.enterRule(_localctx, 472, LLVMIRParser.RULE_overflowFlag);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3322;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwNsw || _la === LLVMIRParser.KwNuw)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public iPred(): IPredContext {
		let _localctx: IPredContext = new IPredContext(this._ctx, this.state);
		this.enterRule(_localctx, 474, LLVMIRParser.RULE_iPred);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3324;
			_la = this._input.LA(1);
			if (!(((((_la - 311)) & ~0x1F) === 0 && ((1 << (_la - 311)) & ((1 << (LLVMIRParser.KwEq - 311)) | (1 << (LLVMIRParser.KwNe - 311)) | (1 << (LLVMIRParser.KwSge - 311)) | (1 << (LLVMIRParser.KwSgt - 311)) | (1 << (LLVMIRParser.KwSle - 311)) | (1 << (LLVMIRParser.KwSlt - 311)) | (1 << (LLVMIRParser.KwUge - 311)) | (1 << (LLVMIRParser.KwUgt - 311)) | (1 << (LLVMIRParser.KwUle - 311)) | (1 << (LLVMIRParser.KwUlt - 311)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fPred(): FPredContext {
		let _localctx: FPredContext = new FPredContext(this._ctx, this.state);
		this.enterRule(_localctx, 476, LLVMIRParser.RULE_fPred);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3326;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.KwTrue || _la === LLVMIRParser.KwFalse || ((((_la - 317)) & ~0x1F) === 0 && ((1 << (_la - 317)) & ((1 << (LLVMIRParser.KwUge - 317)) | (1 << (LLVMIRParser.KwUgt - 317)) | (1 << (LLVMIRParser.KwUle - 317)) | (1 << (LLVMIRParser.KwUlt - 317)) | (1 << (LLVMIRParser.KwOeq - 317)) | (1 << (LLVMIRParser.KwOge - 317)) | (1 << (LLVMIRParser.KwOgt - 317)) | (1 << (LLVMIRParser.KwOle - 317)) | (1 << (LLVMIRParser.KwOlt - 317)) | (1 << (LLVMIRParser.KwOne - 317)) | (1 << (LLVMIRParser.KwOrd - 317)) | (1 << (LLVMIRParser.KwUeq - 317)) | (1 << (LLVMIRParser.KwUne - 317)) | (1 << (LLVMIRParser.KwUno - 317)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public atomicOrdering(): AtomicOrderingContext {
		let _localctx: AtomicOrderingContext = new AtomicOrderingContext(this._ctx, this.state);
		this.enterRule(_localctx, 478, LLVMIRParser.RULE_atomicOrdering);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3328;
			_la = this._input.LA(1);
			if (!(((((_la - 331)) & ~0x1F) === 0 && ((1 << (_la - 331)) & ((1 << (LLVMIRParser.KwAcqRel - 331)) | (1 << (LLVMIRParser.KwAcquire - 331)) | (1 << (LLVMIRParser.KwMonotonic - 331)) | (1 << (LLVMIRParser.KwRelease - 331)) | (1 << (LLVMIRParser.KwSeqCst - 331)) | (1 << (LLVMIRParser.KwUnordered - 331)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public callingConvEnum(): CallingConvEnumContext {
		let _localctx: CallingConvEnumContext = new CallingConvEnumContext(this._ctx, this.state);
		this.enterRule(_localctx, 480, LLVMIRParser.RULE_callingConvEnum);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3330;
			_la = this._input.LA(1);
			if (!(((((_la - 337)) & ~0x1F) === 0 && ((1 << (_la - 337)) & ((1 << (LLVMIRParser.KwAarch64SveVectorPcs - 337)) | (1 << (LLVMIRParser.KwAarch64VectorPcs - 337)) | (1 << (LLVMIRParser.KwAmdgpuCs - 337)) | (1 << (LLVMIRParser.KwAmdgpuEs - 337)) | (1 << (LLVMIRParser.KwAmdgpuGfx - 337)) | (1 << (LLVMIRParser.KwAmdgpuGs - 337)) | (1 << (LLVMIRParser.KwAmdgpuHs - 337)) | (1 << (LLVMIRParser.KwAmdgpuKernel - 337)) | (1 << (LLVMIRParser.KwAmdgpuLs - 337)) | (1 << (LLVMIRParser.KwAmdgpuPs - 337)) | (1 << (LLVMIRParser.KwAmdgpuVs - 337)) | (1 << (LLVMIRParser.KwAnyregcc - 337)) | (1 << (LLVMIRParser.KwArmAapcsVfpcc - 337)) | (1 << (LLVMIRParser.KwArmAapcscc - 337)) | (1 << (LLVMIRParser.KwArmApcscc - 337)) | (1 << (LLVMIRParser.KwAvrIntrcc - 337)) | (1 << (LLVMIRParser.KwAvrSignalcc - 337)) | (1 << (LLVMIRParser.KwCcc - 337)) | (1 << (LLVMIRParser.KwCfguardCheckcc - 337)) | (1 << (LLVMIRParser.KwColdcc - 337)) | (1 << (LLVMIRParser.KwCxxFastTlscc - 337)) | (1 << (LLVMIRParser.KwFastcc - 337)) | (1 << (LLVMIRParser.KwGhccc - 337)) | (1 << (LLVMIRParser.KwHhvmCcc - 337)) | (1 << (LLVMIRParser.KwHhvmcc - 337)) | (1 << (LLVMIRParser.KwIntelOclBicc - 337)) | (1 << (LLVMIRParser.KwMsp430Intrcc - 337)) | (1 << (LLVMIRParser.KwPreserveAllcc - 337)) | (1 << (LLVMIRParser.KwPreserveMostcc - 337)) | (1 << (LLVMIRParser.KwPtxDevice - 337)) | (1 << (LLVMIRParser.KwPtxKernel - 337)) | (1 << (LLVMIRParser.KwSpirFunc - 337)))) !== 0) || ((((_la - 369)) & ~0x1F) === 0 && ((1 << (_la - 369)) & ((1 << (LLVMIRParser.KwSpirKernel - 369)) | (1 << (LLVMIRParser.KwSwiftcc - 369)) | (1 << (LLVMIRParser.KwSwifttailcc - 369)) | (1 << (LLVMIRParser.KwTailcc - 369)) | (1 << (LLVMIRParser.KwWebkitJscc - 369)) | (1 << (LLVMIRParser.KwWin64cc - 369)) | (1 << (LLVMIRParser.KwX8664Sysvcc - 369)) | (1 << (LLVMIRParser.KwX86Fastcallcc - 369)) | (1 << (LLVMIRParser.KwX86Intrcc - 369)) | (1 << (LLVMIRParser.KwX86Regcallcc - 369)) | (1 << (LLVMIRParser.KwX86Stdcallcc - 369)) | (1 << (LLVMIRParser.KwX86Thiscallcc - 369)) | (1 << (LLVMIRParser.KwX86Vectorcallcc - 369)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fastMathFlag(): FastMathFlagContext {
		let _localctx: FastMathFlagContext = new FastMathFlagContext(this._ctx, this.state);
		this.enterRule(_localctx, 482, LLVMIRParser.RULE_fastMathFlag);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3332;
			_la = this._input.LA(1);
			if (!(((((_la - 382)) & ~0x1F) === 0 && ((1 << (_la - 382)) & ((1 << (LLVMIRParser.KwAfn - 382)) | (1 << (LLVMIRParser.KwArcp - 382)) | (1 << (LLVMIRParser.KwContract - 382)) | (1 << (LLVMIRParser.KwFast - 382)) | (1 << (LLVMIRParser.KwNinf - 382)) | (1 << (LLVMIRParser.KwNnan - 382)) | (1 << (LLVMIRParser.KwNsz - 382)) | (1 << (LLVMIRParser.KwReassoc - 382)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public atomicOp(): AtomicOpContext {
		let _localctx: AtomicOpContext = new AtomicOpContext(this._ctx, this.state);
		this.enterRule(_localctx, 484, LLVMIRParser.RULE_atomicOp);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3334;
			_la = this._input.LA(1);
			if (!(((((_la - 52)) & ~0x1F) === 0 && ((1 << (_la - 52)) & ((1 << (LLVMIRParser.OpFmax - 52)) | (1 << (LLVMIRParser.OpFmin - 52)) | (1 << (LLVMIRParser.OpMax - 52)) | (1 << (LLVMIRParser.OpMin - 52)) | (1 << (LLVMIRParser.OpNand - 52)) | (1 << (LLVMIRParser.OpUmax - 52)) | (1 << (LLVMIRParser.OpUmin - 52)) | (1 << (LLVMIRParser.OpXchg - 52)) | (1 << (LLVMIRParser.OpAnd - 52)) | (1 << (LLVMIRParser.OpOr - 52)))) !== 0) || ((((_la - 84)) & ~0x1F) === 0 && ((1 << (_la - 84)) & ((1 << (LLVMIRParser.OpXor - 84)) | (1 << (LLVMIRParser.OpAdd - 84)) | (1 << (LLVMIRParser.OpSub - 84)) | (1 << (LLVMIRParser.OpFadd - 84)) | (1 << (LLVMIRParser.OpFsub - 84)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public floatKind(): FloatKindContext {
		let _localctx: FloatKindContext = new FloatKindContext(this._ctx, this.state);
		this.enterRule(_localctx, 486, LLVMIRParser.RULE_floatKind);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3336;
			_la = this._input.LA(1);
			if (!(((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0))) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public specializedMDNode(): SpecializedMDNodeContext {
		let _localctx: SpecializedMDNodeContext = new SpecializedMDNodeContext(this._ctx, this.state);
		this.enterRule(_localctx, 488, LLVMIRParser.RULE_specializedMDNode);
		try {
			this.state = 3366;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 290, this._ctx) ) {
			case 1:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3338;
				this.diBasicType();
				}
				break;

			case 2:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3339;
				this.diCommonBlock();
				}
				break;

			case 3:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3340;
				this.diCompileUnit();
				}
				break;

			case 4:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3341;
				this.diCompositeType();
				}
				break;

			case 5:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3342;
				this.diDerivedType();
				}
				break;

			case 6:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3343;
				this.diEnumerator();
				}
				break;

			case 7:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3344;
				this.diExpression();
				}
				break;

			case 8:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3345;
				this.diFile();
				}
				break;

			case 9:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3346;
				this.diGlobalVariable();
				}
				break;

			case 10:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3347;
				this.diGlobalVariableExpression();
				}
				break;

			case 11:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3348;
				this.diImportedEntity();
				}
				break;

			case 12:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3349;
				this.diLabel();
				}
				break;

			case 13:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 3350;
				this.diLexicalBlock();
				}
				break;

			case 14:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 3351;
				this.diLexicalBlockFile();
				}
				break;

			case 15:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 3352;
				this.diLocalVariable();
				}
				break;

			case 16:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 3353;
				this.diLocation();
				}
				break;

			case 17:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 3354;
				this.diMacro();
				}
				break;

			case 18:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 3355;
				this.diMacroFile();
				}
				break;

			case 19:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 3356;
				this.diModule();
				}
				break;

			case 20:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 3357;
				this.diNamespace();
				}
				break;

			case 21:
				this.enterOuterAlt(_localctx, 21);
				{
				this.state = 3358;
				this.diObjCProperty();
				}
				break;

			case 22:
				this.enterOuterAlt(_localctx, 22);
				{
				this.state = 3359;
				this.diStringType();
				}
				break;

			case 23:
				this.enterOuterAlt(_localctx, 23);
				{
				this.state = 3360;
				this.diSubprogram();
				}
				break;

			case 24:
				this.enterOuterAlt(_localctx, 24);
				{
				this.state = 3361;
				this.diSubrange();
				}
				break;

			case 25:
				this.enterOuterAlt(_localctx, 25);
				{
				this.state = 3362;
				this.diSubroutineType();
				}
				break;

			case 26:
				this.enterOuterAlt(_localctx, 26);
				{
				this.state = 3363;
				this.diTemplateTypeParameter();
				}
				break;

			case 27:
				this.enterOuterAlt(_localctx, 27);
				{
				this.state = 3364;
				this.diTemplateValueParameter();
				}
				break;

			case 28:
				this.enterOuterAlt(_localctx, 28);
				{
				this.state = 3365;
				this.genericDiNode();
				}
				break;
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diBasicType(): DiBasicTypeContext {
		let _localctx: DiBasicTypeContext = new DiBasicTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 490, LLVMIRParser.RULE_diBasicType);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3368;
			this.match(LLVMIRParser.DIBasicType);
			this.state = 3369;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3378;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwFlagsLabel - 397)) | (1 << (LLVMIRParser.KwAlignLabel - 397)))) !== 0) || _la === LLVMIRParser.KwEncodingLabel || _la === LLVMIRParser.KwSizeLabel) {
				{
				this.state = 3370;
				this.diBasicTypeField();
				this.state = 3375;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3371;
					this.match(LLVMIRParser.Comma);
					this.state = 3372;
					this.diBasicTypeField();
					}
					}
					this.state = 3377;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3380;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCommonBlock(): DiCommonBlockContext {
		let _localctx: DiCommonBlockContext = new DiCommonBlockContext(this._ctx, this.state);
		this.enterRule(_localctx, 492, LLVMIRParser.RULE_diCommonBlock);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3382;
			this.match(LLVMIRParser.DICommonBlock);
			this.state = 3383;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3392;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwNameLabel || _la === LLVMIRParser.KwDeclarationLabel || _la === LLVMIRParser.KwFileLabel || _la === LLVMIRParser.KwLineLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3384;
				this.diCommonBlockField();
				this.state = 3389;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3385;
					this.match(LLVMIRParser.Comma);
					this.state = 3386;
					this.diCommonBlockField();
					}
					}
					this.state = 3391;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3394;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCompileUnit(): DiCompileUnitContext {
		let _localctx: DiCompileUnitContext = new DiCompileUnitContext(this._ctx, this.state);
		this.enterRule(_localctx, 494, LLVMIRParser.RULE_diCompileUnit);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3396;
			this.match(LLVMIRParser.DICompileUnit);
			this.state = 3397;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3406;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 404)) & ~0x1F) === 0 && ((1 << (_la - 404)) & ((1 << (LLVMIRParser.KwFlagsLabel - 404)) | (1 << (LLVMIRParser.KwDebugInfoForProfilingLabel - 404)) | (1 << (LLVMIRParser.KwDwoIdLabel - 404)) | (1 << (LLVMIRParser.KwEmissionKindLabel - 404)) | (1 << (LLVMIRParser.KwEnumsLabel - 404)))) !== 0) || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwGlobalsLabel - 438)) | (1 << (LLVMIRParser.KwImportsLabel - 438)) | (1 << (LLVMIRParser.KwIsOptimizedLabel - 438)) | (1 << (LLVMIRParser.KwLanguageLabel - 438)) | (1 << (LLVMIRParser.KwMacrosLabel - 438)) | (1 << (LLVMIRParser.KwNameTableKindLabel - 438)) | (1 << (LLVMIRParser.KwProducerLabel - 438)) | (1 << (LLVMIRParser.KwRangesBaseAddressLabel - 438)) | (1 << (LLVMIRParser.KwRetainedTypesLabel - 438)))) !== 0) || ((((_la - 470)) & ~0x1F) === 0 && ((1 << (_la - 470)) & ((1 << (LLVMIRParser.KwRuntimeVersionLabel - 470)) | (1 << (LLVMIRParser.KwSdkLabel - 470)) | (1 << (LLVMIRParser.KwSplitDebugFilenameLabel - 470)) | (1 << (LLVMIRParser.KwSplitDebugInliningLabel - 470)) | (1 << (LLVMIRParser.KwSysrootLabel - 470)))) !== 0)) {
				{
				this.state = 3398;
				this.diCompileUnitField();
				this.state = 3403;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3399;
					this.match(LLVMIRParser.Comma);
					this.state = 3400;
					this.diCompileUnitField();
					}
					}
					this.state = 3405;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3408;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCompositeType(): DiCompositeTypeContext {
		let _localctx: DiCompositeTypeContext = new DiCompositeTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 496, LLVMIRParser.RULE_diCompositeType);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3410;
			this.match(LLVMIRParser.DICompositeType);
			this.state = 3411;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3420;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwFlagsLabel - 397)) | (1 << (LLVMIRParser.KwAlignLabel - 397)) | (1 << (LLVMIRParser.KwAllocatedLabel - 397)) | (1 << (LLVMIRParser.KwAnnotationsLabel - 397)) | (1 << (LLVMIRParser.KwAssociatedLabel - 397)) | (1 << (LLVMIRParser.KwBaseTypeLabel - 397)) | (1 << (LLVMIRParser.KwDiscriminatorLabel - 397)) | (1 << (LLVMIRParser.KwDataLocationLabel - 397)) | (1 << (LLVMIRParser.KwElementsLabel - 397)))) !== 0) || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwIdentifierLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)) | (1 << (LLVMIRParser.KwOffsetLabel - 438)) | (1 << (LLVMIRParser.KwRankLabel - 438)) | (1 << (LLVMIRParser.KwRuntimeLangLabel - 438)))) !== 0) || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (LLVMIRParser.KwScopeLabel - 471)) | (1 << (LLVMIRParser.KwSizeLabel - 471)) | (1 << (LLVMIRParser.KwTemplateParamsLabel - 471)) | (1 << (LLVMIRParser.KwVtableHolderLabel - 471)))) !== 0)) {
				{
				this.state = 3412;
				this.diCompositeTypeField();
				this.state = 3417;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3413;
					this.match(LLVMIRParser.Comma);
					this.state = 3414;
					this.diCompositeTypeField();
					}
					}
					this.state = 3419;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3422;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCompositeTypeField(): DiCompositeTypeFieldContext {
		let _localctx: DiCompositeTypeFieldContext = new DiCompositeTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 498, LLVMIRParser.RULE_diCompositeTypeField);
		try {
			this.state = 3445;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3424;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3425;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3426;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3427;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3428;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwBaseTypeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3429;
				this.baseTypeField();
				}
				break;
			case LLVMIRParser.KwSizeLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3430;
				this.sizeField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3431;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwOffsetLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3432;
				this.offsetField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3433;
				this.flagsField();
				}
				break;
			case LLVMIRParser.KwElementsLabel:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3434;
				this.elementsField();
				}
				break;
			case LLVMIRParser.KwRuntimeLangLabel:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3435;
				this.runtimeLangField();
				}
				break;
			case LLVMIRParser.KwVtableHolderLabel:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 3436;
				this.vtableHolderField();
				}
				break;
			case LLVMIRParser.KwTemplateParamsLabel:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 3437;
				this.templateParamsField();
				}
				break;
			case LLVMIRParser.KwIdentifierLabel:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 3438;
				this.identifierField();
				}
				break;
			case LLVMIRParser.KwDiscriminatorLabel:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 3439;
				this.discriminatorField();
				}
				break;
			case LLVMIRParser.KwDataLocationLabel:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 3440;
				this.dataLocationField();
				}
				break;
			case LLVMIRParser.KwAssociatedLabel:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 3441;
				this.associatedField();
				}
				break;
			case LLVMIRParser.KwAllocatedLabel:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 3442;
				this.allocatedField();
				}
				break;
			case LLVMIRParser.KwRankLabel:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 3443;
				this.rankField();
				}
				break;
			case LLVMIRParser.KwAnnotationsLabel:
				this.enterOuterAlt(_localctx, 21);
				{
				this.state = 3444;
				this.annotationsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diDerivedType(): DiDerivedTypeContext {
		let _localctx: DiDerivedTypeContext = new DiDerivedTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 500, LLVMIRParser.RULE_diDerivedType);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3447;
			this.match(LLVMIRParser.DIDerivedType);
			this.state = 3448;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3457;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwFlagsLabel - 397)) | (1 << (LLVMIRParser.KwAlignLabel - 397)) | (1 << (LLVMIRParser.KwAnnotationsLabel - 397)) | (1 << (LLVMIRParser.KwBaseTypeLabel - 397)) | (1 << (LLVMIRParser.KwDwarfAddressSpaceLabel - 397)))) !== 0) || ((((_la - 437)) & ~0x1F) === 0 && ((1 << (_la - 437)) & ((1 << (LLVMIRParser.KwExtraDataLabel - 437)) | (1 << (LLVMIRParser.KwFileLabel - 437)) | (1 << (LLVMIRParser.KwLineLabel - 437)) | (1 << (LLVMIRParser.KwOffsetLabel - 437)))) !== 0) || _la === LLVMIRParser.KwScopeLabel || _la === LLVMIRParser.KwSizeLabel) {
				{
				this.state = 3449;
				this.diDerivedTypeField();
				this.state = 3454;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3450;
					this.match(LLVMIRParser.Comma);
					this.state = 3451;
					this.diDerivedTypeField();
					}
					}
					this.state = 3456;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3459;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diDerivedTypeField(): DiDerivedTypeFieldContext {
		let _localctx: DiDerivedTypeFieldContext = new DiDerivedTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 502, LLVMIRParser.RULE_diDerivedTypeField);
		try {
			this.state = 3474;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3461;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3462;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3463;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3464;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3465;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwBaseTypeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3466;
				this.baseTypeField();
				}
				break;
			case LLVMIRParser.KwSizeLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3467;
				this.sizeField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3468;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwOffsetLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3469;
				this.offsetField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3470;
				this.flagsField();
				}
				break;
			case LLVMIRParser.KwExtraDataLabel:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3471;
				this.extraDataField();
				}
				break;
			case LLVMIRParser.KwDwarfAddressSpaceLabel:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3472;
				this.dwarfAddressSpaceField();
				}
				break;
			case LLVMIRParser.KwAnnotationsLabel:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 3473;
				this.annotationsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diEnumerator(): DiEnumeratorContext {
		let _localctx: DiEnumeratorContext = new DiEnumeratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 504, LLVMIRParser.RULE_diEnumerator);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3476;
			this.match(LLVMIRParser.DIEnumerator);
			this.state = 3477;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3486;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwNameLabel || _la === LLVMIRParser.KwValueLabel || _la === LLVMIRParser.KwIsUnsignedLabel) {
				{
				this.state = 3478;
				this.diEnumeratorField();
				this.state = 3483;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3479;
					this.match(LLVMIRParser.Comma);
					this.state = 3480;
					this.diEnumeratorField();
					}
					}
					this.state = 3485;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3488;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diEnumeratorField(): DiEnumeratorFieldContext {
		let _localctx: DiEnumeratorFieldContext = new DiEnumeratorFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 506, LLVMIRParser.RULE_diEnumeratorField);
		try {
			this.state = 3493;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3490;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwValueLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3491;
				this.valueIntField();
				}
				break;
			case LLVMIRParser.KwIsUnsignedLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3492;
				this.isUnsignedField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diFile(): DiFileContext {
		let _localctx: DiFileContext = new DiFileContext(this._ctx, this.state);
		this.enterRule(_localctx, 508, LLVMIRParser.RULE_diFile);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3495;
			this.match(LLVMIRParser.DIFile);
			this.state = 3496;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3505;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 413)) & ~0x1F) === 0 && ((1 << (_la - 413)) & ((1 << (LLVMIRParser.KwChecksumLabel - 413)) | (1 << (LLVMIRParser.KwChecksumkindLabel - 413)) | (1 << (LLVMIRParser.KwDirectoryLabel - 413)) | (1 << (LLVMIRParser.KwFilenameLabel - 413)))) !== 0) || _la === LLVMIRParser.KwSourceLabel) {
				{
				this.state = 3497;
				this.diFileField();
				this.state = 3502;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3498;
					this.match(LLVMIRParser.Comma);
					this.state = 3499;
					this.diFileField();
					}
					}
					this.state = 3504;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3507;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diFileField(): DiFileFieldContext {
		let _localctx: DiFileFieldContext = new DiFileFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 510, LLVMIRParser.RULE_diFileField);
		try {
			this.state = 3514;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwFilenameLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3509;
				this.filenameField();
				}
				break;
			case LLVMIRParser.KwDirectoryLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3510;
				this.directoryField();
				}
				break;
			case LLVMIRParser.KwChecksumkindLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3511;
				this.checksumkindField();
				}
				break;
			case LLVMIRParser.KwChecksumLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3512;
				this.checksumField();
				}
				break;
			case LLVMIRParser.KwSourceLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3513;
				this.sourceField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diGlobalVariable(): DiGlobalVariableContext {
		let _localctx: DiGlobalVariableContext = new DiGlobalVariableContext(this._ctx, this.state);
		this.enterRule(_localctx, 512, LLVMIRParser.RULE_diGlobalVariable);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3516;
			this.match(LLVMIRParser.DIGlobalVariable);
			this.state = 3517;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3526;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwAlignLabel - 400)) | (1 << (LLVMIRParser.KwAnnotationsLabel - 400)) | (1 << (LLVMIRParser.KwDeclarationLabel - 400)))) !== 0) || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwIsDefinitionLabel - 438)) | (1 << (LLVMIRParser.KwIsLocalLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)) | (1 << (LLVMIRParser.KwLinkageNameLabel - 438)))) !== 0) || _la === LLVMIRParser.KwScopeLabel || _la === LLVMIRParser.KwTemplateParamsLabel) {
				{
				this.state = 3518;
				this.diGlobalVariableField();
				this.state = 3523;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3519;
					this.match(LLVMIRParser.Comma);
					this.state = 3520;
					this.diGlobalVariableField();
					}
					}
					this.state = 3525;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3528;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diGlobalVariableField(): DiGlobalVariableFieldContext {
		let _localctx: DiGlobalVariableFieldContext = new DiGlobalVariableFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 514, LLVMIRParser.RULE_diGlobalVariableField);
		try {
			this.state = 3542;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3530;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3531;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwLinkageNameLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3532;
				this.linkageNameField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3533;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3534;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3535;
				this.typeField();
				}
				break;
			case LLVMIRParser.KwIsLocalLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3536;
				this.isLocalField();
				}
				break;
			case LLVMIRParser.KwIsDefinitionLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3537;
				this.isDefinitionField();
				}
				break;
			case LLVMIRParser.KwTemplateParamsLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3538;
				this.templateParamsField();
				}
				break;
			case LLVMIRParser.KwDeclarationLabel:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3539;
				this.declarationField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3540;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwAnnotationsLabel:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3541;
				this.annotationsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diGlobalVariableExpression(): DiGlobalVariableExpressionContext {
		let _localctx: DiGlobalVariableExpressionContext = new DiGlobalVariableExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 516, LLVMIRParser.RULE_diGlobalVariableExpression);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3544;
			this.match(LLVMIRParser.DIGlobalVariableExpression);
			this.state = 3545;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3554;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwExprLabel || _la === LLVMIRParser.KwVarLabel) {
				{
				this.state = 3546;
				this.diGlobalVariableExpressionField();
				this.state = 3551;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3547;
					this.match(LLVMIRParser.Comma);
					this.state = 3548;
					this.diGlobalVariableExpressionField();
					}
					}
					this.state = 3553;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3556;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diGlobalVariableExpressionField(): DiGlobalVariableExpressionFieldContext {
		let _localctx: DiGlobalVariableExpressionFieldContext = new DiGlobalVariableExpressionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 518, LLVMIRParser.RULE_diGlobalVariableExpressionField);
		try {
			this.state = 3560;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwVarLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3558;
				this.varField();
				}
				break;
			case LLVMIRParser.KwExprLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3559;
				this.exprField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diImportedEntity(): DiImportedEntityContext {
		let _localctx: DiImportedEntityContext = new DiImportedEntityContext(this._ctx, this.state);
		this.enterRule(_localctx, 520, LLVMIRParser.RULE_diImportedEntity);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3562;
			this.match(LLVMIRParser.DIImportedEntity);
			this.state = 3563;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3572;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwElementsLabel - 397)))) !== 0) || ((((_la - 433)) & ~0x1F) === 0 && ((1 << (_la - 433)) & ((1 << (LLVMIRParser.KwEntityLabel - 433)) | (1 << (LLVMIRParser.KwFileLabel - 433)) | (1 << (LLVMIRParser.KwLineLabel - 433)))) !== 0) || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3564;
				this.diImportedEntityField();
				this.state = 3569;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3565;
					this.match(LLVMIRParser.Comma);
					this.state = 3566;
					this.diImportedEntityField();
					}
					}
					this.state = 3571;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3574;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diImportedEntityField(): DiImportedEntityFieldContext {
		let _localctx: DiImportedEntityFieldContext = new DiImportedEntityFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 522, LLVMIRParser.RULE_diImportedEntityField);
		try {
			this.state = 3583;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3576;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3577;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwEntityLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3578;
				this.entityField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3579;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3580;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3581;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwElementsLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3582;
				this.elementsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLabel(): DiLabelContext {
		let _localctx: DiLabelContext = new DiLabelContext(this._ctx, this.state);
		this.enterRule(_localctx, 524, LLVMIRParser.RULE_diLabel);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3585;
			this.match(LLVMIRParser.DILabel);
			this.state = 3586;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3595;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwNameLabel || _la === LLVMIRParser.KwFileLabel || _la === LLVMIRParser.KwLineLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3587;
				this.diLabelField();
				this.state = 3592;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3588;
					this.match(LLVMIRParser.Comma);
					this.state = 3589;
					this.diLabelField();
					}
					}
					this.state = 3594;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3597;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLabelField(): DiLabelFieldContext {
		let _localctx: DiLabelFieldContext = new DiLabelFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 526, LLVMIRParser.RULE_diLabelField);
		try {
			this.state = 3603;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3599;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3600;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3601;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3602;
				this.lineField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLexicalBlock(): DiLexicalBlockContext {
		let _localctx: DiLexicalBlockContext = new DiLexicalBlockContext(this._ctx, this.state);
		this.enterRule(_localctx, 528, LLVMIRParser.RULE_diLexicalBlock);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3605;
			this.match(LLVMIRParser.DILexicalBlock);
			this.state = 3606;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3615;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwColumnLabel || _la === LLVMIRParser.KwFileLabel || _la === LLVMIRParser.KwLineLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3607;
				this.diLexicalBlockField();
				this.state = 3612;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3608;
					this.match(LLVMIRParser.Comma);
					this.state = 3609;
					this.diLexicalBlockField();
					}
					}
					this.state = 3614;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3617;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLexicalBlockField(): DiLexicalBlockFieldContext {
		let _localctx: DiLexicalBlockFieldContext = new DiLexicalBlockFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 530, LLVMIRParser.RULE_diLexicalBlockField);
		try {
			this.state = 3623;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3619;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3620;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3621;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwColumnLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3622;
				this.columnField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLexicalBlockFile(): DiLexicalBlockFileContext {
		let _localctx: DiLexicalBlockFileContext = new DiLexicalBlockFileContext(this._ctx, this.state);
		this.enterRule(_localctx, 532, LLVMIRParser.RULE_diLexicalBlockFile);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3625;
			this.match(LLVMIRParser.DILexicalBlockFile);
			this.state = 3626;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3635;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwDiscriminatorLabel || _la === LLVMIRParser.KwFileLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3627;
				this.diLexicalBlockFileField();
				this.state = 3632;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3628;
					this.match(LLVMIRParser.Comma);
					this.state = 3629;
					this.diLexicalBlockFileField();
					}
					}
					this.state = 3634;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3637;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLexicalBlockFileField(): DiLexicalBlockFileFieldContext {
		let _localctx: DiLexicalBlockFileFieldContext = new DiLexicalBlockFileFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 534, LLVMIRParser.RULE_diLexicalBlockFileField);
		try {
			this.state = 3642;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3639;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3640;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwDiscriminatorLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3641;
				this.discriminatorIntField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLocalVariable(): DiLocalVariableContext {
		let _localctx: DiLocalVariableContext = new DiLocalVariableContext(this._ctx, this.state);
		this.enterRule(_localctx, 536, LLVMIRParser.RULE_diLocalVariable);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3644;
			this.match(LLVMIRParser.DILocalVariable);
			this.state = 3645;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3654;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwFlagsLabel - 400)) | (1 << (LLVMIRParser.KwAlignLabel - 400)) | (1 << (LLVMIRParser.KwAnnotationsLabel - 400)) | (1 << (LLVMIRParser.KwArgLabel - 400)))) !== 0) || _la === LLVMIRParser.KwFileLabel || _la === LLVMIRParser.KwLineLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3646;
				this.diLocalVariableField();
				this.state = 3651;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3647;
					this.match(LLVMIRParser.Comma);
					this.state = 3648;
					this.diLocalVariableField();
					}
					}
					this.state = 3653;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3656;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLocalVariableField(): DiLocalVariableFieldContext {
		let _localctx: DiLocalVariableFieldContext = new DiLocalVariableFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 538, LLVMIRParser.RULE_diLocalVariableField);
		try {
			this.state = 3667;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3658;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3659;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwArgLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3660;
				this.argField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3661;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3662;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3663;
				this.typeField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3664;
				this.flagsField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3665;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwAnnotationsLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3666;
				this.annotationsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLocation(): DiLocationContext {
		let _localctx: DiLocationContext = new DiLocationContext(this._ctx, this.state);
		this.enterRule(_localctx, 540, LLVMIRParser.RULE_diLocation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3669;
			this.match(LLVMIRParser.DILocation);
			this.state = 3670;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3679;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwColumnLabel || _la === LLVMIRParser.KwInlinedAtLabel || ((((_la - 448)) & ~0x1F) === 0 && ((1 << (_la - 448)) & ((1 << (LLVMIRParser.KwIsImplicitCodeLabel - 448)) | (1 << (LLVMIRParser.KwLineLabel - 448)) | (1 << (LLVMIRParser.KwScopeLabel - 448)))) !== 0)) {
				{
				this.state = 3671;
				this.diLocationField();
				this.state = 3676;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3672;
					this.match(LLVMIRParser.Comma);
					this.state = 3673;
					this.diLocationField();
					}
					}
					this.state = 3678;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3681;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diLocationField(): DiLocationFieldContext {
		let _localctx: DiLocationFieldContext = new DiLocationFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 542, LLVMIRParser.RULE_diLocationField);
		try {
			this.state = 3688;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3683;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwColumnLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3684;
				this.columnField();
				}
				break;
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3685;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwInlinedAtLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3686;
				this.inlinedAtField();
				}
				break;
			case LLVMIRParser.KwIsImplicitCodeLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3687;
				this.isImplicitCodeField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diMacro(): DiMacroContext {
		let _localctx: DiMacroContext = new DiMacroContext(this._ctx, this.state);
		this.enterRule(_localctx, 544, LLVMIRParser.RULE_diMacro);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3690;
			this.match(LLVMIRParser.DIMacro);
			this.state = 3691;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3700;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwValueLabel - 400)))) !== 0) || _la === LLVMIRParser.KwLineLabel) {
				{
				this.state = 3692;
				this.diMacroField();
				this.state = 3697;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3693;
					this.match(LLVMIRParser.Comma);
					this.state = 3694;
					this.diMacroField();
					}
					}
					this.state = 3699;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3702;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diMacroField(): DiMacroFieldContext {
		let _localctx: DiMacroFieldContext = new DiMacroFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 546, LLVMIRParser.RULE_diMacroField);
		try {
			this.state = 3708;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3704;
				this.typeMacinfoField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3705;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3706;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwValueLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3707;
				this.valueStringField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diMacroFile(): DiMacroFileContext {
		let _localctx: DiMacroFileContext = new DiMacroFileContext(this._ctx, this.state);
		this.enterRule(_localctx, 548, LLVMIRParser.RULE_diMacroFile);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3710;
			this.match(LLVMIRParser.DIMacroFile);
			this.state = 3711;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3720;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwTypeLabel || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)) | (1 << (LLVMIRParser.KwNodesLabel - 438)))) !== 0)) {
				{
				this.state = 3712;
				this.diMacroFileField();
				this.state = 3717;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3713;
					this.match(LLVMIRParser.Comma);
					this.state = 3714;
					this.diMacroFileField();
					}
					}
					this.state = 3719;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3722;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diMacroFileField(): DiMacroFileFieldContext {
		let _localctx: DiMacroFileFieldContext = new DiMacroFileFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 550, LLVMIRParser.RULE_diMacroFileField);
		try {
			this.state = 3728;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3724;
				this.typeMacinfoField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3725;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3726;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwNodesLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3727;
				this.nodesField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diModule(): DiModuleContext {
		let _localctx: DiModuleContext = new DiModuleContext(this._ctx, this.state);
		this.enterRule(_localctx, 552, LLVMIRParser.RULE_diModule);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3730;
			this.match(LLVMIRParser.DIModule);
			this.state = 3731;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3740;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwNameLabel || _la === LLVMIRParser.KwConfigMacrosLabel || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwIncludePathLabel - 438)) | (1 << (LLVMIRParser.KwIsDeclLabel - 438)) | (1 << (LLVMIRParser.KwApinotesLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)))) !== 0) || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3732;
				this.diModuleField();
				this.state = 3737;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3733;
					this.match(LLVMIRParser.Comma);
					this.state = 3734;
					this.diModuleField();
					}
					}
					this.state = 3739;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3742;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diModuleField(): DiModuleFieldContext {
		let _localctx: DiModuleFieldContext = new DiModuleFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 554, LLVMIRParser.RULE_diModuleField);
		try {
			this.state = 3752;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3744;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3745;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwConfigMacrosLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3746;
				this.configMacrosField();
				}
				break;
			case LLVMIRParser.KwIncludePathLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3747;
				this.includePathField();
				}
				break;
			case LLVMIRParser.KwApinotesLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3748;
				this.apiNotesField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3749;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3750;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwIsDeclLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3751;
				this.isDeclField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diNamespace(): DiNamespaceContext {
		let _localctx: DiNamespaceContext = new DiNamespaceContext(this._ctx, this.state);
		this.enterRule(_localctx, 556, LLVMIRParser.RULE_diNamespace);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3754;
			this.match(LLVMIRParser.DINamespace);
			this.state = 3755;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3764;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwNameLabel || _la === LLVMIRParser.KwExportSymbolsLabel || _la === LLVMIRParser.KwScopeLabel) {
				{
				this.state = 3756;
				this.diNamespaceField();
				this.state = 3761;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3757;
					this.match(LLVMIRParser.Comma);
					this.state = 3758;
					this.diNamespaceField();
					}
					}
					this.state = 3763;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3766;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diNamespaceField(): DiNamespaceFieldContext {
		let _localctx: DiNamespaceFieldContext = new DiNamespaceFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 558, LLVMIRParser.RULE_diNamespaceField);
		try {
			this.state = 3771;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3768;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3769;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwExportSymbolsLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3770;
				this.exportSymbolsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diObjCProperty(): DiObjCPropertyContext {
		let _localctx: DiObjCPropertyContext = new DiObjCPropertyContext(this._ctx, this.state);
		this.enterRule(_localctx, 560, LLVMIRParser.RULE_diObjCProperty);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3773;
			this.match(LLVMIRParser.DIObjCProperty);
			this.state = 3774;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3783;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwAttributesLabel - 400)))) !== 0) || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwGetterLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)))) !== 0) || _la === LLVMIRParser.KwSetterLabel) {
				{
				this.state = 3775;
				this.diObjCPropertyField();
				this.state = 3780;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3776;
					this.match(LLVMIRParser.Comma);
					this.state = 3777;
					this.diObjCPropertyField();
					}
					}
					this.state = 3782;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3785;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diObjCPropertyField(): DiObjCPropertyFieldContext {
		let _localctx: DiObjCPropertyFieldContext = new DiObjCPropertyFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 562, LLVMIRParser.RULE_diObjCPropertyField);
		try {
			this.state = 3794;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3787;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3788;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3789;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwSetterLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3790;
				this.setterField();
				}
				break;
			case LLVMIRParser.KwGetterLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3791;
				this.getterField();
				}
				break;
			case LLVMIRParser.KwAttributesLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3792;
				this.attributesField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3793;
				this.typeField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diStringType(): DiStringTypeContext {
		let _localctx: DiStringTypeContext = new DiStringTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 564, LLVMIRParser.RULE_diStringType);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3796;
			this.match(LLVMIRParser.DIStringType);
			this.state = 3797;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3806;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwAlignLabel - 397)))) !== 0) || _la === LLVMIRParser.KwEncodingLabel || ((((_la - 475)) & ~0x1F) === 0 && ((1 << (_la - 475)) & ((1 << (LLVMIRParser.KwSizeLabel - 475)) | (1 << (LLVMIRParser.KwStringLengthLabel - 475)) | (1 << (LLVMIRParser.KwStringLengthExpressionLabel - 475)) | (1 << (LLVMIRParser.KwStringLocationExpressionLabel - 475)))) !== 0)) {
				{
				this.state = 3798;
				this.diStringTypeField();
				this.state = 3803;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3799;
					this.match(LLVMIRParser.Comma);
					this.state = 3800;
					this.diStringTypeField();
					}
					}
					this.state = 3805;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3808;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diStringTypeField(): DiStringTypeFieldContext {
		let _localctx: DiStringTypeFieldContext = new DiStringTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 566, LLVMIRParser.RULE_diStringTypeField);
		try {
			this.state = 3818;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3810;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3811;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwStringLengthLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3812;
				this.stringLengthField();
				}
				break;
			case LLVMIRParser.KwStringLengthExpressionLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3813;
				this.stringLengthExpressionField();
				}
				break;
			case LLVMIRParser.KwStringLocationExpressionLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3814;
				this.stringLocationExpressionField();
				}
				break;
			case LLVMIRParser.KwSizeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3815;
				this.sizeField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3816;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwEncodingLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3817;
				this.encodingField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubprogram(): DiSubprogramContext {
		let _localctx: DiSubprogramContext = new DiSubprogramContext(this._ctx, this.state);
		this.enterRule(_localctx, 568, LLVMIRParser.RULE_diSubprogram);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3820;
			this.match(LLVMIRParser.DISubprogram);
			this.state = 3821;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3830;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwFlagsLabel - 400)) | (1 << (LLVMIRParser.KwAnnotationsLabel - 400)) | (1 << (LLVMIRParser.KwContainingTypeLabel - 400)) | (1 << (LLVMIRParser.KwDeclarationLabel - 400)))) !== 0) || ((((_la - 438)) & ~0x1F) === 0 && ((1 << (_la - 438)) & ((1 << (LLVMIRParser.KwFileLabel - 438)) | (1 << (LLVMIRParser.KwIsDefinitionLabel - 438)) | (1 << (LLVMIRParser.KwIsLocalLabel - 438)) | (1 << (LLVMIRParser.KwIsOptimizedLabel - 438)) | (1 << (LLVMIRParser.KwLineLabel - 438)) | (1 << (LLVMIRParser.KwLinkageNameLabel - 438)) | (1 << (LLVMIRParser.KwRetainedNodesLabel - 438)))) !== 0) || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (LLVMIRParser.KwScopeLabel - 471)) | (1 << (LLVMIRParser.KwScopeLineLabel - 471)) | (1 << (LLVMIRParser.KwSpFlagsLabel - 471)) | (1 << (LLVMIRParser.KwTargetFuncNameLabel - 471)) | (1 << (LLVMIRParser.KwTemplateParamsLabel - 471)) | (1 << (LLVMIRParser.KwThisAdjustmentLabel - 471)) | (1 << (LLVMIRParser.KwThrownTypesLabel - 471)) | (1 << (LLVMIRParser.KwUnitLabel - 471)) | (1 << (LLVMIRParser.KwVirtualIndexLabel - 471)) | (1 << (LLVMIRParser.KwVirtualityLabel - 471)))) !== 0)) {
				{
				this.state = 3822;
				this.diSubprogramField();
				this.state = 3827;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3823;
					this.match(LLVMIRParser.Comma);
					this.state = 3824;
					this.diSubprogramField();
					}
					}
					this.state = 3829;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3832;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubprogramField(): DiSubprogramFieldContext {
		let _localctx: DiSubprogramFieldContext = new DiSubprogramFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 570, LLVMIRParser.RULE_diSubprogramField);
		try {
			this.state = 3857;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3834;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3835;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwLinkageNameLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3836;
				this.linkageNameField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3837;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3838;
				this.lineField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3839;
				this.typeField();
				}
				break;
			case LLVMIRParser.KwIsLocalLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3840;
				this.isLocalField();
				}
				break;
			case LLVMIRParser.KwIsDefinitionLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3841;
				this.isDefinitionField();
				}
				break;
			case LLVMIRParser.KwScopeLineLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3842;
				this.scopeLineField();
				}
				break;
			case LLVMIRParser.KwContainingTypeLabel:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3843;
				this.containingTypeField();
				}
				break;
			case LLVMIRParser.KwVirtualityLabel:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3844;
				this.virtualityField();
				}
				break;
			case LLVMIRParser.KwVirtualIndexLabel:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3845;
				this.virtualIndexField();
				}
				break;
			case LLVMIRParser.KwThisAdjustmentLabel:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 3846;
				this.thisAdjustmentField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 3847;
				this.flagsField();
				}
				break;
			case LLVMIRParser.KwSpFlagsLabel:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 3848;
				this.spFlagsField();
				}
				break;
			case LLVMIRParser.KwIsOptimizedLabel:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 3849;
				this.isOptimizedField();
				}
				break;
			case LLVMIRParser.KwUnitLabel:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 3850;
				this.unitField();
				}
				break;
			case LLVMIRParser.KwTemplateParamsLabel:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 3851;
				this.templateParamsField();
				}
				break;
			case LLVMIRParser.KwDeclarationLabel:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 3852;
				this.declarationField();
				}
				break;
			case LLVMIRParser.KwRetainedNodesLabel:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 3853;
				this.retainedNodesField();
				}
				break;
			case LLVMIRParser.KwThrownTypesLabel:
				this.enterOuterAlt(_localctx, 21);
				{
				this.state = 3854;
				this.thrownTypesField();
				}
				break;
			case LLVMIRParser.KwAnnotationsLabel:
				this.enterOuterAlt(_localctx, 22);
				{
				this.state = 3855;
				this.annotationsField();
				}
				break;
			case LLVMIRParser.KwTargetFuncNameLabel:
				this.enterOuterAlt(_localctx, 23);
				{
				this.state = 3856;
				this.targetFuncNameField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubrange(): DiSubrangeContext {
		let _localctx: DiSubrangeContext = new DiSubrangeContext(this._ctx, this.state);
		this.enterRule(_localctx, 572, LLVMIRParser.RULE_diSubrange);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3859;
			this.match(LLVMIRParser.DICompileUnit);
			this.state = 3860;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3869;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.KwCountLabel || _la === LLVMIRParser.KwLowerBoundLabel || _la === LLVMIRParser.KwStrideLabel || _la === LLVMIRParser.KwUpperBoundLabel) {
				{
				this.state = 3861;
				this.diSubrangeField();
				this.state = 3866;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3862;
					this.match(LLVMIRParser.Comma);
					this.state = 3863;
					this.diSubrangeField();
					}
					}
					this.state = 3868;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3871;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubrangeField(): DiSubrangeFieldContext {
		let _localctx: DiSubrangeFieldContext = new DiSubrangeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 574, LLVMIRParser.RULE_diSubrangeField);
		try {
			this.state = 3877;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwCountLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3873;
				this.countField();
				}
				break;
			case LLVMIRParser.KwLowerBoundLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3874;
				this.lowerBoundField();
				}
				break;
			case LLVMIRParser.KwUpperBoundLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3875;
				this.upperBoundField();
				}
				break;
			case LLVMIRParser.KwStrideLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3876;
				this.strideField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubroutineType(): DiSubroutineTypeContext {
		let _localctx: DiSubroutineTypeContext = new DiSubroutineTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 576, LLVMIRParser.RULE_diSubroutineType);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3879;
			this.match(LLVMIRParser.DISubroutineType);
			this.state = 3880;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3889;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === LLVMIRParser.IntLit || _la === LLVMIRParser.KwFlagsLabel || _la === LLVMIRParser.KwCcLabel || _la === LLVMIRParser.KwTypesLabel) {
				{
				this.state = 3881;
				this.diSubroutineTypeField();
				this.state = 3886;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3882;
					this.match(LLVMIRParser.Comma);
					this.state = 3883;
					this.diSubroutineTypeField();
					}
					}
					this.state = 3888;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3891;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diTemplateTypeParameter(): DiTemplateTypeParameterContext {
		let _localctx: DiTemplateTypeParameterContext = new DiTemplateTypeParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 578, LLVMIRParser.RULE_diTemplateTypeParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3893;
			this.match(LLVMIRParser.DITemplateTypeParameter);
			this.state = 3894;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3903;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 400)) & ~0x1F) === 0 && ((1 << (_la - 400)) & ((1 << (LLVMIRParser.KwNameLabel - 400)) | (1 << (LLVMIRParser.KwTypeLabel - 400)) | (1 << (LLVMIRParser.KwDefaultedLabel - 400)))) !== 0)) {
				{
				this.state = 3895;
				this.diTemplateTypeParameterField();
				this.state = 3900;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3896;
					this.match(LLVMIRParser.Comma);
					this.state = 3897;
					this.diTemplateTypeParameterField();
					}
					}
					this.state = 3902;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3905;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diTemplateValueParameter(): DiTemplateValueParameterContext {
		let _localctx: DiTemplateValueParameterContext = new DiTemplateValueParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 580, LLVMIRParser.RULE_diTemplateValueParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3907;
			this.match(LLVMIRParser.DITemplateValueParameter);
			this.state = 3908;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3913;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwNameLabel - 397)) | (1 << (LLVMIRParser.KwTypeLabel - 397)) | (1 << (LLVMIRParser.KwDefaultedLabel - 397)) | (1 << (LLVMIRParser.KwValueLabel - 397)))) !== 0)) {
				{
				this.state = 3909;
				this.diTemplateValueParameterField();
				{
				this.state = 3910;
				this.match(LLVMIRParser.Comma);
				this.state = 3911;
				this.diTemplateValueParameterField();
				}
				}
			}

			this.state = 3915;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public genericDiNode(): GenericDiNodeContext {
		let _localctx: GenericDiNodeContext = new GenericDiNodeContext(this._ctx, this.state);
		this.enterRule(_localctx, 582, LLVMIRParser.RULE_genericDiNode);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3917;
			this.match(LLVMIRParser.GenericDINode);
			this.state = 3918;
			this.match(LLVMIRParser.LParenthesis);
			this.state = 3927;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 397)) & ~0x1F) === 0 && ((1 << (_la - 397)) & ((1 << (LLVMIRParser.KwTagLabel - 397)) | (1 << (LLVMIRParser.KwHeaderLabel - 397)) | (1 << (LLVMIRParser.KwOperandsLabel - 397)))) !== 0)) {
				{
				this.state = 3919;
				this.genericDINodeField();
				this.state = 3924;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3920;
					this.match(LLVMIRParser.Comma);
					this.state = 3921;
					this.genericDINodeField();
					}
					}
					this.state = 3926;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3929;
			this.match(LLVMIRParser.RParenthesis);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diTemplateTypeParameterField(): DiTemplateTypeParameterFieldContext {
		let _localctx: DiTemplateTypeParameterFieldContext = new DiTemplateTypeParameterFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 584, LLVMIRParser.RULE_diTemplateTypeParameterField);
		try {
			this.state = 3934;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3931;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3932;
				this.typeField();
				}
				break;
			case LLVMIRParser.KwDefaultedLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3933;
				this.defaultedField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCompileUnitField(): DiCompileUnitFieldContext {
		let _localctx: DiCompileUnitFieldContext = new DiCompileUnitFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 586, LLVMIRParser.RULE_diCompileUnitField);
		try {
			this.state = 3956;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwLanguageLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3936;
				this.languageField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3937;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwProducerLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3938;
				this.producerField();
				}
				break;
			case LLVMIRParser.KwIsOptimizedLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3939;
				this.isOptimizedField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3940;
				this.flagsStringField();
				}
				break;
			case LLVMIRParser.KwRuntimeVersionLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3941;
				this.runtimeVersionField();
				}
				break;
			case LLVMIRParser.KwSplitDebugFilenameLabel:
				this.enterOuterAlt(_localctx, 7);
				{
				this.state = 3942;
				this.splitDebugFilenameField();
				}
				break;
			case LLVMIRParser.KwEmissionKindLabel:
				this.enterOuterAlt(_localctx, 8);
				{
				this.state = 3943;
				this.emissionKindField();
				}
				break;
			case LLVMIRParser.KwEnumsLabel:
				this.enterOuterAlt(_localctx, 9);
				{
				this.state = 3944;
				this.enumsField();
				}
				break;
			case LLVMIRParser.KwRetainedTypesLabel:
				this.enterOuterAlt(_localctx, 10);
				{
				this.state = 3945;
				this.retainedTypesField();
				}
				break;
			case LLVMIRParser.KwGlobalsLabel:
				this.enterOuterAlt(_localctx, 11);
				{
				this.state = 3946;
				this.globalsField();
				}
				break;
			case LLVMIRParser.KwImportsLabel:
				this.enterOuterAlt(_localctx, 12);
				{
				this.state = 3947;
				this.importsField();
				}
				break;
			case LLVMIRParser.KwMacrosLabel:
				this.enterOuterAlt(_localctx, 13);
				{
				this.state = 3948;
				this.macrosField();
				}
				break;
			case LLVMIRParser.KwDwoIdLabel:
				this.enterOuterAlt(_localctx, 14);
				{
				this.state = 3949;
				this.dwoIdField();
				}
				break;
			case LLVMIRParser.KwSplitDebugInliningLabel:
				this.enterOuterAlt(_localctx, 15);
				{
				this.state = 3950;
				this.splitDebugInliningField();
				}
				break;
			case LLVMIRParser.KwDebugInfoForProfilingLabel:
				this.enterOuterAlt(_localctx, 16);
				{
				this.state = 3951;
				this.debugInfoForProfilingField();
				}
				break;
			case LLVMIRParser.KwNameTableKindLabel:
				this.enterOuterAlt(_localctx, 17);
				{
				this.state = 3952;
				this.nameTableKindField();
				}
				break;
			case LLVMIRParser.KwRangesBaseAddressLabel:
				this.enterOuterAlt(_localctx, 18);
				{
				this.state = 3953;
				this.rangesBaseAddressField();
				}
				break;
			case LLVMIRParser.KwSysrootLabel:
				this.enterOuterAlt(_localctx, 19);
				{
				this.state = 3954;
				this.sysrootField();
				}
				break;
			case LLVMIRParser.KwSdkLabel:
				this.enterOuterAlt(_localctx, 20);
				{
				this.state = 3955;
				this.sdkField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diCommonBlockField(): DiCommonBlockFieldContext {
		let _localctx: DiCommonBlockFieldContext = new DiCommonBlockFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 588, LLVMIRParser.RULE_diCommonBlockField);
		try {
			this.state = 3963;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwScopeLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3958;
				this.scopeField();
				}
				break;
			case LLVMIRParser.KwDeclarationLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3959;
				this.declarationField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3960;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwFileLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3961;
				this.fileField();
				}
				break;
			case LLVMIRParser.KwLineLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3962;
				this.lineField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diBasicTypeField(): DiBasicTypeFieldContext {
		let _localctx: DiBasicTypeFieldContext = new DiBasicTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 590, LLVMIRParser.RULE_diBasicTypeField);
		try {
			this.state = 3971;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3965;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3966;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwSizeLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3967;
				this.sizeField();
				}
				break;
			case LLVMIRParser.KwAlignLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 3968;
				this.alignField();
				}
				break;
			case LLVMIRParser.KwEncodingLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 3969;
				this.encodingField();
				}
				break;
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 6);
				{
				this.state = 3970;
				this.flagsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public genericDINodeField(): GenericDINodeFieldContext {
		let _localctx: GenericDINodeFieldContext = new GenericDINodeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 592, LLVMIRParser.RULE_genericDINodeField);
		try {
			this.state = 3976;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3973;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwHeaderLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3974;
				this.headerField();
				}
				break;
			case LLVMIRParser.KwOperandsLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 3975;
				this.operandsField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public tagField(): TagFieldContext {
		let _localctx: TagFieldContext = new TagFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 594, LLVMIRParser.RULE_tagField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3978;
			this.match(LLVMIRParser.KwTagLabel);
			this.state = 3979;
			this.match(LLVMIRParser.DwarfTag);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public headerField(): HeaderFieldContext {
		let _localctx: HeaderFieldContext = new HeaderFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 596, LLVMIRParser.RULE_headerField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3981;
			this.match(LLVMIRParser.KwHeaderLabel);
			this.state = 3982;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public operandsField(): OperandsFieldContext {
		let _localctx: OperandsFieldContext = new OperandsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 598, LLVMIRParser.RULE_operandsField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3984;
			this.match(LLVMIRParser.KwOperandsLabel);
			this.state = 3985;
			this.match(LLVMIRParser.LBraces);
			this.state = 3994;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << LLVMIRParser.DIExpression) | (1 << LLVMIRParser.DIArgList) | (1 << LLVMIRParser.DIBasicType) | (1 << LLVMIRParser.DICommonBlock) | (1 << LLVMIRParser.DICompileUnit) | (1 << LLVMIRParser.DICompositeType) | (1 << LLVMIRParser.DIDerivedType) | (1 << LLVMIRParser.DIEnumerator) | (1 << LLVMIRParser.DIFile) | (1 << LLVMIRParser.DIGlobalVariable) | (1 << LLVMIRParser.DIGlobalVariableExpression) | (1 << LLVMIRParser.DIImportedEntity) | (1 << LLVMIRParser.DILabel) | (1 << LLVMIRParser.DILexicalBlock) | (1 << LLVMIRParser.DILexicalBlockFile) | (1 << LLVMIRParser.DILocalVariable) | (1 << LLVMIRParser.DILocation) | (1 << LLVMIRParser.DIMacro) | (1 << LLVMIRParser.DIMacroFile) | (1 << LLVMIRParser.DIModule) | (1 << LLVMIRParser.DINamespace) | (1 << LLVMIRParser.DIObjCProperty) | (1 << LLVMIRParser.DIStringType) | (1 << LLVMIRParser.DISubprogram) | (1 << LLVMIRParser.DISubroutineType) | (1 << LLVMIRParser.DITemplateTypeParameter) | (1 << LLVMIRParser.DITemplateValueParameter) | (1 << LLVMIRParser.GenericDINode))) !== 0) || ((((_la - 35)) & ~0x1F) === 0 && ((1 << (_la - 35)) & ((1 << (LLVMIRParser.LocalIdent - 35)) | (1 << (LLVMIRParser.MetadataId - 35)) | (1 << (LLVMIRParser.IntType - 35)))) !== 0) || ((((_la - 153)) & ~0x1F) === 0 && ((1 << (_la - 153)) & ((1 << (LLVMIRParser.KwLabel - 153)) | (1 << (LLVMIRParser.KwNull - 153)) | (1 << (LLVMIRParser.KwVoid - 153)) | (1 << (LLVMIRParser.KwOpaque - 153)))) !== 0) || ((((_la - 213)) & ~0x1F) === 0 && ((1 << (_la - 213)) & ((1 << (LLVMIRParser.KwX86Mmx - 213)) | (1 << (LLVMIRParser.KwToken - 213)) | (1 << (LLVMIRParser.KwPtr - 213)) | (1 << (LLVMIRParser.KwMetadata - 213)))) !== 0) || ((((_la - 390)) & ~0x1F) === 0 && ((1 << (_la - 390)) & ((1 << (LLVMIRParser.KwHalf - 390)) | (1 << (LLVMIRParser.KwBfloat - 390)) | (1 << (LLVMIRParser.KwFloat - 390)) | (1 << (LLVMIRParser.KwDouble - 390)) | (1 << (LLVMIRParser.KwX86Fp80 - 390)) | (1 << (LLVMIRParser.KwFp128 - 390)) | (1 << (LLVMIRParser.KwPpcFp128 - 390)))) !== 0) || ((((_la - 499)) & ~0x1F) === 0 && ((1 << (_la - 499)) & ((1 << (LLVMIRParser.LBraces - 499)) | (1 << (LLVMIRParser.Exclamation - 499)) | (1 << (LLVMIRParser.LBracket - 499)) | (1 << (LLVMIRParser.LAngleBrackets - 499)))) !== 0)) {
				{
				this.state = 3986;
				this.mdField();
				this.state = 3991;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === LLVMIRParser.Comma) {
					{
					{
					this.state = 3987;
					this.match(LLVMIRParser.Comma);
					this.state = 3988;
					this.mdField();
					}
					}
					this.state = 3993;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				}
			}

			this.state = 3996;
			this.match(LLVMIRParser.RBraces);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diTemplateValueParameterField(): DiTemplateValueParameterFieldContext {
		let _localctx: DiTemplateValueParameterFieldContext = new DiTemplateValueParameterFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 600, LLVMIRParser.RULE_diTemplateValueParameterField);
		try {
			this.state = 4003;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwTagLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 3998;
				this.tagField();
				}
				break;
			case LLVMIRParser.KwNameLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 3999;
				this.nameField();
				}
				break;
			case LLVMIRParser.KwTypeLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 4000;
				this.typeField();
				}
				break;
			case LLVMIRParser.KwDefaultedLabel:
				this.enterOuterAlt(_localctx, 4);
				{
				this.state = 4001;
				this.defaultedField();
				}
				break;
			case LLVMIRParser.KwValueLabel:
				this.enterOuterAlt(_localctx, 5);
				{
				this.state = 4002;
				this.valueField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameField(): NameFieldContext {
		let _localctx: NameFieldContext = new NameFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 602, LLVMIRParser.RULE_nameField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4005;
			this.match(LLVMIRParser.KwNameLabel);
			this.state = 4006;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeField(): TypeFieldContext {
		let _localctx: TypeFieldContext = new TypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 604, LLVMIRParser.RULE_typeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4008;
			this.match(LLVMIRParser.KwTypeLabel);
			this.state = 4009;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public defaultedField(): DefaultedFieldContext {
		let _localctx: DefaultedFieldContext = new DefaultedFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 606, LLVMIRParser.RULE_defaultedField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4011;
			this.match(LLVMIRParser.KwDefaultedLabel);
			this.state = 4012;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public valueField(): ValueFieldContext {
		let _localctx: ValueFieldContext = new ValueFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 608, LLVMIRParser.RULE_valueField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4014;
			this.match(LLVMIRParser.KwValueLabel);
			this.state = 4015;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mdField(): MdFieldContext {
		let _localctx: MdFieldContext = new MdFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 610, LLVMIRParser.RULE_mdField);
		try {
			this.state = 4019;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwNull:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 4017;
				this.nullConst();
				}
				break;
			case LLVMIRParser.DIExpression:
			case LLVMIRParser.DIArgList:
			case LLVMIRParser.DIBasicType:
			case LLVMIRParser.DICommonBlock:
			case LLVMIRParser.DICompileUnit:
			case LLVMIRParser.DICompositeType:
			case LLVMIRParser.DIDerivedType:
			case LLVMIRParser.DIEnumerator:
			case LLVMIRParser.DIFile:
			case LLVMIRParser.DIGlobalVariable:
			case LLVMIRParser.DIGlobalVariableExpression:
			case LLVMIRParser.DIImportedEntity:
			case LLVMIRParser.DILabel:
			case LLVMIRParser.DILexicalBlock:
			case LLVMIRParser.DILexicalBlockFile:
			case LLVMIRParser.DILocalVariable:
			case LLVMIRParser.DILocation:
			case LLVMIRParser.DIMacro:
			case LLVMIRParser.DIMacroFile:
			case LLVMIRParser.DIModule:
			case LLVMIRParser.DINamespace:
			case LLVMIRParser.DIObjCProperty:
			case LLVMIRParser.DIStringType:
			case LLVMIRParser.DISubprogram:
			case LLVMIRParser.DISubroutineType:
			case LLVMIRParser.DITemplateTypeParameter:
			case LLVMIRParser.DITemplateValueParameter:
			case LLVMIRParser.GenericDINode:
			case LLVMIRParser.LocalIdent:
			case LLVMIRParser.MetadataId:
			case LLVMIRParser.IntType:
			case LLVMIRParser.KwLabel:
			case LLVMIRParser.KwVoid:
			case LLVMIRParser.KwOpaque:
			case LLVMIRParser.KwX86Mmx:
			case LLVMIRParser.KwToken:
			case LLVMIRParser.KwPtr:
			case LLVMIRParser.KwMetadata:
			case LLVMIRParser.KwHalf:
			case LLVMIRParser.KwBfloat:
			case LLVMIRParser.KwFloat:
			case LLVMIRParser.KwDouble:
			case LLVMIRParser.KwX86Fp80:
			case LLVMIRParser.KwFp128:
			case LLVMIRParser.KwPpcFp128:
			case LLVMIRParser.LBraces:
			case LLVMIRParser.Exclamation:
			case LLVMIRParser.LBracket:
			case LLVMIRParser.LAngleBrackets:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 4018;
				this.metadata();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diSubroutineTypeField(): DiSubroutineTypeFieldContext {
		let _localctx: DiSubroutineTypeFieldContext = new DiSubroutineTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 612, LLVMIRParser.RULE_diSubroutineTypeField);
		try {
			this.state = 4024;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwFlagsLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 4021;
				this.flagsField();
				}
				break;
			case LLVMIRParser.IntLit:
			case LLVMIRParser.KwCcLabel:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 4022;
				this.ccField();
				}
				break;
			case LLVMIRParser.KwTypesLabel:
				this.enterOuterAlt(_localctx, 3);
				{
				this.state = 4023;
				this.typesField();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public flagsField(): FlagsFieldContext {
		let _localctx: FlagsFieldContext = new FlagsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 614, LLVMIRParser.RULE_flagsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4026;
			this.match(LLVMIRParser.KwFlagsLabel);
			this.state = 4027;
			this.diFlags();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diFlags(): DiFlagsContext {
		let _localctx: DiFlagsContext = new DiFlagsContext(this._ctx, this.state);
		this.enterRule(_localctx, 616, LLVMIRParser.RULE_diFlags);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4029;
			this.match(LLVMIRParser.DiFlag);
			this.state = 4034;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Pipe) {
				{
				{
				this.state = 4030;
				this.match(LLVMIRParser.Pipe);
				this.state = 4031;
				this.match(LLVMIRParser.DiFlag);
				}
				}
				this.state = 4036;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ccField(): CcFieldContext {
		let _localctx: CcFieldContext = new CcFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 618, LLVMIRParser.RULE_ccField);
		try {
			this.state = 4040;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case LLVMIRParser.KwCcLabel:
				this.enterOuterAlt(_localctx, 1);
				{
				this.state = 4037;
				this.match(LLVMIRParser.KwCcLabel);
				this.state = 4038;
				this.match(LLVMIRParser.DwarfCc);
				}
				break;
			case LLVMIRParser.IntLit:
				this.enterOuterAlt(_localctx, 2);
				{
				this.state = 4039;
				this.match(LLVMIRParser.IntLit);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public alignField(): AlignFieldContext {
		let _localctx: AlignFieldContext = new AlignFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 620, LLVMIRParser.RULE_alignField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4042;
			this.match(LLVMIRParser.KwAlignLabel);
			this.state = 4043;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public allocatedField(): AllocatedFieldContext {
		let _localctx: AllocatedFieldContext = new AllocatedFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 622, LLVMIRParser.RULE_allocatedField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4045;
			this.match(LLVMIRParser.KwAllocatedLabel);
			this.state = 4046;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public annotationsField(): AnnotationsFieldContext {
		let _localctx: AnnotationsFieldContext = new AnnotationsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 624, LLVMIRParser.RULE_annotationsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4048;
			this.match(LLVMIRParser.KwAnnotationsLabel);
			this.state = 4049;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public argField(): ArgFieldContext {
		let _localctx: ArgFieldContext = new ArgFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 626, LLVMIRParser.RULE_argField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4051;
			this.match(LLVMIRParser.KwArgLabel);
			this.state = 4052;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public associatedField(): AssociatedFieldContext {
		let _localctx: AssociatedFieldContext = new AssociatedFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 628, LLVMIRParser.RULE_associatedField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4054;
			this.match(LLVMIRParser.KwAssociatedLabel);
			this.state = 4055;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public attributesField(): AttributesFieldContext {
		let _localctx: AttributesFieldContext = new AttributesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 630, LLVMIRParser.RULE_attributesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4057;
			this.match(LLVMIRParser.KwAttributesLabel);
			this.state = 4058;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public baseTypeField(): BaseTypeFieldContext {
		let _localctx: BaseTypeFieldContext = new BaseTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 632, LLVMIRParser.RULE_baseTypeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4060;
			this.match(LLVMIRParser.KwBaseTypeLabel);
			this.state = 4061;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public checksumField(): ChecksumFieldContext {
		let _localctx: ChecksumFieldContext = new ChecksumFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 634, LLVMIRParser.RULE_checksumField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4063;
			this.match(LLVMIRParser.KwChecksumLabel);
			this.state = 4064;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public checksumkindField(): ChecksumkindFieldContext {
		let _localctx: ChecksumkindFieldContext = new ChecksumkindFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 636, LLVMIRParser.RULE_checksumkindField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4066;
			this.match(LLVMIRParser.KwChecksumkindLabel);
			this.state = 4067;
			this.match(LLVMIRParser.ChecksumKind);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public columnField(): ColumnFieldContext {
		let _localctx: ColumnFieldContext = new ColumnFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 638, LLVMIRParser.RULE_columnField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4069;
			this.match(LLVMIRParser.KwColumnLabel);
			this.state = 4070;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public configMacrosField(): ConfigMacrosFieldContext {
		let _localctx: ConfigMacrosFieldContext = new ConfigMacrosFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 640, LLVMIRParser.RULE_configMacrosField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4072;
			this.match(LLVMIRParser.KwConfigMacrosLabel);
			this.state = 4073;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public containingTypeField(): ContainingTypeFieldContext {
		let _localctx: ContainingTypeFieldContext = new ContainingTypeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 642, LLVMIRParser.RULE_containingTypeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4075;
			this.match(LLVMIRParser.KwContainingTypeLabel);
			this.state = 4076;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public countField(): CountFieldContext {
		let _localctx: CountFieldContext = new CountFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 644, LLVMIRParser.RULE_countField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4078;
			this.match(LLVMIRParser.KwCountLabel);
			this.state = 4079;
			this.mdFieldOrInt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public debugInfoForProfilingField(): DebugInfoForProfilingFieldContext {
		let _localctx: DebugInfoForProfilingFieldContext = new DebugInfoForProfilingFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 646, LLVMIRParser.RULE_debugInfoForProfilingField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4081;
			this.match(LLVMIRParser.KwDebugInfoForProfilingLabel);
			this.state = 4082;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public declarationField(): DeclarationFieldContext {
		let _localctx: DeclarationFieldContext = new DeclarationFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 648, LLVMIRParser.RULE_declarationField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4084;
			this.match(LLVMIRParser.KwDeclarationLabel);
			this.state = 4085;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public directoryField(): DirectoryFieldContext {
		let _localctx: DirectoryFieldContext = new DirectoryFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 650, LLVMIRParser.RULE_directoryField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4087;
			this.match(LLVMIRParser.KwDirectoryLabel);
			this.state = 4088;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public discriminatorField(): DiscriminatorFieldContext {
		let _localctx: DiscriminatorFieldContext = new DiscriminatorFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 652, LLVMIRParser.RULE_discriminatorField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4090;
			this.match(LLVMIRParser.KwDiscriminatorLabel);
			this.state = 4091;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dataLocationField(): DataLocationFieldContext {
		let _localctx: DataLocationFieldContext = new DataLocationFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 654, LLVMIRParser.RULE_dataLocationField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4093;
			this.match(LLVMIRParser.KwDataLocationLabel);
			this.state = 4094;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public discriminatorIntField(): DiscriminatorIntFieldContext {
		let _localctx: DiscriminatorIntFieldContext = new DiscriminatorIntFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 656, LLVMIRParser.RULE_discriminatorIntField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4096;
			this.match(LLVMIRParser.KwDiscriminatorLabel);
			this.state = 4097;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dwarfAddressSpaceField(): DwarfAddressSpaceFieldContext {
		let _localctx: DwarfAddressSpaceFieldContext = new DwarfAddressSpaceFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 658, LLVMIRParser.RULE_dwarfAddressSpaceField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4099;
			this.match(LLVMIRParser.KwDwarfAddressSpaceLabel);
			this.state = 4100;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dwoIdField(): DwoIdFieldContext {
		let _localctx: DwoIdFieldContext = new DwoIdFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 660, LLVMIRParser.RULE_dwoIdField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4102;
			this.match(LLVMIRParser.KwDwoIdLabel);
			this.state = 4103;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public elementsField(): ElementsFieldContext {
		let _localctx: ElementsFieldContext = new ElementsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 662, LLVMIRParser.RULE_elementsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4105;
			this.match(LLVMIRParser.KwElementsLabel);
			this.state = 4106;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public emissionKindField(): EmissionKindFieldContext {
		let _localctx: EmissionKindFieldContext = new EmissionKindFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 664, LLVMIRParser.RULE_emissionKindField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4108;
			this.match(LLVMIRParser.KwEmissionKindLabel);
			this.state = 4109;
			_localctx._emissionKind = this._input.LT(1);
			_la = this._input.LA(1);
			if (!(((((_la - 428)) & ~0x1F) === 0 && ((1 << (_la - 428)) & ((1 << (LLVMIRParser.KwDebugDirectivesOnly - 428)) | (1 << (LLVMIRParser.KwFullDebug - 428)) | (1 << (LLVMIRParser.KwLineTablesOnly - 428)) | (1 << (LLVMIRParser.KwNoDebug - 428)))) !== 0))) {
				_localctx._emissionKind = this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public encodingField(): EncodingFieldContext {
		let _localctx: EncodingFieldContext = new EncodingFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 666, LLVMIRParser.RULE_encodingField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4111;
			this.match(LLVMIRParser.KwEncodingLabel);
			this.state = 4112;
			_la = this._input.LA(1);
			if (!(_la === LLVMIRParser.IntLit || _la === LLVMIRParser.DwarfAttEncoding)) {
			this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public entityField(): EntityFieldContext {
		let _localctx: EntityFieldContext = new EntityFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 668, LLVMIRParser.RULE_entityField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4114;
			this.match(LLVMIRParser.KwEntityLabel);
			this.state = 4115;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public enumsField(): EnumsFieldContext {
		let _localctx: EnumsFieldContext = new EnumsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 670, LLVMIRParser.RULE_enumsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4117;
			this.match(LLVMIRParser.KwEnumsLabel);
			this.state = 4118;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public exportSymbolsField(): ExportSymbolsFieldContext {
		let _localctx: ExportSymbolsFieldContext = new ExportSymbolsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 672, LLVMIRParser.RULE_exportSymbolsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4120;
			this.match(LLVMIRParser.KwExportSymbolsLabel);
			this.state = 4121;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public exprField(): ExprFieldContext {
		let _localctx: ExprFieldContext = new ExprFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 674, LLVMIRParser.RULE_exprField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4123;
			this.match(LLVMIRParser.KwExprLabel);
			this.state = 4124;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extraDataField(): ExtraDataFieldContext {
		let _localctx: ExtraDataFieldContext = new ExtraDataFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 676, LLVMIRParser.RULE_extraDataField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4126;
			this.match(LLVMIRParser.KwExtraDataLabel);
			this.state = 4127;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fileField(): FileFieldContext {
		let _localctx: FileFieldContext = new FileFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 678, LLVMIRParser.RULE_fileField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4129;
			this.match(LLVMIRParser.KwFileLabel);
			this.state = 4130;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public filenameField(): FilenameFieldContext {
		let _localctx: FilenameFieldContext = new FilenameFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 680, LLVMIRParser.RULE_filenameField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4132;
			this.match(LLVMIRParser.KwFilenameLabel);
			this.state = 4133;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public flagsStringField(): FlagsStringFieldContext {
		let _localctx: FlagsStringFieldContext = new FlagsStringFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 682, LLVMIRParser.RULE_flagsStringField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4135;
			this.match(LLVMIRParser.KwFlagsLabel);
			this.state = 4136;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public getterField(): GetterFieldContext {
		let _localctx: GetterFieldContext = new GetterFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 684, LLVMIRParser.RULE_getterField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4138;
			this.match(LLVMIRParser.KwGetterLabel);
			this.state = 4139;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalsField(): GlobalsFieldContext {
		let _localctx: GlobalsFieldContext = new GlobalsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 686, LLVMIRParser.RULE_globalsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4141;
			this.match(LLVMIRParser.KwGlobalsLabel);
			this.state = 4142;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public identifierField(): IdentifierFieldContext {
		let _localctx: IdentifierFieldContext = new IdentifierFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 688, LLVMIRParser.RULE_identifierField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4144;
			this.match(LLVMIRParser.KwIdentifierLabel);
			this.state = 4145;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public importsField(): ImportsFieldContext {
		let _localctx: ImportsFieldContext = new ImportsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 690, LLVMIRParser.RULE_importsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4147;
			this.match(LLVMIRParser.KwImportsLabel);
			this.state = 4148;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public includePathField(): IncludePathFieldContext {
		let _localctx: IncludePathFieldContext = new IncludePathFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 692, LLVMIRParser.RULE_includePathField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4150;
			this.match(LLVMIRParser.KwIncludePathLabel);
			this.state = 4151;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inlinedAtField(): InlinedAtFieldContext {
		let _localctx: InlinedAtFieldContext = new InlinedAtFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 694, LLVMIRParser.RULE_inlinedAtField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4153;
			this.match(LLVMIRParser.KwInlinedAtLabel);
			this.state = 4154;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isDeclField(): IsDeclFieldContext {
		let _localctx: IsDeclFieldContext = new IsDeclFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 696, LLVMIRParser.RULE_isDeclField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4156;
			this.match(LLVMIRParser.KwIsDeclLabel);
			this.state = 4157;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isDefinitionField(): IsDefinitionFieldContext {
		let _localctx: IsDefinitionFieldContext = new IsDefinitionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 698, LLVMIRParser.RULE_isDefinitionField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4159;
			this.match(LLVMIRParser.KwIsDefinitionLabel);
			this.state = 4160;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isImplicitCodeField(): IsImplicitCodeFieldContext {
		let _localctx: IsImplicitCodeFieldContext = new IsImplicitCodeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 700, LLVMIRParser.RULE_isImplicitCodeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4162;
			this.match(LLVMIRParser.KwIsImplicitCodeLabel);
			this.state = 4163;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isLocalField(): IsLocalFieldContext {
		let _localctx: IsLocalFieldContext = new IsLocalFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 702, LLVMIRParser.RULE_isLocalField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4165;
			this.match(LLVMIRParser.KwIsLocalLabel);
			this.state = 4166;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isOptimizedField(): IsOptimizedFieldContext {
		let _localctx: IsOptimizedFieldContext = new IsOptimizedFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 704, LLVMIRParser.RULE_isOptimizedField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4168;
			this.match(LLVMIRParser.KwIsOptimizedLabel);
			this.state = 4169;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isUnsignedField(): IsUnsignedFieldContext {
		let _localctx: IsUnsignedFieldContext = new IsUnsignedFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 706, LLVMIRParser.RULE_isUnsignedField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4171;
			this.match(LLVMIRParser.KwIsUnsignedLabel);
			this.state = 4172;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public apiNotesField(): ApiNotesFieldContext {
		let _localctx: ApiNotesFieldContext = new ApiNotesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 708, LLVMIRParser.RULE_apiNotesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4174;
			this.match(LLVMIRParser.KwApinotesLabel);
			this.state = 4175;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public languageField(): LanguageFieldContext {
		let _localctx: LanguageFieldContext = new LanguageFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 710, LLVMIRParser.RULE_languageField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4177;
			this.match(LLVMIRParser.KwLanguageLabel);
			this.state = 4178;
			this.match(LLVMIRParser.DwarfLang);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lineField(): LineFieldContext {
		let _localctx: LineFieldContext = new LineFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 712, LLVMIRParser.RULE_lineField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4180;
			this.match(LLVMIRParser.KwLineLabel);
			this.state = 4181;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public linkageNameField(): LinkageNameFieldContext {
		let _localctx: LinkageNameFieldContext = new LinkageNameFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 714, LLVMIRParser.RULE_linkageNameField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4183;
			this.match(LLVMIRParser.KwLinkageNameLabel);
			this.state = 4184;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lowerBoundField(): LowerBoundFieldContext {
		let _localctx: LowerBoundFieldContext = new LowerBoundFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 716, LLVMIRParser.RULE_lowerBoundField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4186;
			this.match(LLVMIRParser.KwLowerBoundLabel);
			this.state = 4187;
			this.mdFieldOrInt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public macrosField(): MacrosFieldContext {
		let _localctx: MacrosFieldContext = new MacrosFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 718, LLVMIRParser.RULE_macrosField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4189;
			this.match(LLVMIRParser.KwMacrosLabel);
			this.state = 4190;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameTableKindField(): NameTableKindFieldContext {
		let _localctx: NameTableKindFieldContext = new NameTableKindFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 720, LLVMIRParser.RULE_nameTableKindField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4192;
			this.match(LLVMIRParser.KwNameTableKindLabel);
			this.state = 4193;
			_localctx._nameTableKind = this._input.LT(1);
			_la = this._input.LA(1);
			if (!(((((_la - 459)) & ~0x1F) === 0 && ((1 << (_la - 459)) & ((1 << (LLVMIRParser.KwGNU - 459)) | (1 << (LLVMIRParser.KwNone - 459)) | (1 << (LLVMIRParser.KwDefault - 459)))) !== 0))) {
				_localctx._nameTableKind = this._errHandler.recoverInline(this);
			} else {
				if (this._input.LA(1) === Token.EOF) {
					this.matchedEOF = true;
				}

				this._errHandler.reportMatch(this);
				this.consume();
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nodesField(): NodesFieldContext {
		let _localctx: NodesFieldContext = new NodesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 722, LLVMIRParser.RULE_nodesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4195;
			this.match(LLVMIRParser.KwNodesLabel);
			this.state = 4196;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public offsetField(): OffsetFieldContext {
		let _localctx: OffsetFieldContext = new OffsetFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 724, LLVMIRParser.RULE_offsetField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4198;
			this.match(LLVMIRParser.KwOffsetLabel);
			this.state = 4199;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public producerField(): ProducerFieldContext {
		let _localctx: ProducerFieldContext = new ProducerFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 726, LLVMIRParser.RULE_producerField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4201;
			this.match(LLVMIRParser.KwProducerLabel);
			this.state = 4202;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rangesBaseAddressField(): RangesBaseAddressFieldContext {
		let _localctx: RangesBaseAddressFieldContext = new RangesBaseAddressFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 728, LLVMIRParser.RULE_rangesBaseAddressField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4204;
			this.match(LLVMIRParser.KwRangesBaseAddressLabel);
			this.state = 4205;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rankField(): RankFieldContext {
		let _localctx: RankFieldContext = new RankFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 730, LLVMIRParser.RULE_rankField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4207;
			this.match(LLVMIRParser.KwRankLabel);
			this.state = 4208;
			this.mdFieldOrInt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public retainedNodesField(): RetainedNodesFieldContext {
		let _localctx: RetainedNodesFieldContext = new RetainedNodesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 732, LLVMIRParser.RULE_retainedNodesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4210;
			this.match(LLVMIRParser.KwRetainedNodesLabel);
			this.state = 4211;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public retainedTypesField(): RetainedTypesFieldContext {
		let _localctx: RetainedTypesFieldContext = new RetainedTypesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 734, LLVMIRParser.RULE_retainedTypesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4213;
			this.match(LLVMIRParser.KwRetainedTypesLabel);
			this.state = 4214;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public runtimeLangField(): RuntimeLangFieldContext {
		let _localctx: RuntimeLangFieldContext = new RuntimeLangFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 736, LLVMIRParser.RULE_runtimeLangField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4216;
			this.match(LLVMIRParser.KwRuntimeLangLabel);
			this.state = 4217;
			this.match(LLVMIRParser.DwarfLang);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public runtimeVersionField(): RuntimeVersionFieldContext {
		let _localctx: RuntimeVersionFieldContext = new RuntimeVersionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 738, LLVMIRParser.RULE_runtimeVersionField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4219;
			this.match(LLVMIRParser.KwRuntimeVersionLabel);
			this.state = 4220;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public scopeField(): ScopeFieldContext {
		let _localctx: ScopeFieldContext = new ScopeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 740, LLVMIRParser.RULE_scopeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4222;
			this.match(LLVMIRParser.KwScopeLabel);
			this.state = 4223;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public scopeLineField(): ScopeLineFieldContext {
		let _localctx: ScopeLineFieldContext = new ScopeLineFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 742, LLVMIRParser.RULE_scopeLineField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4225;
			this.match(LLVMIRParser.KwScopeLineLabel);
			this.state = 4226;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sdkField(): SdkFieldContext {
		let _localctx: SdkFieldContext = new SdkFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 744, LLVMIRParser.RULE_sdkField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4228;
			this.match(LLVMIRParser.KwSdkLabel);
			this.state = 4229;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setterField(): SetterFieldContext {
		let _localctx: SetterFieldContext = new SetterFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 746, LLVMIRParser.RULE_setterField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4231;
			this.match(LLVMIRParser.KwSetterLabel);
			this.state = 4232;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sizeField(): SizeFieldContext {
		let _localctx: SizeFieldContext = new SizeFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 748, LLVMIRParser.RULE_sizeField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4234;
			this.match(LLVMIRParser.KwSizeLabel);
			this.state = 4235;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sourceField(): SourceFieldContext {
		let _localctx: SourceFieldContext = new SourceFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 750, LLVMIRParser.RULE_sourceField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4237;
			this.match(LLVMIRParser.KwSourceLabel);
			this.state = 4238;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public spFlagsField(): SpFlagsFieldContext {
		let _localctx: SpFlagsFieldContext = new SpFlagsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 752, LLVMIRParser.RULE_spFlagsField);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4240;
			this.match(LLVMIRParser.KwSpFlagsLabel);
			{
			this.state = 4241;
			this.diSPFlag();
			this.state = 4246;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === LLVMIRParser.Pipe) {
				{
				{
				this.state = 4242;
				this.match(LLVMIRParser.Pipe);
				this.state = 4243;
				this.diSPFlag();
				}
				}
				this.state = 4248;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public splitDebugFilenameField(): SplitDebugFilenameFieldContext {
		let _localctx: SplitDebugFilenameFieldContext = new SplitDebugFilenameFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 754, LLVMIRParser.RULE_splitDebugFilenameField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4249;
			this.match(LLVMIRParser.KwSplitDebugFilenameLabel);
			this.state = 4250;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public splitDebugInliningField(): SplitDebugInliningFieldContext {
		let _localctx: SplitDebugInliningFieldContext = new SplitDebugInliningFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 756, LLVMIRParser.RULE_splitDebugInliningField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4252;
			this.match(LLVMIRParser.KwSplitDebugInliningLabel);
			this.state = 4253;
			this.boolConst();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public strideField(): StrideFieldContext {
		let _localctx: StrideFieldContext = new StrideFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 758, LLVMIRParser.RULE_strideField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4255;
			this.match(LLVMIRParser.KwStrideLabel);
			this.state = 4256;
			this.mdFieldOrInt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringLengthField(): StringLengthFieldContext {
		let _localctx: StringLengthFieldContext = new StringLengthFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 760, LLVMIRParser.RULE_stringLengthField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4258;
			this.match(LLVMIRParser.KwStringLengthLabel);
			this.state = 4259;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringLengthExpressionField(): StringLengthExpressionFieldContext {
		let _localctx: StringLengthExpressionFieldContext = new StringLengthExpressionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 762, LLVMIRParser.RULE_stringLengthExpressionField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4261;
			this.match(LLVMIRParser.KwStringLengthExpressionLabel);
			this.state = 4262;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringLocationExpressionField(): StringLocationExpressionFieldContext {
		let _localctx: StringLocationExpressionFieldContext = new StringLocationExpressionFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 764, LLVMIRParser.RULE_stringLocationExpressionField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4264;
			this.match(LLVMIRParser.KwStringLocationExpressionLabel);
			this.state = 4265;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sysrootField(): SysrootFieldContext {
		let _localctx: SysrootFieldContext = new SysrootFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 766, LLVMIRParser.RULE_sysrootField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4267;
			this.match(LLVMIRParser.KwSysrootLabel);
			this.state = 4268;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public targetFuncNameField(): TargetFuncNameFieldContext {
		let _localctx: TargetFuncNameFieldContext = new TargetFuncNameFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 768, LLVMIRParser.RULE_targetFuncNameField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4270;
			this.match(LLVMIRParser.KwTargetFuncNameLabel);
			this.state = 4271;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public templateParamsField(): TemplateParamsFieldContext {
		let _localctx: TemplateParamsFieldContext = new TemplateParamsFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 770, LLVMIRParser.RULE_templateParamsField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4273;
			this.match(LLVMIRParser.KwTemplateParamsLabel);
			this.state = 4274;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public thisAdjustmentField(): ThisAdjustmentFieldContext {
		let _localctx: ThisAdjustmentFieldContext = new ThisAdjustmentFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 772, LLVMIRParser.RULE_thisAdjustmentField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4276;
			this.match(LLVMIRParser.KwThisAdjustmentLabel);
			this.state = 4277;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public thrownTypesField(): ThrownTypesFieldContext {
		let _localctx: ThrownTypesFieldContext = new ThrownTypesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 774, LLVMIRParser.RULE_thrownTypesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4279;
			this.match(LLVMIRParser.KwThrownTypesLabel);
			this.state = 4280;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeMacinfoField(): TypeMacinfoFieldContext {
		let _localctx: TypeMacinfoFieldContext = new TypeMacinfoFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 776, LLVMIRParser.RULE_typeMacinfoField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4282;
			this.match(LLVMIRParser.KwTypeLabel);
			this.state = 4283;
			this.match(LLVMIRParser.DwarfMacinfo);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typesField(): TypesFieldContext {
		let _localctx: TypesFieldContext = new TypesFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 778, LLVMIRParser.RULE_typesField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4285;
			this.match(LLVMIRParser.KwTypesLabel);
			this.state = 4286;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitField(): UnitFieldContext {
		let _localctx: UnitFieldContext = new UnitFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 780, LLVMIRParser.RULE_unitField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4288;
			this.match(LLVMIRParser.KwUnitLabel);
			this.state = 4289;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public upperBoundField(): UpperBoundFieldContext {
		let _localctx: UpperBoundFieldContext = new UpperBoundFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 782, LLVMIRParser.RULE_upperBoundField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4291;
			this.match(LLVMIRParser.KwUpperBoundLabel);
			this.state = 4292;
			this.mdFieldOrInt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public valueIntField(): ValueIntFieldContext {
		let _localctx: ValueIntFieldContext = new ValueIntFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 784, LLVMIRParser.RULE_valueIntField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4294;
			this.match(LLVMIRParser.KwValueLabel);
			this.state = 4295;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public valueStringField(): ValueStringFieldContext {
		let _localctx: ValueStringFieldContext = new ValueStringFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 786, LLVMIRParser.RULE_valueStringField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4297;
			this.match(LLVMIRParser.KwValueLabel);
			this.state = 4298;
			this.match(LLVMIRParser.StringLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public varField(): VarFieldContext {
		let _localctx: VarFieldContext = new VarFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 788, LLVMIRParser.RULE_varField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4300;
			this.match(LLVMIRParser.KwVarLabel);
			this.state = 4301;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public virtualIndexField(): VirtualIndexFieldContext {
		let _localctx: VirtualIndexFieldContext = new VirtualIndexFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 790, LLVMIRParser.RULE_virtualIndexField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4303;
			this.match(LLVMIRParser.KwVirtualIndexLabel);
			this.state = 4304;
			this.match(LLVMIRParser.IntLit);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public virtualityField(): VirtualityFieldContext {
		let _localctx: VirtualityFieldContext = new VirtualityFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 792, LLVMIRParser.RULE_virtualityField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4306;
			this.match(LLVMIRParser.KwVirtualityLabel);
			this.state = 4307;
			this.match(LLVMIRParser.DwarfVirtuality);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public vtableHolderField(): VtableHolderFieldContext {
		let _localctx: VtableHolderFieldContext = new VtableHolderFieldContext(this._ctx, this.state);
		this.enterRule(_localctx, 794, LLVMIRParser.RULE_vtableHolderField);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4309;
			this.match(LLVMIRParser.KwVtableHolderLabel);
			this.state = 4310;
			this.mdField();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}

	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 87:
			return this.type_sempred(_localctx as TypeContext, predIndex);
		}
		return true;
	}
	private type_sempred(_localctx: TypeContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.precpred(this._ctx, 13);

		case 1:
			return this.precpred(this._ctx, 10);
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 8;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x03\u0200\u10DB\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04+\t" +
		"+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
		"X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t" +
		"`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04" +
		"i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04p\tp\x04q\tq\x04" +
		"r\tr\x04s\ts\x04t\tt\x04u\tu\x04v\tv\x04w\tw\x04x\tx\x04y\ty\x04z\tz\x04" +
		"{\t{\x04|\t|\x04}\t}\x04~\t~\x04\x7F\t\x7F\x04\x80\t\x80\x04\x81\t\x81" +
		"\x04\x82\t\x82\x04\x83\t\x83\x04\x84\t\x84\x04\x85\t\x85\x04\x86\t\x86" +
		"\x04\x87\t\x87\x04\x88\t\x88\x04\x89\t\x89\x04\x8A\t\x8A\x04\x8B\t\x8B" +
		"\x04\x8C\t\x8C\x04\x8D\t\x8D\x04\x8E\t\x8E\x04\x8F\t\x8F\x04\x90\t\x90" +
		"\x04\x91\t\x91\x04\x92\t\x92\x04\x93\t\x93\x04\x94\t\x94\x04\x95\t\x95" +
		"\x04\x96\t\x96\x04\x97\t\x97\x04\x98\t\x98\x04\x99\t\x99\x04\x9A\t\x9A" +
		"\x04\x9B\t\x9B\x04\x9C\t\x9C\x04\x9D\t\x9D\x04\x9E\t\x9E\x04\x9F\t\x9F" +
		"\x04\xA0\t\xA0\x04\xA1\t\xA1\x04\xA2\t\xA2\x04\xA3\t\xA3\x04\xA4\t\xA4" +
		"\x04\xA5\t\xA5\x04\xA6\t\xA6\x04\xA7\t\xA7\x04\xA8\t\xA8\x04\xA9\t\xA9" +
		"\x04\xAA\t\xAA\x04\xAB\t\xAB\x04\xAC\t\xAC\x04\xAD\t\xAD\x04\xAE\t\xAE" +
		"\x04\xAF\t\xAF\x04\xB0\t\xB0\x04\xB1\t\xB1\x04\xB2\t\xB2\x04\xB3\t\xB3" +
		"\x04\xB4\t\xB4\x04\xB5\t\xB5\x04\xB6\t\xB6\x04\xB7\t\xB7\x04\xB8\t\xB8" +
		"\x04\xB9\t\xB9\x04\xBA\t\xBA\x04\xBB\t\xBB\x04\xBC\t\xBC\x04\xBD\t\xBD" +
		"\x04\xBE\t\xBE\x04\xBF\t\xBF\x04\xC0\t\xC0\x04\xC1\t\xC1\x04\xC2\t\xC2" +
		"\x04\xC3\t\xC3\x04\xC4\t\xC4\x04\xC5\t\xC5\x04\xC6\t\xC6\x04\xC7\t\xC7" +
		"\x04\xC8\t\xC8\x04\xC9\t\xC9\x04\xCA\t\xCA\x04\xCB\t\xCB\x04\xCC\t\xCC" +
		"\x04\xCD\t\xCD\x04\xCE\t\xCE\x04\xCF\t\xCF\x04\xD0\t\xD0\x04\xD1\t\xD1" +
		"\x04\xD2\t\xD2\x04\xD3\t\xD3\x04\xD4\t\xD4\x04\xD5\t\xD5\x04\xD6\t\xD6" +
		"\x04\xD7\t\xD7\x04\xD8\t\xD8\x04\xD9\t\xD9\x04\xDA\t\xDA\x04\xDB\t\xDB" +
		"\x04\xDC\t\xDC\x04\xDD\t\xDD\x04\xDE\t\xDE\x04\xDF\t\xDF\x04\xE0\t\xE0" +
		"\x04\xE1\t\xE1\x04\xE2\t\xE2\x04\xE3\t\xE3\x04\xE4\t\xE4\x04\xE5\t\xE5" +
		"\x04\xE6\t\xE6\x04\xE7\t\xE7\x04\xE8\t\xE8\x04\xE9\t\xE9\x04\xEA\t\xEA" +
		"\x04\xEB\t\xEB\x04\xEC\t\xEC\x04\xED\t\xED\x04\xEE\t\xEE\x04\xEF\t\xEF" +
		"\x04\xF0\t\xF0\x04\xF1\t\xF1\x04\xF2\t\xF2\x04\xF3\t\xF3\x04\xF4\t\xF4" +
		"\x04\xF5\t\xF5\x04\xF6\t\xF6\x04\xF7\t\xF7\x04\xF8\t\xF8\x04\xF9\t\xF9" +
		"\x04\xFA\t\xFA\x04\xFB\t\xFB\x04\xFC\t\xFC\x04\xFD\t\xFD\x04\xFE\t\xFE" +
		"\x04\xFF\t\xFF\x04\u0100\t\u0100\x04\u0101\t\u0101\x04\u0102\t\u0102\x04" +
		"\u0103\t\u0103\x04\u0104\t\u0104\x04\u0105\t\u0105\x04\u0106\t\u0106\x04" +
		"\u0107\t\u0107\x04\u0108\t\u0108\x04\u0109\t\u0109\x04\u010A\t\u010A\x04" +
		"\u010B\t\u010B\x04\u010C\t\u010C\x04\u010D\t\u010D\x04\u010E\t\u010E\x04" +
		"\u010F\t\u010F\x04\u0110\t\u0110\x04\u0111\t\u0111\x04\u0112\t\u0112\x04" +
		"\u0113\t\u0113\x04\u0114\t\u0114\x04\u0115\t\u0115\x04\u0116\t\u0116\x04" +
		"\u0117\t\u0117\x04\u0118\t\u0118\x04\u0119\t\u0119\x04\u011A\t\u011A\x04" +
		"\u011B\t\u011B\x04\u011C\t\u011C\x04\u011D\t\u011D\x04\u011E\t\u011E\x04" +
		"\u011F\t\u011F\x04\u0120\t\u0120\x04\u0121\t\u0121\x04\u0122\t\u0122\x04" +
		"\u0123\t\u0123\x04\u0124\t\u0124\x04\u0125\t\u0125\x04\u0126\t\u0126\x04" +
		"\u0127\t\u0127\x04\u0128\t\u0128\x04\u0129\t\u0129\x04\u012A\t\u012A\x04" +
		"\u012B\t\u012B\x04\u012C\t\u012C\x04\u012D\t\u012D\x04\u012E\t\u012E\x04" +
		"\u012F\t\u012F\x04\u0130\t\u0130\x04\u0131\t\u0131\x04\u0132\t\u0132\x04" +
		"\u0133\t\u0133\x04\u0134\t\u0134\x04\u0135\t\u0135\x04\u0136\t\u0136\x04" +
		"\u0137\t\u0137\x04\u0138\t\u0138\x04\u0139\t\u0139\x04\u013A\t\u013A\x04" +
		"\u013B\t\u013B\x04\u013C\t\u013C\x04\u013D\t\u013D\x04\u013E\t\u013E\x04" +
		"\u013F\t\u013F\x04\u0140\t\u0140\x04\u0141\t\u0141\x04\u0142\t\u0142\x04" +
		"\u0143\t\u0143\x04\u0144\t\u0144\x04\u0145\t\u0145\x04\u0146\t\u0146\x04" +
		"\u0147\t\u0147\x04\u0148\t\u0148\x04\u0149\t\u0149\x04\u014A\t\u014A\x04" +
		"\u014B\t\u014B\x04\u014C\t\u014C\x04\u014D\t\u014D\x04\u014E\t\u014E\x04" +
		"\u014F\t\u014F\x04\u0150\t\u0150\x04\u0151\t\u0151\x04\u0152\t\u0152\x04" +
		"\u0153\t\u0153\x04\u0154\t\u0154\x04\u0155\t\u0155\x04\u0156\t\u0156\x04" +
		"\u0157\t\u0157\x04\u0158\t\u0158\x04\u0159\t\u0159\x04\u015A\t\u015A\x04" +
		"\u015B\t\u015B\x04\u015C\t\u015C\x04\u015D\t\u015D\x04\u015E\t\u015E\x04" +
		"\u015F\t\u015F\x04\u0160\t\u0160\x04\u0161\t\u0161\x04\u0162\t\u0162\x04" +
		"\u0163\t\u0163\x04\u0164\t\u0164\x04\u0165\t\u0165\x04\u0166\t\u0166\x04" +
		"\u0167\t\u0167\x04\u0168\t\u0168\x04\u0169\t\u0169\x04\u016A\t\u016A\x04" +
		"\u016B\t\u016B\x04\u016C\t\u016C\x04\u016D\t\u016D\x04\u016E\t\u016E\x04" +
		"\u016F\t\u016F\x04\u0170\t\u0170\x04\u0171\t\u0171\x04\u0172\t\u0172\x04" +
		"\u0173\t\u0173\x04\u0174\t\u0174\x04\u0175\t\u0175\x04\u0176\t\u0176\x04" +
		"\u0177\t\u0177\x04\u0178\t\u0178\x04\u0179\t\u0179\x04\u017A\t\u017A\x04" +
		"\u017B\t\u017B\x04\u017C\t\u017C\x04\u017D\t\u017D\x04\u017E\t\u017E\x04" +
		"\u017F\t\u017F\x04\u0180\t\u0180\x04\u0181\t\u0181\x04\u0182\t\u0182\x04" +
		"\u0183\t\u0183\x04\u0184\t\u0184\x04\u0185\t\u0185\x04\u0186\t\u0186\x04" +
		"\u0187\t\u0187\x04\u0188\t\u0188\x04\u0189\t\u0189\x04\u018A\t\u018A\x04" +
		"\u018B\t\u018B\x04\u018C\t\u018C\x04\u018D\t\u018D\x04\u018E\t\u018E\x04" +
		"\u018F\t\u018F\x03\x02\x07\x02\u0320\n\x02\f\x02\x0E\x02\u0323\v\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x05\x03\u0329\n\x03\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x05\x07" +
		"\u0348\n\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x05\v\u035C\n\v\x03" +
		"\v\x05\v\u035F\n\v\x03\v\x05\v\u0362\n\v\x03\v\x05\v\u0365\n\v\x03\v\x05" +
		"\v\u0368\n\v\x03\v\x05\v\u036B\n\v\x03\v\x05\v\u036E\n\v\x03\v\x03\v\x03" +
		"\v\x03\v\x07\v\u0374\n\v\f\v\x0E\v\u0377\v\v\x03\v\x03\v\x07\v\u037B\n" +
		"\v\f\v\x0E\v\u037E\v\v\x03\v\x07\v\u0381\n\v\f\v\x0E\v\u0384\v\v\x03\f" +
		"\x03\f\x03\f\x05\f\u0389\n\f\x03\f\x05\f\u038C\n\f\x03\f\x05\f\u038F\n" +
		"\f\x03\f\x05\f\u0392\n\f\x03\f\x05\f\u0395\n\f\x03\f\x05\f\u0398\n\f\x03" +
		"\f\x05\f\u039B\n\f\x03\f\x05\f\u039E\n\f\x03\f\x03\f\x03\f\x03\f\x03\f" +
		"\x07\f\u03A5\n\f\f\f\x0E\f\u03A8\v\f\x03\f\x03\f\x07\f\u03AC\n\f\f\f\x0E" +
		"\f\u03AF\v\f\x03\f\x07\f\u03B2\n\f\f\f\x0E\f\u03B5\v\f\x03\r\x03\r\x03" +
		"\r\x05\r\u03BA\n\r\x03\r\x05\r\u03BD\n\r\x03\r\x05\r\u03C0\n\r\x03\r\x05" +
		"\r\u03C3\n\r\x03\r\x05\r\u03C6\n\r\x03\r\x05\r\u03C9\n\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x07\r\u03D1\n\r\f\r\x0E\r\u03D4\v\r\x03\x0E\x03\x0E" +
		"\x07\x0E\u03D8\n\x0E\f\x0E\x0E\x0E\u03DB\v\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x0F\x07\x0F\u03E2\n\x0F\f\x0F\x0E\x0F\u03E5\v\x0F\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x07\x10\u03EE\n\x10\f" +
		"\x10\x0E\x10\u03F1\v\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x07\x11\u03FC\n\x11\f\x11\x0E\x11\u03FF\v\x11" +
		"\x05\x11\u0401\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x05\x12\u0408" +
		"\n\x12\x03\x12\x03\x12\x05\x12\u040C\n\x12\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x07\x13\u0415\n\x13\f\x13\x0E\x13\u0418\v" +
		"\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x07\x14\u0425\n\x14\f\x14\x0E\x14\u0428\v\x14\x03" +
		"\x14\x03\x14\x03\x15\x05\x15\u042D\n\x15\x03\x15\x05\x15\u0430\n\x15\x03" +
		"\x15\x05\x15\u0433\n\x15\x03\x15\x05\x15\u0436\n\x15\x03\x15\x05\x15\u0439" +
		"\n\x15\x03\x15\x07\x15\u043C\n\x15\f\x15\x0E\x15\u043F\v\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x05\x15\u0447\n\x15\x03\x15\x05\x15" +
		"\u044A\n\x15\x03\x15\x07\x15\u044D\n\x15\f\x15\x0E\x15\u0450\v\x15\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\u0457\n\x16\x03\x17\x03\x17" +
		"\x05\x17\u045B\n\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x05\x19\u0469\n\x19\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x05\x1E\u0479\n\x1E\x03\x1F\x03\x1F\x06" +
		"\x1F\u047D\n\x1F\r\x1F\x0E\x1F\u047E\x03\x1F\x07\x1F\u0482\n\x1F\f\x1F" +
		"\x0E\x1F\u0485\v\x1F\x03\x1F\x03\x1F\x03 \x05 \u048A\n \x03 \x07 \u048D" +
		"\n \f \x0E \u0490\v \x03 \x03 \x03!\x03!\x03!\x03!\x05!\u0498\n!\x03\"" +
		"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x05\"\u04A5" +
		"\n\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x05$\u04AE\n$\x03%\x03%\x03%\x03" +
		"%\x07%\u04B4\n%\f%\x0E%\u04B7\v%\x03%\x03%\x03%\x03%\x03%\x07%\u04BE\n" +
		"%\f%\x0E%\u04C1\v%\x05%\u04C3\n%\x03&\x03&\x03&\x03&\x07&\u04C9\n&\f&" +
		"\x0E&\u04CC\v&\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x07" +
		"\'\u04D7\n\'\f\'\x0E\'\u04DA\v\'\x03(\x03(\x03(\x03(\x03(\x03(\x07(\u04E2" +
		"\n(\f(\x0E(\u04E5\v(\x03(\x03(\x03(\x07(\u04EA\n(\f(\x0E(\u04ED\v(\x03" +
		")\x03)\x03)\x03)\x03)\x03)\x03)\x05)\u04F6\n)\x05)\u04F8\n)\x03)\x03)" +
		"\x03)\x07)\u04FD\n)\f)\x0E)\u0500\v)\x03*\x03*\x03*\x03*\x07*\u0506\n" +
		"*\f*\x0E*\u0509\v*\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x07+\u0512\n+\f" +
		"+\x0E+\u0515\v+\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x07,\u051E\n,\f,\x0E" +
		",\u0521\v,\x03-\x03-\x03-\x07-\u0526\n-\f-\x0E-\u0529\v-\x03.\x03.\x05" +
		".\u052D\n.\x03.\x07.\u0530\n.\f.\x0E.\u0533\v.\x03.\x05.\u0536\n.\x03" +
		".\x03.\x03.\x03.\x03.\x03.\x07.\u053E\n.\f.\x0E.\u0541\v.\x03.\x03.\x03" +
		".\x03.\x06.\u0547\n.\r.\x0E.\u0548\x03.\x03.\x05.\u054D\n.\x03.\x03.\x03" +
		".\x03.\x03.\x03.\x07.\u0555\n.\f.\x0E.\u0558\v.\x03/\x03/\x05/\u055C\n" +
		"/\x03/\x07/\u055F\n/\f/\x0E/\u0562\v/\x03/\x05/\u0565\n/\x03/\x03/\x03" +
		"/\x03/\x03/\x03/\x07/\u056D\n/\f/\x0E/\u0570\v/\x03/\x03/\x03/\x03/\x06" +
		"/\u0576\n/\r/\x0E/\u0577\x03/\x03/\x05/\u057C\n/\x03/\x03/\x03/\x03/\x03" +
		"/\x03/\x07/\u0584\n/\f/\x0E/\u0587\v/\x05/\u0589\n/\x03/\x03/\x03/\x07" +
		"/\u058E\n/\f/\x0E/\u0591\v/\x030\x030\x030\x030\x030\x030\x030\x030\x03" +
		"0\x030\x070\u059D\n0\f0\x0E0\u05A0\v0\x031\x031\x031\x032\x032\x032\x03" +
		"2\x033\x033\x033\x053\u05AC\n3\x034\x034\x034\x074\u05B1\n4\f4\x0E4\u05B4" +
		"\v4\x035\x035\x055\u05B8\n5\x036\x036\x036\x036\x036\x076\u05BF\n6\f6" +
		"\x0E6\u05C2\v6\x056\u05C4\n6\x036\x036\x037\x037\x038\x038\x038\x038\x03" +
		"8\x058\u05CF\n8\x039\x039\x039\x03:\x03:\x03:\x03:\x05:\u05D8\n:\x03;" +
		"\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03" +
		"<\x03<\x03<\x03<\x03<\x05<\u05ED\n<\x03=\x03=\x03>\x03>\x03?\x03?\x03" +
		"@\x03@\x03A\x03A\x03B\x03B\x03B\x03B\x07B\u05FD\nB\fB\x0EB\u0600\vB\x05" +
		"B\u0602\nB\x03B\x03B\x03B\x03B\x03B\x03B\x07B\u060A\nB\fB\x0EB\u060D\v" +
		"B\x05B\u060F\nB\x03B\x03B\x05B\u0613\nB\x03C\x03C\x03C\x03C\x03C\x03C" +
		"\x07C\u061B\nC\fC\x0EC\u061E\vC\x05C\u0620\nC\x03C\x05C\u0623\nC\x03D" +
		"\x03D\x03D\x03D\x07D\u0629\nD\fD\x0ED\u062C\vD\x05D\u062E\nD\x03D\x03" +
		"D\x03E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03H\x03H\x03H\x03H\x03H\x03" +
		"I\x03I\x03I\x03J\x03J\x03J\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03" +
		"K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03" +
		"K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x05K\u0663\nK\x03L\x03L\x03L\x03" +
		"M\x03M\x03M\x03N\x03N\x03N\x05N\u066E\nN\x03O\x03O\x03O\x03O\x03O\x07" +
		"O\u0675\nO\fO\x0EO\u0678\vO\x05O\u067A\nO\x03O\x03O\x03P\x03P\x03P\x03" +
		"P\x03P\x03P\x05P\u0684\nP\x03Q\x03Q\x03Q\x03Q\x03Q\x07Q\u068B\nQ\fQ\x0E" +
		"Q\u068E\vQ\x05Q\u0690\nQ\x03Q\x03Q\x03R\x03R\x03R\x03S\x03S\x03S\x05S" +
		"\u069A\nS\x03T\x03T\x05T\u069E\nT\x03T\x05T\u06A1\nT\x03T\x05T\u06A4\n" +
		"T\x03T\x05T\u06A7\nT\x03T\x03T\x03T\x03T\x03U\x03U\x03U\x03V\x03V\x05" +
		"V\u06B2\nV\x03W\x03W\x03X\x03X\x03X\x03X\x03X\x03X\x03X\x03X\x03X\x03" +
		"X\x03X\x03X\x05X\u06C2\nX\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03" +
		"Y\x03Y\x03Y\x03Y\x03Y\x03Y\x05Y\u06D2\nY\x03Y\x03Y\x03Y\x03Y\x03Y\x03" +
		"Y\x03Y\x05Y\u06DB\nY\x03Y\x07Y\u06DE\nY\fY\x0EY\u06E1\vY\x03Z\x03Z\x03" +
		"[\x03[\x03\\\x05\\\u06E8\n\\\x03\\\x03\\\x03\\\x07\\\u06ED\n\\\f\\\x0E" +
		"\\\u06F0\v\\\x03\\\x03\\\x05\\\u06F4\n\\\x05\\\u06F6\n\\\x03]\x03]\x07" +
		"]\u06FA\n]\f]\x0E]\u06FD\v]\x03]\x05]\u0700\n]\x03^\x03^\x03^\x03^\x03" +
		"^\x03^\x03^\x03^\x03^\x03^\x03^\x03^\x05^\u070E\n^\x03_\x03_\x03`\x03" +
		"`\x03`\x03`\x03a\x03a\x03a\x03a\x03a\x03a\x05a\u071C\na\x03b\x03b\x03" +
		"b\x03b\x03c\x03c\x03c\x03c\x03c\x03d\x03d\x03d\x03d\x03e\x03e\x03e\x03" +
		"e\x03e\x03f\x03f\x03f\x03f\x03f\x05f\u0735\nf\x03f\x03f\x03g\x03g\x03" +
		"g\x03g\x03g\x05g\u073E\ng\x03h\x03h\x03h\x03h\x03h\x03h\x05h\u0746\nh" +
		"\x03h\x05h\u0749\nh\x03i\x03i\x03i\x03i\x03i\x03j\x03j\x03j\x03j\x03j" +
		"\x05j\u0755\nj\x03k\x03k\x03k\x03k\x03k\x03k\x03k\x03k\x05k\u075F\nk\x03" +
		"l\x03l\x03l\x03l\x03l\x03m\x03m\x03m\x03m\x03m\x03n\x03n\x03o\x03o\x03" +
		"o\x03o\x03o\x03p\x03p\x03p\x03p\x03p\x03q\x03q\x05q\u0779\nq\x03r\x03" +
		"r\x03r\x03r\x03r\x03r\x03r\x03r\x03r\x03r\x05r\u0785\nr\x03s\x03s\x03" +
		"t\x03t\x03u\x03u\x05u\u078D\nu\x03u\x03u\x03u\x05u\u0792\nu\x03v\x03v" +
		"\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x03v\x05v\u07A2" +
		"\nv\x03w\x03w\x03x\x03x\x03x\x03x\x03x\x03x\x03y\x03y\x03y\x03y\x07y\u07B0" +
		"\ny\fy\x0Ey\u07B3\vy\x05y\u07B5\ny\x03y\x03y\x03y\x03y\x03y\x03y\x07y" +
		"\u07BD\ny\fy\x0Ey\u07C0\vy\x05y\u07C2\ny\x03y\x03y\x05y\u07C6\ny\x03z" +
		"\x03z\x03{\x03{\x03|\x03|\x03}\x03}\x05}\u07D0\n}\x03~\x03~\x03~\x03~" +
		"\x03~\x03\x7F\x03\x7F\x03\x7F\x03\x7F\x03\x7F\x05\x7F\u07DC\n\x7F\x03" +
		"\x80\x03\x80\x03\x81\x03\x81\x03\x81\x03\x81\x03\x81\x03\x81\x03\x81\x03" +
		"\x82\x03\x82\x05\x82\u07E9\n\x82\x03\x82\x03\x82\x03\x82\x03\x82\x03\x82" +
		"\x03\x82\x07\x82\u07F1\n\x82\f\x82\x0E\x82\u07F4\v\x82\x03\x82\x03\x82" +
		"\x03\x83\x05\x83\u07F9\n\x83\x03\x83\x03\x83\x03\x84\x03\x84\x03\x84\x03" +
		"\x84\x03\x84\x03\x84\x03\x84\x03\x85\x03\x85\x03\x85\x03\x85\x03\x85\x03" +
		"\x85\x03\x85\x03\x86\x03\x86\x03\x86\x03\x86\x03\x86\x03\x86\x03\x86\x03" +
		"\x86\x03\x87\x03\x87\x03\x87\x03\x87\x03\x87\x03\x87\x03\x87\x03\x87\x03" +
		"\x88\x03\x88\x03\x88\x03\x88\x03\x88\x03\x88\x03\x88\x03\x88\x03\x88\x03" +
		"\x89\x03\x89\x03\x89\x03\x89\x03\x89\x03\x89\x03\x89\x03\x8A\x03\x8A\x03" +
		"\x8A\x03\x8A\x03\x8A\x03\x8A\x03\x8A\x03\x8B\x03\x8B\x03\x8B\x03\x8B\x03" +
		"\x8B\x03\x8B\x03\x8B\x03\x8C\x03\x8C\x03\x8C\x03\x8C\x03\x8C\x03\x8C\x03" +
		"\x8C\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8E\x03" +
		"\x8E\x03\x8E\x03\x8E\x03\x8E\x03\x8E\x03\x8E\x03\x8F\x03\x8F\x03\x8F\x03" +
		"\x8F\x03\x8F\x03\x8F\x03\x8F\x03\x90\x03\x90\x03\x90\x03\x90\x03\x90\x03" +
		"\x90\x03\x90\x03\x91\x03\x91\x03\x91\x03\x91\x03\x91\x03\x91\x03\x91\x03" +
		"\x92\x03\x92\x03\x92\x03\x92\x03\x92\x03\x92\x03\x92\x03\x93\x03\x93\x03" +
		"\x93\x03\x93\x03\x93\x03\x93\x03\x93\x03\x94\x03\x94\x03\x94\x03\x94\x03" +
		"\x94\x03\x94\x03\x94\x03\x94\x03\x94\x03\x95\x03\x95\x03\x95\x03\x95\x03" +
		"\x95\x03\x95\x03\x95\x03\x95\x03\x95\x03\x96\x03\x96\x07\x96\u0885\n\x96" +
		"\f\x96\x0E\x96\u0888\v\x96\x03\x96\x03\x96\x03\x96\x03\x96\x03\x96\x03" +
		"\x96\x03\x97\x03\x97\x05\x97\u0892\n\x97\x03\x97\x03\x97\x03\x97\x03\x97" +
		"\x03\x97\x03\x97\x03\x98\x03\x98\x05\x98\u089C\n\x98\x03\x98\x03\x98\x03" +
		"\x98\x03\x98\x03\x98\x03\x98\x03\x99\x03\x99\x03\x99\x03\x99\x03\x99\x03" +
		"\x99\x03\x99\x03\x9A\x03\x9A\x03\x9A\x03\x9A\x03\x9A\x03\x9A\x03\x9A\x03" +
		"\x9B\x03\x9B\x03\x9B\x03\x9B\x03\x9B\x03\x9B\x03\x9B\x03\x9C\x03\x9C\x07" +
		"\x9C\u08BB\n\x9C\f\x9C\x0E\x9C\u08BE\v\x9C\x03\x9C\x03\x9C\x03\x9C\x03" +
		"\x9C\x03\x9C\x03\x9C\x03\x9D\x03\x9D\x07\x9D\u08C8\n\x9D\f\x9D\x0E\x9D" +
		"\u08CB\v\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9E\x03" +
		"\x9E\x07\x9E\u08D5\n\x9E\f\x9E\x0E\x9E\u08D8\v\x9E\x03\x9E\x03\x9E\x03" +
		"\x9E\x03\x9E\x03\x9E\x03\x9E\x03\x9F\x03\x9F\x03\x9F\x03\x9F\x03\x9F\x03" +
		"\xA0\x03\xA0\x03\xA0\x03\xA0\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03\xA1\x03" +
		"\xA1\x03\xA1\x05\xA1\u091D\n\xA1\x03\xA2\x03\xA2\x05\xA2\u0921\n\xA2\x03" +
		"\xA2\x03\xA2\x03\xA2\x03\xA2\x03\xA2\x05\xA2\u0928\n\xA2\x03\xA2\x03\xA2" +
		"\x07\xA2\u092C\n\xA2\f\xA2\x0E\xA2\u092F\v\xA2\x03\xA2\x03\xA2\x03\xA2" +
		"\x05\xA2\u0934\n\xA2\x03\xA2\x03\xA2\x03\xA2\x03\xA2\x05\xA2\u093A\n\xA2" +
		"\x03\xA2\x03\xA2\x03\xA2\x05\xA2\u093F\n\xA2\x03\xA2\x03\xA2\x07\xA2\u0943" +
		"\n\xA2\f\xA2\x0E\xA2\u0946\v\xA2\x05\xA2\u0948\n\xA2\x03\xA3\x03\xA3\x03" +
		"\xA3\x03\xA3";
	private static readonly _serializedATNSegment1: string =
		"\x03\xA3\x03\xA4\x03\xA4\x05\xA4\u0951\n\xA4\x03\xA4\x03\xA4\x03\xA4\x07" +
		"\xA4\u0956\n\xA4\f\xA4\x0E\xA4\u0959\v\xA4\x03\xA5\x03\xA5\x07\xA5\u095D" +
		"\n\xA5\f\xA5\x0E\xA5\u0960\v\xA5\x03\xA5\x03\xA5\x03\xA5\x07\xA5\u0965" +
		"\n\xA5\f\xA5\x0E\xA5\u0968\v\xA5\x03\xA6\x03\xA6\x07\xA6\u096C\n\xA6\f" +
		"\xA6\x0E\xA6\u096F\v\xA6\x03\xA6\x03\xA6\x03\xA6\x03\xA6\x03\xA6\x07\xA6" +
		"\u0976\n\xA6\f\xA6\x0E\xA6\u0979\v\xA6\x03\xA7\x03\xA7\x07\xA7\u097D\n" +
		"\xA7\f\xA7\x0E\xA7\u0980\v\xA7\x03\xA7\x03\xA7\x03\xA7\x03\xA7\x03\xA7" +
		"\x07\xA7\u0987\n\xA7\f\xA7\x0E\xA7\u098A\v\xA7\x03\xA8\x03\xA8\x07\xA8" +
		"\u098E\n\xA8\f\xA8\x0E\xA8\u0991\v\xA8\x03\xA8\x03\xA8\x03\xA8\x03\xA8" +
		"\x03\xA8\x07\xA8\u0998\n\xA8\f\xA8\x0E\xA8\u099B\v\xA8\x03\xA9\x03\xA9" +
		"\x07\xA9\u099F\n\xA9\f\xA9\x0E\xA9\u09A2\v\xA9\x03\xA9\x03\xA9\x03\xA9" +
		"\x03\xA9\x03\xA9\x07\xA9\u09A9\n\xA9\f\xA9\x0E\xA9\u09AC\v\xA9\x03\xAA" +
		"\x03\xAA\x07\xAA\u09B0\n\xAA\f\xAA\x0E\xAA\u09B3\v\xAA\x03\xAA\x03\xAA" +
		"\x03\xAA\x03\xAA\x03\xAA\x07\xAA\u09BA\n\xAA\f\xAA\x0E\xAA\u09BD\v\xAA" +
		"\x03\xAB\x03\xAB\x07\xAB\u09C1\n\xAB\f\xAB\x0E\xAB\u09C4\v\xAB\x03\xAB" +
		"\x03\xAB\x03\xAB\x03\xAB\x03\xAB\x07\xAB\u09CB\n\xAB\f\xAB\x0E\xAB\u09CE" +
		"\v\xAB\x03\xAC\x03\xAC\x05\xAC\u09D2\n\xAC\x03\xAC\x03\xAC\x03\xAC\x03" +
		"\xAC\x03\xAC\x07\xAC\u09D9\n\xAC\f\xAC\x0E\xAC\u09DC\v\xAC\x03\xAD\x03" +
		"\xAD\x05\xAD\u09E0\n\xAD\x03\xAD\x03\xAD\x03\xAD\x03\xAD\x03\xAD\x07\xAD" +
		"\u09E7\n\xAD\f\xAD\x0E\xAD\u09EA\v\xAD\x03\xAE\x03\xAE\x07\xAE\u09EE\n" +
		"\xAE\f\xAE\x0E\xAE\u09F1\v\xAE\x03\xAE\x03\xAE\x03\xAE\x03\xAE\x03\xAE" +
		"\x07\xAE\u09F8\n\xAE\f\xAE\x0E\xAE\u09FB\v\xAE\x03\xAF\x03\xAF\x03\xAF" +
		"\x03\xAF\x03\xAF\x03\xAF\x07\xAF\u0A03\n\xAF\f\xAF\x0E\xAF\u0A06\v\xAF" +
		"\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x07\xB0\u0A0E\n\xB0\f" +
		"\xB0\x0E\xB0\u0A11\v\xB0\x03\xB1\x03\xB1\x07\xB1\u0A15\n\xB1\f\xB1\x0E" +
		"\xB1\u0A18\v\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x07\xB1\u0A1F" +
		"\n\xB1\f\xB1\x0E\xB1\u0A22\v\xB1\x03\xB2\x03\xB2\x07\xB2\u0A26\n\xB2\f" +
		"\xB2\x0E\xB2\u0A29\v\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x07\xB2" +
		"\u0A30\n\xB2\f\xB2\x0E\xB2\u0A33\v\xB2\x03\xB3\x03\xB3\x05\xB3\u0A37\n" +
		"\xB3\x03\xB3\x03\xB3\x03\xB3\x03\xB3\x03\xB3\x07\xB3\u0A3E\n\xB3\f\xB3" +
		"\x0E\xB3\u0A41\v\xB3\x03\xB4\x03\xB4\x05\xB4\u0A45\n\xB4\x03\xB4\x03\xB4" +
		"\x03\xB4\x03\xB4\x03\xB4\x07\xB4\u0A4C\n\xB4\f\xB4\x0E\xB4\u0A4F\v\xB4" +
		"\x03\xB5\x03\xB5\x03\xB5\x03\xB5\x03\xB5\x03\xB5\x07\xB5\u0A57\n\xB5\f" +
		"\xB5\x0E\xB5\u0A5A\v\xB5\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6" +
		"\x07\xB6\u0A62\n\xB6\f\xB6\x0E\xB6\u0A65\v\xB6\x03\xB7\x03\xB7\x03\xB7" +
		"\x03\xB7\x03\xB7\x03\xB7\x07\xB7\u0A6D\n\xB7\f\xB7\x0E\xB7\u0A70\v\xB7" +
		"\x03\xB8\x03\xB8\x03\xB8\x03\xB8\x03\xB8\x03\xB8\x07\xB8\u0A78\n\xB8\f" +
		"\xB8\x0E\xB8\u0A7B\v\xB8\x03\xB9\x03\xB9\x03\xB9\x03\xB9\x03\xB9\x03\xB9" +
		"\x03\xB9\x03\xB9\x07\xB9\u0A85\n\xB9\f\xB9\x0E\xB9\u0A88\v\xB9\x03\xBA" +
		"\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x07\xBA\u0A92" +
		"\n\xBA\f\xBA\x0E\xBA\u0A95\v\xBA\x03\xBB\x03\xBB\x03\xBB\x03\xBB\x06\xBB" +
		"\u0A9B\n\xBB\r\xBB\x0E\xBB\u0A9C\x03\xBB\x03\xBB\x07\xBB\u0AA1\n\xBB\f" +
		"\xBB\x0E\xBB\u0AA4\v\xBB\x03\xBC\x03\xBC\x03\xBC\x03\xBC\x03\xBC\x03\xBC" +
		"\x06\xBC\u0AAC\n\xBC\r\xBC\x0E\xBC\u0AAD\x03\xBC\x03\xBC\x07\xBC\u0AB2" +
		"\n\xBC\f\xBC\x0E\xBC\u0AB5\v\xBC\x03\xBD\x03\xBD\x05\xBD\u0AB9\n\xBD\x03" +
		"\xBD\x05\xBD\u0ABC\n\xBD\x03\xBD\x03\xBD\x03\xBD\x05\xBD\u0AC1\n\xBD\x03" +
		"\xBD\x03\xBD\x05\xBD\u0AC5\n\xBD\x03\xBD\x03\xBD\x05\xBD\u0AC9\n\xBD\x03" +
		"\xBD\x03\xBD\x07\xBD\u0ACD\n\xBD\f\xBD\x0E\xBD\u0AD0\v\xBD\x03\xBE\x03" +
		"\xBE\x05\xBE\u0AD4\n\xBE\x03\xBE\x03\xBE\x03\xBE\x03\xBE\x03\xBE\x05\xBE" +
		"\u0ADB\n\xBE\x03\xBE\x03\xBE\x07\xBE\u0ADF\n\xBE\f\xBE\x0E\xBE\u0AE2\v" +
		"\xBE\x03\xBE\x03\xBE\x03\xBE\x05\xBE\u0AE7\n\xBE\x03\xBE\x03\xBE\x03\xBE" +
		"\x03\xBE\x05\xBE\u0AED\n\xBE\x03\xBE\x03\xBE\x03\xBE\x05\xBE\u0AF2\n\xBE" +
		"\x03\xBE\x03\xBE\x07\xBE\u0AF6\n\xBE\f\xBE\x0E\xBE\u0AF9\v\xBE\x05\xBE" +
		"\u0AFB\n\xBE\x03\xBF\x03\xBF\x05\xBF\u0AFF\n\xBF\x03\xBF\x05\xBF\u0B02" +
		"\n\xBF\x03\xBF\x03\xBF\x03\xBF\x03\xBF\x03\xBF\x03\xBF\x05\xBF\u0B0A\n" +
		"\xBF\x03\xBF\x03\xBF\x03\xBF\x03\xBF\x05\xBF\u0B10\n\xBF\x03\xBF\x03\xBF" +
		"\x07\xBF\u0B14\n\xBF\f\xBF\x0E\xBF\u0B17\v\xBF\x03\xC0\x03\xC0\x05\xC0" +
		"\u0B1B\n\xC0\x03\xC0\x03\xC0\x03\xC0\x03\xC0\x03\xC0\x05\xC0\u0B22\n\xC0" +
		"\x03\xC0\x03\xC0\x03\xC0\x05\xC0\u0B27\n\xC0\x03\xC0\x03\xC0\x07\xC0\u0B2B" +
		"\n\xC0\f\xC0\x0E\xC0\u0B2E\v\xC0\x03\xC1\x03\xC1\x05\xC1\u0B32\n\xC1\x03" +
		"\xC1\x03\xC1\x03\xC1\x03\xC1\x03\xC1\x07\xC1\u0B39\n\xC1\f\xC1\x0E\xC1" +
		"\u0B3C\v\xC1\x03\xC1\x03\xC1\x07\xC1\u0B40\n\xC1\f\xC1\x0E\xC1\u0B43\v" +
		"\xC1\x03\xC2\x03\xC2\x03\xC2\x03\xC2\x03\xC2\x03\xC2\x07\xC2\u0B4B\n\xC2" +
		"\f\xC2\x0E\xC2\u0B4E\v\xC2\x03\xC3\x03\xC3\x03\xC3\x03\xC3\x03\xC3\x03" +
		"\xC3\x07\xC3\u0B56\n\xC3\f\xC3\x0E\xC3\u0B59\v\xC3\x03\xC4\x03\xC4\x03" +
		"\xC4\x03\xC4\x03\xC4\x03\xC4\x07\xC4\u0B61\n\xC4\f\xC4\x0E\xC4\u0B64\v" +
		"\xC4\x03\xC5\x03\xC5\x03\xC5\x03\xC5\x03\xC5\x03\xC5\x07\xC5\u0B6C\n\xC5" +
		"\f\xC5\x0E\xC5\u0B6F\v\xC5\x03\xC6\x03\xC6\x03\xC6\x03\xC6\x03\xC6\x03" +
		"\xC6\x07\xC6\u0B77\n\xC6\f\xC6\x0E\xC6\u0B7A\v\xC6\x03\xC7\x03\xC7\x03" +
		"\xC7\x03\xC7\x03\xC7\x03\xC7\x07\xC7\u0B82\n\xC7\f\xC7\x0E\xC7\u0B85\v" +
		"\xC7\x03\xC8\x03\xC8\x03\xC8\x03\xC8\x03\xC8\x03\xC8\x07\xC8\u0B8D\n\xC8" +
		"\f\xC8\x0E\xC8\u0B90\v\xC8\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03" +
		"\xC9\x07\xC9\u0B98\n\xC9\f\xC9\x0E\xC9\u0B9B\v\xC9\x03\xCA\x03\xCA\x03" +
		"\xCA\x03\xCA\x03\xCA\x03\xCA\x07\xCA\u0BA3\n\xCA\f\xCA\x0E\xCA\u0BA6\v" +
		"\xCA\x03\xCB\x03\xCB\x03\xCB\x03\xCB\x03\xCB\x03\xCB\x07\xCB\u0BAE\n\xCB" +
		"\f\xCB\x0E\xCB\u0BB1\v\xCB\x03\xCC\x03\xCC\x03\xCC\x03\xCC\x03\xCC\x03" +
		"\xCC\x07\xCC\u0BB9\n\xCC\f\xCC\x0E\xCC\u0BBC\v\xCC\x03\xCD\x03\xCD\x03" +
		"\xCD\x03\xCD\x03\xCD\x03\xCD\x07\xCD\u0BC4\n\xCD\f\xCD\x0E\xCD\u0BC7\v" +
		"\xCD\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x07\xCE\u0BCF\n\xCE" +
		"\f\xCE\x0E\xCE\u0BD2\v\xCE\x03\xCF\x03\xCF\x03\xCF\x03\xCF\x03\xCF\x03" +
		"\xCF\x03\xCF\x07\xCF\u0BDB\n\xCF\f\xCF\x0E\xCF\u0BDE\v\xCF\x03\xD0\x03" +
		"\xD0\x07\xD0\u0BE2\n\xD0\f\xD0\x0E\xD0\u0BE5\v\xD0\x03\xD0\x03\xD0\x03" +
		"\xD0\x03\xD0\x03\xD0\x03\xD0\x07\xD0\u0BED\n\xD0\f\xD0\x0E\xD0\u0BF0\v" +
		"\xD0\x03\xD1\x03\xD1\x07\xD1\u0BF4\n\xD1\f\xD1\x0E\xD1\u0BF7\v\xD1\x03" +
		"\xD1\x03\xD1\x03\xD1\x03\xD1\x07\xD1\u0BFD\n\xD1\f\xD1\x0E\xD1\u0C00\v" +
		"\xD1\x03\xD1\x03\xD1\x07\xD1\u0C04\n\xD1\f\xD1\x0E\xD1\u0C07\v\xD1\x03" +
		"\xD2\x03\xD2\x07\xD2\u0C0B\n\xD2\f\xD2\x0E\xD2\u0C0E\v\xD2\x03\xD2\x03" +
		"\xD2\x03\xD2\x03\xD2\x03\xD2\x03\xD2\x03\xD2\x07\xD2\u0C17\n\xD2\f\xD2" +
		"\x0E\xD2\u0C1A\v\xD2\x03\xD3\x03\xD3\x03\xD3\x03\xD4\x05\xD4\u0C20\n\xD4" +
		"\x03\xD4\x03\xD4\x07\xD4\u0C24\n\xD4\f\xD4\x0E\xD4\u0C27\v\xD4\x03\xD4" +
		"\x05\xD4\u0C2A\n\xD4\x03\xD4\x07\xD4\u0C2D\n\xD4\f\xD4\x0E\xD4\u0C30\v" +
		"\xD4\x03\xD4\x05\xD4\u0C33\n\xD4\x03\xD4\x03\xD4\x03\xD4\x03\xD4\x03\xD4" +
		"\x03\xD4\x07\xD4\u0C3B\n\xD4\f\xD4\x0E\xD4\u0C3E\v\xD4\x03\xD4\x03\xD4" +
		"\x03\xD4\x03\xD4\x07\xD4\u0C44\n\xD4\f\xD4\x0E\xD4\u0C47\v\xD4\x03\xD4" +
		"\x03\xD4\x05\xD4\u0C4B\n\xD4\x03\xD4\x03\xD4\x07\xD4\u0C4F\n\xD4\f\xD4" +
		"\x0E\xD4\u0C52\v\xD4\x03\xD5\x03\xD5\x03\xD5\x03\xD5\x03\xD5\x03\xD5\x07" +
		"\xD5\u0C5A\n\xD5\f\xD5\x0E\xD5\u0C5D\v\xD5\x03\xD6\x03\xD6\x03\xD6\x05" +
		"\xD6\u0C62\n\xD6\x03\xD6\x07\xD6\u0C65\n\xD6\f\xD6\x0E\xD6\u0C68\v\xD6" +
		"\x03\xD6\x03\xD6\x07\xD6\u0C6C\n\xD6\f\xD6\x0E\xD6\u0C6F\v\xD6\x03\xD7" +
		"\x03\xD7\x03\xD7\x03\xD7\x03\xD7\x03\xD7\x03\xD7\x07\xD7\u0C78\n\xD7\f" +
		"\xD7\x0E\xD7\u0C7B\v\xD7\x05\xD7\u0C7D\n\xD7\x03\xD7\x03\xD7\x03\xD7\x07" +
		"\xD7\u0C82\n\xD7\f\xD7\x0E\xD7\u0C85\v\xD7\x03\xD8\x03\xD8\x03\xD8\x03" +
		"\xD8\x03\xD8\x03\xD8\x03\xD8\x07\xD8\u0C8E\n\xD8\f\xD8\x0E\xD8\u0C91\v" +
		"\xD8\x05\xD8\u0C93\n\xD8\x03\xD8\x03\xD8\x03\xD8\x07\xD8\u0C98\n\xD8\f" +
		"\xD8\x0E\xD8\u0C9B\v\xD8\x03\xD9\x03\xD9\x03\xD9\x03\xD9\x03\xD9\x03\xD9" +
		"\x03\xDA\x03\xDA\x03\xDA\x03\xDA\x03\xDA\x07\xDA\u0CA8\n\xDA\f\xDA\x0E" +
		"\xDA\u0CAB\v\xDA\x05\xDA\u0CAD\n\xDA\x03\xDA\x03\xDA\x03\xDB\x03\xDB\x03" +
		"\xDB\x03\xDC\x05\xDC\u0CB5\n\xDC\x03\xDC\x03\xDC\x03\xDC\x07\xDC\u0CBA" +
		"\n\xDC\f\xDC\x0E\xDC\u0CBD\v\xDC\x03\xDC\x03\xDC\x05\xDC\u0CC1\n\xDC\x05" +
		"\xDC\u0CC3\n\xDC\x03\xDD\x03\xDD\x07\xDD\u0CC7\n\xDD\f\xDD\x0E\xDD\u0CCA" +
		"\v\xDD\x03\xDD\x03\xDD\x03\xDD\x03\xDD\x03\xDD\x05\xDD\u0CD1\n\xDD\x03" +
		"\xDE\x03\xDE\x03\xDE\x03\xDE\x03\xDE\x03\xDE\x05\xDE\u0CD9\n\xDE\x03\xDF" +
		"\x03\xDF\x05\xDF\u0CDD\n\xDF\x03\xE0\x03\xE0\x03\xE1\x03\xE1\x03\xE2\x03" +
		"\xE2\x05\xE2\u0CE5\n\xE2\x03\xE3\x03\xE3\x03\xE4\x03\xE4\x03\xE5\x03\xE5" +
		"\x03\xE6\x03\xE6\x03\xE7\x03\xE7\x03\xE8\x03\xE8\x03\xE9\x03\xE9\x03\xEA" +
		"\x03\xEA\x03\xEB\x03\xEB\x03\xEC\x03\xEC\x03\xED\x03\xED\x03\xEE\x03\xEE" +
		"\x03\xEF\x03\xEF\x03\xF0\x03\xF0\x03\xF1\x03\xF1\x03\xF2\x03\xF2\x03\xF3" +
		"\x03\xF3\x03\xF4\x03\xF4\x03\xF5\x03\xF5\x03\xF6\x03\xF6\x03\xF6\x03\xF6" +
		"\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6" +
		"\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6" +
		"\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x03\xF6\x05\xF6\u0D29\n\xF6\x03" +
		"\xF7\x03\xF7\x03\xF7\x03\xF7\x03\xF7\x07\xF7\u0D30\n\xF7\f\xF7\x0E\xF7" +
		"\u0D33\v\xF7\x05\xF7\u0D35\n\xF7\x03\xF7\x03\xF7\x03\xF8\x03\xF8\x03\xF8" +
		"\x03\xF8\x03\xF8\x07\xF8\u0D3E\n\xF8\f\xF8\x0E\xF8\u0D41\v\xF8\x05\xF8" +
		"\u0D43\n\xF8\x03\xF8\x03\xF8\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x07" +
		"\xF9\u0D4C\n\xF9\f\xF9\x0E\xF9\u0D4F\v\xF9\x05\xF9\u0D51\n\xF9\x03\xF9" +
		"\x03\xF9\x03\xFA\x03\xFA\x03\xFA\x03\xFA\x03\xFA\x07\xFA\u0D5A\n\xFA\f" +
		"\xFA\x0E\xFA\u0D5D\v\xFA\x05\xFA\u0D5F\n\xFA\x03\xFA\x03\xFA\x03\xFB\x03" +
		"\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03" +
		"\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03\xFB\x03" +
		"\xFB\x03\xFB\x05\xFB\u0D78\n\xFB\x03\xFC\x03\xFC\x03\xFC\x03\xFC\x03\xFC" +
		"\x07\xFC\u0D7F\n\xFC\f\xFC\x0E\xFC\u0D82\v\xFC\x05\xFC\u0D84\n\xFC\x03" +
		"\xFC\x03\xFC\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03" +
		"\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x05\xFD\u0D95\n\xFD\x03\xFE" +
		"\x03\xFE\x03\xFE\x03\xFE\x03\xFE\x07\xFE\u0D9C\n\xFE\f\xFE\x0E\xFE\u0D9F" +
		"\v\xFE\x05\xFE\u0DA1\n\xFE\x03\xFE\x03\xFE\x03\xFF\x03\xFF\x03\xFF\x05" +
		"\xFF\u0DA8\n\xFF\x03\u0100\x03\u0100\x03\u0100\x03\u0100\x03\u0100\x07" +
		"\u0100\u0DAF\n\u0100\f\u0100\x0E\u0100\u0DB2\v\u0100\x05\u0100\u0DB4\n" +
		"\u0100\x03\u0100\x03\u0100\x03\u0101\x03\u0101\x03\u0101\x03\u0101\x03" +
		"\u0101\x05\u0101\u0DBD\n\u0101\x03\u0102\x03\u0102\x03\u0102\x03\u0102" +
		"\x03\u0102\x07\u0102\u0DC4\n\u0102\f\u0102\x0E\u0102\u0DC7\v\u0102\x05" +
		"\u0102\u0DC9\n\u0102\x03\u0102\x03\u0102\x03\u0103\x03\u0103\x03\u0103" +
		"\x03\u0103\x03\u0103\x03\u0103\x03\u0103\x03\u0103\x03\u0103\x03\u0103" +
		"\x03\u0103\x03\u0103\x05\u0103\u0DD9\n\u0103\x03\u0104\x03\u0104\x03\u0104" +
		"\x03\u0104\x03\u0104\x07\u0104\u0DE0\n\u0104\f\u0104\x0E\u0104\u0DE3\v" +
		"\u0104\x05\u0104\u0DE5\n\u0104\x03\u0104\x03\u0104\x03\u0105\x03\u0105" +
		"\x05\u0105\u0DEB\n\u0105\x03\u0106\x03\u0106\x03\u0106\x03\u0106\x03\u0106" +
		"\x07\u0106\u0DF2\n\u0106\f\u0106\x0E\u0106\u0DF5\v\u0106\x05\u0106\u0DF7" +
		"\n\u0106\x03\u0106\x03\u0106\x03\u0107\x03\u0107\x03\u0107\x03\u0107\x03" +
		"\u0107\x03\u0107\x03\u0107\x05\u0107\u0E02\n\u0107\x03\u0108\x03\u0108" +
		"\x03\u0108\x03\u0108\x03\u0108\x07\u0108\u0E09\n\u0108\f\u0108\x0E\u0108" +
		"\u0E0C\v\u0108\x05\u0108\u0E0E\n\u0108\x03\u0108\x03\u0108\x03\u0109\x03" +
		"\u0109\x03\u0109\x03\u0109\x05\u0109\u0E16\n\u0109\x03\u010A\x03\u010A" +
		"\x03\u010A\x03\u010A\x03\u010A\x07\u010A\u0E1D\n\u010A\f\u010A\x0E\u010A" +
		"\u0E20\v\u010A\x05\u010A\u0E22\n\u010A\x03\u010A\x03\u010A\x03\u010B\x03" +
		"\u010B\x03\u010B\x03\u010B\x05\u010B\u0E2A\n\u010B\x03\u010C\x03\u010C" +
		"\x03\u010C\x03\u010C\x03\u010C\x07\u010C\u0E31\n\u010C\f\u010C\x0E\u010C" +
		"\u0E34\v\u010C\x05\u010C\u0E36\n\u010C\x03\u010C\x03\u010C\x03\u010D\x03" +
		"\u010D\x03\u010D\x05\u010D\u0E3D\n\u010D\x03\u010E\x03\u010E\x03\u010E" +
		"\x03\u010E\x03\u010E\x07\u010E\u0E44\n\u010E\f\u010E\x0E\u010E\u0E47\v" +
		"\u010E\x05\u010E\u0E49\n\u010E\x03\u010E\x03\u010E\x03\u010F\x03\u010F" +
		"\x03\u010F\x03\u010F\x03\u010F\x03\u010F\x03\u010F\x03\u010F\x03\u010F" +
		"\x05\u010F\u0E56\n\u010F\x03\u0110\x03\u0110\x03\u0110\x03\u0110\x03\u0110" +
		"\x07\u0110\u0E5D\n\u0110\f\u0110\x0E\u0110\u0E60\v\u0110\x05\u0110\u0E62" +
		"\n\u0110\x03\u0110\x03\u0110\x03\u0111\x03\u0111\x03\u0111\x03\u0111\x03" +
		"\u0111\x05\u0111\u0E6B\n\u0111\x03\u0112\x03\u0112\x03\u0112\x03\u0112" +
		"\x03\u0112\x07\u0112\u0E72\n\u0112\f\u0112\x0E\u0112\u0E75\v\u0112\x05" +
		"\u0112\u0E77\n\u0112\x03\u0112\x03\u0112\x03\u0113\x03\u0113\x03\u0113" +
		"\x03\u0113\x05\u0113\u0E7F\n\u0113\x03\u0114\x03\u0114\x03\u0114\x03\u0114" +
		"\x03\u0114\x07\u0114\u0E86\n\u0114\f\u0114\x0E\u0114\u0E89\v\u0114\x05" +
		"\u0114\u0E8B\n\u0114\x03\u0114\x03\u0114\x03\u0115\x03\u0115\x03\u0115" +
		"\x03\u0115\x05\u0115\u0E93\n\u0115\x03\u0116\x03\u0116\x03\u0116\x03\u0116" +
		"\x03\u0116\x07\u0116\u0E9A\n\u0116\f\u0116\x0E\u0116\u0E9D\v\u0116\x05" +
		"\u0116\u0E9F\n\u0116\x03\u0116\x03\u0116\x03\u0117\x03\u0117\x03\u0117" +
		"\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x05\u0117\u0EAB\n\u0117" +
		"\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x07\u0118\u0EB2\n\u0118" +
		"\f\u0118\x0E\u0118\u0EB5\v\u0118\x05\u0118\u0EB7\n\u0118\x03\u0118\x03" +
		"\u0118\x03\u0119\x03\u0119\x03\u0119\x05\u0119\u0EBE\n\u0119\x03\u011A" +
		"\x03\u011A\x03\u011A\x03\u011A\x03\u011A\x07\u011A\u0EC5\n\u011A\f\u011A" +
		"\x0E\u011A\u0EC8\v\u011A\x05\u011A\u0ECA\n\u011A\x03\u011A\x03\u011A\x03" +
		"\u011B\x03\u011B\x03\u011B\x03\u011B\x03\u011B\x03\u011B\x03\u011B\x05" +
		"\u011B\u0ED5\n\u011B\x03\u011C\x03\u011C\x03\u011C\x03\u011C\x03\u011C" +
		"\x07\u011C\u0EDC\n\u011C\f\u011C\x0E\u011C\u0EDF\v\u011C\x05\u011C\u0EE1" +
		"\n\u011C\x03\u011C\x03\u011C\x03\u011D\x03\u011D\x03\u011D\x03\u011D\x03" +
		"\u011D\x03\u011D\x03\u011D\x03\u011D\x05\u011D\u0EED\n\u011D\x03\u011E" +
		"\x03\u011E\x03\u011E\x03\u011E\x03\u011E\x07\u011E\u0EF4\n\u011E\f\u011E" +
		"\x0E\u011E\u0EF7\v\u011E\x05\u011E\u0EF9\n\u011E\x03\u011E\x03\u011E\x03" +
		"\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03" +
		"\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03" +
		"\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03\u011F\x03" +
		"\u011F\x03\u011F\x05\u011F\u0F14\n\u011F\x03\u0120\x03\u0120\x03\u0120" +
		"\x03\u0120\x03\u0120\x07\u0120\u0F1B\n\u0120\f\u0120\x0E\u0120\u0F1E\v" +
		"\u0120\x05\u0120\u0F20\n\u0120\x03\u0120\x03\u0120\x03\u0121\x03\u0121" +
		"\x03\u0121\x03\u0121\x05\u0121\u0F28\n\u0121\x03\u0122\x03\u0122\x03\u0122" +
		"\x03\u0122\x03\u0122\x07\u0122\u0F2F\n\u0122\f\u0122\x0E\u0122\u0F32\v" +
		"\u0122\x05\u0122\u0F34\n\u0122\x03\u0122\x03\u0122\x03\u0123\x03\u0123" +
		"\x03\u0123\x03\u0123\x03\u0123\x07\u0123\u0F3D\n\u0123\f\u0123\x0E\u0123" +
		"\u0F40\v\u0123\x05\u0123\u0F42\n\u0123\x03\u0123\x03\u0123\x03\u0124\x03" +
		"\u0124\x03\u0124\x03\u0124\x03\u0124\x03\u0124\x05\u0124\u0F4C\n\u0124" +
		"\x03\u0124\x03\u0124\x03\u0125\x03\u0125\x03\u0125\x03\u0125\x03\u0125" +
		"\x07\u0125\u0F55\n\u0125\f\u0125\x0E\u0125\u0F58\v\u0125\x05\u0125\u0F5A" +
		"\n\u0125\x03\u0125\x03\u0125\x03\u0126\x03\u0126\x03\u0126\x05\u0126\u0F61" +
		"\n\u0126\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03" +
		"\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03" +
		"\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x05" +
		"\u0127\u0F77\n\u0127\x03\u0128\x03\u0128\x03\u0128\x03\u0128\x03\u0128" +
		"\x05\u0128\u0F7E\n\u0128\x03\u0129\x03\u0129\x03\u0129\x03\u0129\x03\u0129" +
		"\x03\u0129\x05\u0129\u0F86\n\u0129\x03\u012A\x03\u012A\x03\u012A\x05\u012A" +
		"\u0F8B\n\u012A\x03\u012B\x03\u012B\x03\u012B\x03\u012C\x03\u012C\x03\u012C" +
		"\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x07\u012D\u0F98\n\u012D" +
		"\f\u012D\x0E\u012D\u0F9B\v\u012D\x05\u012D\u0F9D\n\u012D\x03\u012D\x03" +
		"\u012D\x03\u012E\x03\u012E\x03\u012E\x03\u012E\x03\u012E\x05\u012E\u0FA6" +
		"\n\u012E\x03\u012F\x03\u012F\x03\u012F\x03\u0130\x03\u0130\x03\u0130\x03" +
		"\u0131\x03\u0131\x03\u0131\x03\u0132\x03\u0132\x03\u0132\x03\u0133\x03" +
		"\u0133\x05\u0133\u0FB6\n\u0133\x03\u0134\x03\u0134\x03\u0134\x05\u0134" +
		"\u0FBB\n\u0134\x03\u0135\x03\u0135\x03\u0135\x03\u0136\x03\u0136\x03\u0136" +
		"\x07\u0136\u0FC3\n\u0136\f\u0136\x0E\u0136\u0FC6\v\u0136\x03\u0137\x03" +
		"\u0137\x03\u0137\x05\u0137\u0FCB\n\u0137\x03\u0138\x03\u0138\x03\u0138" +
		"\x03\u0139\x03\u0139\x03\u0139\x03\u013A\x03\u013A\x03\u013A\x03\u013B" +
		"\x03\u013B\x03\u013B\x03\u013C\x03\u013C\x03\u013C\x03\u013D\x03\u013D" +
		"\x03\u013D\x03\u013E\x03\u013E\x03\u013E\x03\u013F\x03\u013F\x03\u013F" +
		"\x03\u0140\x03\u0140\x03\u0140\x03\u0141\x03\u0141\x03\u0141\x03\u0142" +
		"\x03\u0142\x03\u0142\x03\u0143\x03\u0143\x03\u0143\x03\u0144\x03\u0144" +
		"\x03\u0144\x03\u0145\x03\u0145\x03\u0145\x03\u0146\x03\u0146\x03\u0146" +
		"\x03\u0147\x03\u0147\x03\u0147\x03\u0148\x03\u0148\x03\u0148\x03\u0149" +
		"\x03\u0149\x03\u0149\x03\u014A\x03\u014A\x03\u014A\x03\u014B\x03\u014B" +
		"\x03\u014B\x03\u014C\x03\u014C\x03\u014C\x03\u014D\x03\u014D\x03\u014D" +
		"\x03\u014E\x03\u014E\x03\u014E\x03\u014F\x03\u014F\x03\u014F\x03\u0150" +
		"\x03\u0150\x03\u0150\x03\u0151\x03\u0151\x03\u0151\x03\u0152\x03\u0152" +
		"\x03\u0152\x03\u0153\x03\u0153\x03\u0153\x03\u0154\x03\u0154\x03\u0154" +
		"\x03\u0155\x03\u0155\x03\u0155\x03\u0156\x03\u0156\x03\u0156\x03\u0157" +
		"\x03\u0157\x03\u0157\x03\u0158\x03\u0158\x03\u0158\x03\u0159\x03\u0159" +
		"\x03\u0159\x03\u015A\x03\u015A\x03\u015A\x03\u015B\x03\u015B\x03\u015B" +
		"\x03\u015C\x03\u015C\x03\u015C\x03\u015D\x03\u015D\x03\u015D\x03\u015E" +
		"\x03\u015E\x03\u015E\x03\u015F\x03\u015F\x03\u015F\x03\u0160\x03\u0160" +
		"\x03\u0160\x03\u0161\x03\u0161\x03\u0161\x03\u0162\x03\u0162\x03\u0162" +
		"\x03\u0163\x03\u0163\x03\u0163\x03\u0164\x03\u0164\x03\u0164\x03\u0165" +
		"\x03\u0165\x03\u0165\x03\u0166\x03\u0166\x03\u0166\x03\u0167\x03\u0167" +
		"\x03\u0167\x03\u0168\x03\u0168\x03\u0168\x03\u0169\x03\u0169\x03\u0169" +
		"\x03\u016A\x03\u016A\x03\u016A\x03\u016B\x03\u016B\x03\u016B\x03\u016C" +
		"\x03\u016C\x03\u016C\x03\u016D\x03\u016D\x03\u016D\x03\u016E\x03\u016E" +
		"\x03\u016E\x03\u016F\x03\u016F\x03\u016F\x03\u0170\x03\u0170\x03\u0170" +
		"\x03\u0171\x03\u0171\x03\u0171\x03\u0172\x03\u0172\x03\u0172\x03\u0173" +
		"\x03\u0173\x03\u0173\x03\u0174\x03\u0174\x03\u0174\x03\u0175\x03\u0175" +
		"\x03\u0175\x03\u0176\x03\u0176\x03\u0176\x03\u0177\x03\u0177\x03\u0177" +
		"\x03\u0178\x03\u0178\x03\u0178\x03\u0179\x03\u0179\x03\u0179\x03\u017A" +
		"\x03\u017A\x03\u017A\x03\u017A\x07\u017A\u1097\n\u017A\f\u017A\x0E\u017A" +
		"\u109A\v\u017A\x03\u017B\x03\u017B\x03\u017B\x03\u017C\x03\u017C\x03\u017C" +
		"\x03\u017D\x03\u017D\x03\u017D\x03\u017E\x03\u017E\x03\u017E\x03\u017F" +
		"\x03\u017F\x03\u017F\x03\u0180\x03\u0180\x03\u0180\x03\u0181\x03\u0181" +
		"\x03\u0181\x03\u0182\x03\u0182\x03\u0182\x03\u0183\x03\u0183\x03\u0183" +
		"\x03\u0184\x03\u0184\x03\u0184\x03\u0185\x03\u0185\x03\u0185\x03\u0186" +
		"\x03\u0186\x03\u0186\x03\u0187\x03\u0187\x03\u0187\x03\u0188\x03\u0188" +
		"\x03\u0188\x03\u0189\x03\u0189\x03\u0189\x03\u018A\x03\u018A\x03\u018A" +
		"\x03\u018B\x03\u018B\x03\u018B\x03\u018C\x03\u018C\x03\u018C\x03\u018D" +
		"\x03\u018D\x03\u018D\x03\u018E\x03\u018E\x03\u018E\x03\u018F\x03\u018F" +
		"\x03\u018F\x03\u018F\x02\x02\x03\xB0\u0190\x02\x02\x04\x02\x06\x02\b\x02" +
		"\n\x02\f\x02\x0E\x02\x10\x02\x12\x02\x14\x02\x16\x02\x18\x02\x1A\x02\x1C" +
		"\x02\x1E\x02 \x02\"\x02$\x02&\x02(\x02*\x02,\x02.\x020\x022\x024\x026" +
		"\x028\x02:\x02<\x02>\x02@\x02B\x02D\x02F\x02H\x02J\x02L\x02N\x02P\x02" +
		"R\x02T\x02V\x02X\x02Z\x02\\\x02^\x02`\x02b\x02d\x02f\x02h\x02j\x02l\x02" +
		"n\x02p\x02r\x02t\x02v\x02x\x02z\x02|\x02~\x02\x80\x02\x82\x02\x84\x02" +
		"\x86\x02\x88\x02\x8A\x02\x8C\x02\x8E\x02\x90\x02\x92\x02\x94\x02\x96\x02" +
		"\x98\x02\x9A\x02\x9C\x02\x9E\x02\xA0\x02\xA2\x02\xA4\x02\xA6\x02\xA8\x02" +
		"\xAA\x02\xAC\x02\xAE\x02\xB0\x02\xB2\x02\xB4\x02\xB6\x02\xB8\x02\xBA\x02" +
		"\xBC\x02\xBE\x02\xC0\x02\xC2\x02\xC4\x02\xC6\x02\xC8\x02\xCA\x02\xCC\x02" +
		"\xCE\x02\xD0\x02\xD2\x02\xD4\x02\xD6\x02\xD8\x02\xDA\x02\xDC\x02\xDE\x02" +
		"\xE0\x02\xE2\x02\xE4\x02\xE6\x02\xE8\x02\xEA\x02\xEC\x02\xEE\x02\xF0\x02" +
		"\xF2\x02\xF4\x02\xF6\x02\xF8\x02\xFA\x02\xFC\x02\xFE\x02\u0100\x02\u0102" +
		"\x02\u0104\x02\u0106\x02\u0108\x02\u010A\x02\u010C\x02\u010E\x02\u0110" +
		"\x02\u0112\x02\u0114\x02\u0116\x02\u0118\x02\u011A\x02\u011C\x02\u011E" +
		"\x02\u0120\x02\u0122\x02\u0124\x02\u0126\x02\u0128\x02\u012A\x02\u012C" +
		"\x02\u012E\x02\u0130\x02\u0132\x02\u0134\x02\u0136\x02\u0138\x02\u013A" +
		"\x02\u013C\x02\u013E\x02\u0140\x02\u0142\x02\u0144\x02\u0146\x02\u0148" +
		"\x02\u014A\x02\u014C\x02\u014E\x02\u0150\x02\u0152\x02\u0154\x02\u0156" +
		"\x02\u0158\x02\u015A\x02\u015C\x02\u015E\x02\u0160\x02\u0162\x02\u0164" +
		"\x02\u0166\x02\u0168\x02\u016A\x02\u016C\x02\u016E\x02\u0170\x02\u0172" +
		"\x02\u0174\x02\u0176\x02\u0178\x02\u017A\x02\u017C\x02\u017E\x02\u0180" +
		"\x02\u0182\x02\u0184\x02\u0186\x02\u0188\x02\u018A\x02\u018C\x02\u018E" +
		"\x02\u0190\x02\u0192\x02\u0194\x02\u0196\x02\u0198\x02\u019A\x02\u019C" +
		"\x02\u019E\x02\u01A0\x02\u01A2\x02\u01A4\x02\u01A6\x02\u01A8\x02\u01AA" +
		"\x02\u01AC\x02\u01AE\x02\u01B0\x02\u01B2\x02\u01B4\x02\u01B6\x02\u01B8" +
		"\x02\u01BA\x02\u01BC\x02\u01BE\x02\u01C0\x02\u01C2\x02\u01C4\x02\u01C6" +
		"\x02\u01C8\x02\u01CA\x02\u01CC\x02\u01CE\x02\u01D0\x02\u01D2\x02\u01D4" +
		"\x02\u01D6\x02\u01D8\x02\u01DA\x02\u01DC\x02\u01DE\x02\u01E0\x02\u01E2" +
		"\x02\u01E4\x02\u01E6\x02\u01E8\x02\u01EA\x02\u01EC\x02\u01EE\x02\u01F0" +
		"\x02\u01F2\x02\u01F4\x02\u01F6\x02\u01F8\x02\u01FA\x02\u01FC\x02\u01FE" +
		"\x02\u0200\x02\u0202\x02\u0204\x02\u0206\x02\u0208\x02\u020A\x02\u020C" +
		"\x02\u020E\x02\u0210\x02\u0212\x02\u0214\x02\u0216\x02\u0218\x02\u021A" +
		"\x02\u021C\x02\u021E\x02\u0220\x02\u0222\x02\u0224\x02\u0226\x02\u0228" +
		"\x02\u022A\x02\u022C\x02\u022E\x02\u0230\x02\u0232\x02\u0234\x02\u0236" +
		"\x02\u0238\x02\u023A\x02\u023C\x02\u023E\x02\u0240\x02\u0242\x02\u0244" +
		"\x02\u0246\x02\u0248\x02\u024A\x02\u024C\x02\u024E\x02\u0250\x02\u0252" +
		"\x02\u0254\x02\u0256\x02\u0258\x02\u025A\x02\u025C\x02\u025E\x02\u0260" +
		"\x02\u0262\x02\u0264\x02\u0266\x02\u0268\x02\u026A\x02\u026C\x02\u026E" +
		"\x02\u0270\x02\u0272\x02\u0274\x02\u0276\x02\u0278\x02\u027A\x02\u027C" +
		"\x02\u027E\x02\u0280\x02\u0282\x02\u0284\x02\u0286\x02\u0288\x02\u028A" +
		"\x02\u028C\x02\u028E\x02\u0290\x02\u0292\x02\u0294\x02\u0296\x02\u0298" +
		"\x02\u029A\x02\u029C\x02\u029E\x02\u02A0\x02\u02A2\x02\u02A4\x02\u02A6" +
		"\x02\u02A8\x02\u02AA\x02\u02AC\x02\u02AE\x02\u02B0\x02\u02B2\x02\u02B4" +
		"\x02\u02B6\x02\u02B8\x02\u02BA\x02\u02BC\x02\u02BE\x02\u02C0\x02\u02C2" +
		"\x02\u02C4\x02\u02C6\x02\u02C8\x02\u02CA\x02\u02CC\x02\u02CE\x02\u02D0" +
		"\x02\u02D2\x02\u02D4\x02\u02D6\x02\u02D8\x02\u02DA\x02\u02DC\x02\u02DE" +
		"\x02\u02E0\x02\u02E2\x02\u02E4\x02\u02E6\x02\u02E8\x02\u02EA\x02\u02EC" +
		"\x02\u02EE\x02\u02F0\x02\u02F2\x02\u02F4\x02\u02F6\x02\u02F8\x02\u02FA" +
		"\x02\u02FC\x02\u02FE\x02\u0300\x02\u0302\x02\u0304\x02\u0306\x02\u0308" +
		"\x02\u030A\x02\u030C\x02\u030E\x02\u0310\x02\u0312\x02\u0314\x02\u0316" +
		"\x02\u0318\x02\u031A\x02\u031C\x02\x02!\x03\x02\x86\x8A\x03\x02\x8B\x8C" +
		"\x05\x02!!--";
	private static readonly _serializedATNSegment2: string =
		"55\x03\x02\x9D\xA0\x03\x02\xA3\xA4\x04\x02!!//\x03\x02\xB7\xB8\x03\x02" +
		"\xC0\xD2\x03\x02\xE4\xE6\x03\x02\xE8\xE9\x03\x02\xEA\xEB\x04\x02\xE3\xE3" +
		"\xEC\xF3\x03\x02\xF4\xF5\x03\x02\xF6\xF8\x03\x02\xF9\xFA\x03\x02\xFB\xFD" +
		"\x03\x02\xFE\xFF\x03\x02\u0101\u0102\x07\x02\xA0\xA0\xC7\xC7\xCA\xCB\xD1" +
		"\xD1\u0103\u0134\x07\x02\xC3\xC3\xC5\xC5\xC8\xC9\xCD\xCD\xD2\xD2\x03\x02" +
		"\u0137\u0138\x03\x02\u0139\u0142\x04\x02\xA3\xA4\u013F\u014C\x03\x02\u014D" +
		"\u0152\x03\x02\u0153\u017F\x03\x02\u0180\u0187\x05\x026=TX]^\x03\x02\u0188" +
		"\u018E\x03\x02\u01AE\u01B1\x04\x02!!--\x03\x02\u01CD\u01CF\x02\u121A\x02" +
		"\u0321\x03\x02\x02\x02\x04\u0328\x03\x02\x02\x02\x06\u032A\x03\x02\x02" +
		"\x02\b\u032E\x03\x02\x02\x02\n\u0333\x03\x02\x02\x02\f\u0347\x03\x02\x02" +
		"\x02\x0E\u0349\x03\x02\x02\x02\x10\u034D\x03\x02\x02\x02\x12\u0352\x03" +
		"\x02\x02\x02\x14\u0357\x03\x02\x02\x02\x16\u0385\x03\x02\x02\x02\x18\u03B6" +
		"\x03\x02\x02\x02\x1A\u03D5\x03\x02\x02\x02\x1C\u03DE\x03\x02\x02\x02\x1E" +
		"\u03E8\x03\x02\x02\x02 \u03F4\x03\x02\x02\x02\"\u0404\x03\x02\x02\x02" +
		"$\u040D\x03\x02\x02\x02&\u041B\x03\x02\x02\x02(\u042C\x03\x02\x02\x02" +
		"*\u0456\x03\x02\x02\x02,\u045A\x03\x02\x02\x02.\u045C\x03\x02\x02\x02" +
		"0\u0468\x03\x02\x02\x022\u046A\x03\x02\x02\x024\u046D\x03\x02\x02\x02" +
		"6\u0470\x03\x02\x02\x028\u0473\x03\x02\x02\x02:\u0478\x03\x02\x02\x02" +
		"<\u047A\x03\x02\x02\x02>\u0489\x03\x02\x02\x02@\u0497\x03\x02\x02\x02" +
		"B\u04A4\x03\x02\x02\x02D\u04A6\x03\x02\x02\x02F\u04AD\x03\x02\x02\x02" +
		"H\u04C2\x03\x02\x02\x02J\u04C4\x03\x02\x02\x02L\u04CD\x03\x02\x02\x02" +
		"N\u04DB\x03\x02\x02\x02P\u04EE\x03\x02\x02\x02R\u0501\x03\x02\x02\x02" +
		"T\u050A\x03\x02\x02\x02V\u0516\x03\x02\x02\x02X\u0522\x03\x02\x02\x02" +
		"Z\u052A\x03\x02\x02\x02\\\u0559\x03\x02\x02\x02^\u0592\x03\x02\x02\x02" +
		"`\u05A1\x03\x02\x02\x02b\u05A4\x03\x02\x02\x02d\u05AB\x03\x02\x02\x02" +
		"f\u05AD\x03\x02\x02\x02h\u05B7\x03\x02\x02\x02j\u05B9\x03\x02\x02\x02" +
		"l\u05C7\x03\x02\x02\x02n\u05CE\x03\x02\x02\x02p\u05D0\x03\x02\x02\x02" +
		"r\u05D3\x03\x02\x02\x02t\u05D9\x03\x02\x02\x02v\u05EC\x03\x02\x02\x02" +
		"x\u05EE\x03\x02\x02\x02z\u05F0\x03\x02\x02\x02|\u05F2\x03\x02\x02\x02" +
		"~\u05F4\x03\x02\x02\x02\x80\u05F6\x03\x02\x02\x02\x82\u0612\x03\x02\x02" +
		"\x02\x84\u0622\x03\x02\x02\x02\x86\u0624\x03\x02\x02\x02\x88\u0631\x03" +
		"\x02\x02\x02\x8A\u0633\x03\x02\x02\x02\x8C\u0635\x03\x02\x02\x02\x8E\u0637" +
		"\x03\x02\x02\x02\x90\u063E\x03\x02\x02\x02\x92\u0641\x03\x02\x02\x02\x94" +
		"\u0662\x03\x02\x02\x02\x96\u0664\x03\x02\x02\x02\x98\u0667\x03\x02\x02" +
		"\x02\x9A\u066D\x03\x02\x02\x02\x9C\u066F\x03\x02\x02\x02\x9E\u0683\x03" +
		"\x02\x02\x02\xA0\u0685\x03\x02\x02\x02\xA2\u0693\x03\x02\x02\x02\xA4\u0699" +
		"\x03\x02\x02\x02\xA6\u069B\x03\x02\x02\x02\xA8\u06AC\x03\x02\x02\x02\xAA" +
		"\u06B1\x03\x02\x02\x02\xAC\u06B3\x03\x02\x02\x02\xAE\u06C1\x03\x02\x02" +
		"\x02\xB0\u06D1\x03\x02\x02\x02\xB2\u06E2\x03\x02\x02\x02\xB4\u06E4\x03" +
		"\x02\x02\x02\xB6\u06F5\x03\x02\x02\x02\xB8\u06F7\x03\x02\x02\x02\xBA\u070D" +
		"\x03\x02\x02\x02\xBC\u070F\x03\x02\x02\x02\xBE\u0711\x03\x02\x02\x02\xC0" +
		"\u071B\x03\x02\x02\x02\xC2\u071D\x03\x02\x02\x02\xC4\u0721\x03\x02\x02" +
		"\x02\xC6\u0726\x03\x02\x02\x02\xC8\u072A\x03\x02\x02\x02\xCA\u072F\x03" +
		"\x02\x02\x02\xCC\u073D\x03\x02\x02\x02\xCE\u073F\x03\x02\x02\x02\xD0\u074A" +
		"\x03\x02\x02\x02\xD2\u074F\x03\x02\x02\x02\xD4\u075E\x03\x02\x02\x02\xD6" +
		"\u0760\x03\x02\x02\x02\xD8\u0765\x03\x02\x02\x02\xDA\u076A\x03\x02\x02" +
		"\x02\xDC\u076C\x03\x02\x02\x02\xDE\u0771\x03\x02\x02\x02\xE0\u0778\x03" +
		"\x02\x02\x02\xE2\u0784\x03\x02\x02\x02\xE4\u0786\x03\x02\x02\x02\xE6\u0788" +
		"\x03\x02\x02\x02\xE8\u0791\x03\x02\x02\x02\xEA\u07A1\x03\x02\x02\x02\xEC" +
		"\u07A3\x03\x02\x02\x02\xEE\u07A5\x03\x02\x02\x02\xF0\u07C5\x03\x02\x02" +
		"\x02\xF2\u07C7\x03\x02\x02\x02\xF4\u07C9\x03\x02\x02\x02\xF6\u07CB\x03" +
		"\x02\x02\x02\xF8\u07CD\x03\x02\x02\x02\xFA\u07D1\x03\x02\x02\x02\xFC\u07D6" +
		"\x03\x02\x02\x02\xFE\u07DD\x03\x02\x02\x02\u0100\u07DF\x03\x02\x02\x02" +
		"\u0102\u07E6\x03\x02\x02\x02\u0104\u07F8\x03\x02\x02\x02\u0106\u07FC\x03" +
		"\x02\x02\x02\u0108\u0803\x03\x02\x02\x02\u010A\u080A\x03\x02\x02\x02\u010C" +
		"\u0812\x03\x02\x02\x02\u010E\u081A\x03\x02\x02\x02\u0110\u0823\x03\x02" +
		"\x02\x02\u0112\u082A\x03\x02\x02\x02\u0114\u0831\x03\x02\x02\x02\u0116" +
		"\u0838\x03\x02\x02\x02\u0118\u083F\x03\x02\x02\x02\u011A\u0846\x03\x02" +
		"\x02\x02\u011C\u084D\x03\x02\x02\x02\u011E\u0854\x03\x02\x02\x02\u0120" +
		"\u085B\x03\x02\x02\x02\u0122\u0862\x03\x02\x02\x02\u0124\u0869\x03\x02" +
		"\x02\x02\u0126\u0870\x03\x02\x02\x02\u0128\u0879\x03\x02\x02\x02\u012A" +
		"\u0882\x03\x02\x02\x02\u012C\u088F\x03\x02\x02\x02\u012E\u0899\x03\x02" +
		"\x02\x02\u0130\u08A3\x03\x02\x02\x02\u0132\u08AA\x03\x02\x02\x02\u0134" +
		"\u08B1\x03\x02\x02\x02\u0136\u08B8\x03\x02\x02\x02\u0138\u08C5\x03\x02" +
		"\x02\x02\u013A\u08D2\x03\x02\x02\x02\u013C\u08DF\x03\x02\x02\x02\u013E" +
		"\u08E4\x03\x02\x02\x02\u0140\u091C\x03\x02\x02\x02\u0142\u0947\x03\x02" +
		"\x02\x02\u0144\u0949\x03\x02\x02\x02\u0146\u094E\x03\x02\x02\x02\u0148" +
		"\u095A\x03\x02\x02\x02\u014A\u0969\x03\x02\x02\x02\u014C\u097A\x03\x02" +
		"\x02\x02\u014E\u098B\x03\x02\x02\x02\u0150\u099C\x03\x02\x02\x02\u0152" +
		"\u09AD\x03\x02\x02\x02\u0154\u09BE\x03\x02\x02\x02\u0156\u09CF\x03\x02" +
		"\x02\x02\u0158\u09DD\x03\x02\x02\x02\u015A\u09EB\x03\x02\x02\x02\u015C" +
		"\u09FC\x03\x02\x02\x02\u015E\u0A07\x03\x02\x02\x02\u0160\u0A12\x03\x02" +
		"\x02\x02\u0162\u0A23\x03\x02\x02\x02\u0164\u0A34\x03\x02\x02\x02\u0166" +
		"\u0A42\x03\x02\x02\x02\u0168\u0A50\x03\x02\x02\x02\u016A\u0A5B\x03\x02" +
		"\x02\x02\u016C\u0A66\x03\x02\x02\x02\u016E\u0A71\x03\x02\x02\x02\u0170" +
		"\u0A7C\x03\x02\x02\x02\u0172\u0A89\x03\x02\x02\x02\u0174\u0A96\x03\x02" +
		"\x02\x02\u0176\u0AA5\x03\x02\x02\x02\u0178\u0AB6\x03\x02\x02\x02\u017A" +
		"\u0AFA\x03\x02\x02\x02\u017C\u0AFC\x03\x02\x02\x02\u017E\u0B18\x03\x02" +
		"\x02\x02\u0180\u0B2F\x03\x02\x02\x02\u0182\u0B44\x03\x02\x02\x02\u0184" +
		"\u0B4F\x03\x02\x02\x02\u0186\u0B5A\x03\x02\x02\x02\u0188\u0B65\x03\x02" +
		"\x02\x02\u018A\u0B70\x03\x02\x02\x02\u018C\u0B7B\x03\x02\x02\x02\u018E" +
		"\u0B86\x03\x02\x02\x02\u0190\u0B91\x03\x02\x02\x02\u0192\u0B9C\x03\x02" +
		"\x02\x02\u0194\u0BA7\x03\x02\x02\x02\u0196\u0BB2\x03\x02\x02\x02\u0198" +
		"\u0BBD\x03\x02\x02\x02\u019A\u0BC8\x03\x02\x02\x02\u019C\u0BD3\x03\x02" +
		"\x02\x02\u019E\u0BDF\x03\x02\x02\x02\u01A0\u0BF1\x03\x02\x02\x02\u01A2" +
		"\u0C08\x03\x02\x02\x02\u01A4\u0C1B\x03\x02\x02\x02\u01A6\u0C1F\x03\x02" +
		"\x02\x02\u01A8\u0C53\x03\x02\x02\x02\u01AA\u0C5E\x03\x02\x02\x02\u01AC" +
		"\u0C70\x03\x02\x02\x02\u01AE\u0C86\x03\x02\x02\x02\u01B0\u0C9C\x03\x02" +
		"\x02\x02\u01B2\u0CA2\x03\x02\x02\x02\u01B4\u0CB0\x03\x02\x02\x02\u01B6" +
		"\u0CC2\x03\x02\x02\x02\u01B8\u0CD0\x03\x02\x02\x02\u01BA\u0CD8\x03\x02" +
		"\x02\x02\u01BC\u0CDC\x03\x02\x02\x02\u01BE\u0CDE\x03\x02\x02\x02\u01C0" +
		"\u0CE0\x03\x02\x02\x02\u01C2\u0CE4\x03\x02\x02\x02\u01C4\u0CE6\x03\x02" +
		"\x02\x02\u01C6\u0CE8\x03\x02\x02\x02\u01C8\u0CEA\x03\x02\x02\x02\u01CA" +
		"\u0CEC\x03\x02\x02\x02\u01CC\u0CEE\x03\x02\x02\x02\u01CE\u0CF0\x03\x02" +
		"\x02\x02\u01D0\u0CF2\x03\x02\x02\x02\u01D2\u0CF4\x03\x02\x02\x02\u01D4" +
		"\u0CF6\x03\x02\x02\x02\u01D6\u0CF8\x03\x02\x02\x02\u01D8\u0CFA\x03\x02" +
		"\x02\x02\u01DA\u0CFC\x03\x02\x02\x02\u01DC\u0CFE\x03\x02\x02\x02\u01DE" +
		"\u0D00\x03\x02\x02\x02\u01E0\u0D02\x03\x02\x02\x02\u01E2\u0D04\x03\x02" +
		"\x02\x02\u01E4\u0D06\x03\x02\x02\x02\u01E6\u0D08\x03\x02\x02\x02\u01E8" +
		"\u0D0A\x03\x02\x02\x02\u01EA\u0D28\x03\x02\x02\x02\u01EC\u0D2A\x03\x02" +
		"\x02\x02\u01EE\u0D38\x03\x02\x02\x02\u01F0\u0D46\x03\x02\x02\x02\u01F2" +
		"\u0D54\x03\x02\x02\x02\u01F4\u0D77\x03\x02\x02\x02\u01F6\u0D79\x03\x02" +
		"\x02\x02\u01F8\u0D94\x03\x02\x02\x02\u01FA\u0D96\x03\x02\x02\x02\u01FC" +
		"\u0DA7\x03\x02\x02\x02\u01FE\u0DA9\x03\x02\x02\x02\u0200\u0DBC\x03\x02" +
		"\x02\x02\u0202\u0DBE\x03\x02\x02\x02\u0204\u0DD8\x03\x02\x02\x02\u0206" +
		"\u0DDA\x03\x02\x02\x02\u0208\u0DEA\x03\x02\x02\x02\u020A\u0DEC\x03\x02" +
		"\x02\x02\u020C\u0E01\x03\x02\x02\x02\u020E\u0E03\x03\x02\x02\x02\u0210" +
		"\u0E15\x03\x02\x02\x02\u0212\u0E17\x03\x02\x02\x02\u0214\u0E29\x03\x02" +
		"\x02\x02\u0216\u0E2B\x03\x02\x02\x02\u0218\u0E3C\x03\x02\x02\x02\u021A" +
		"\u0E3E\x03\x02\x02\x02\u021C\u0E55\x03\x02\x02\x02\u021E\u0E57\x03\x02" +
		"\x02\x02\u0220\u0E6A\x03\x02\x02\x02\u0222\u0E6C\x03\x02\x02\x02\u0224" +
		"\u0E7E\x03\x02\x02\x02\u0226\u0E80\x03\x02\x02\x02\u0228\u0E92\x03\x02" +
		"\x02\x02\u022A\u0E94\x03\x02\x02\x02\u022C\u0EAA\x03\x02\x02\x02\u022E" +
		"\u0EAC\x03\x02\x02\x02\u0230\u0EBD\x03\x02\x02\x02\u0232\u0EBF\x03\x02" +
		"\x02\x02\u0234\u0ED4\x03\x02\x02\x02\u0236\u0ED6\x03\x02\x02\x02\u0238" +
		"\u0EEC\x03\x02\x02\x02\u023A\u0EEE\x03\x02\x02\x02\u023C\u0F13\x03\x02" +
		"\x02\x02\u023E\u0F15\x03\x02\x02\x02\u0240\u0F27\x03\x02\x02\x02\u0242" +
		"\u0F29\x03\x02\x02\x02\u0244\u0F37\x03\x02\x02\x02\u0246\u0F45\x03\x02" +
		"\x02\x02\u0248\u0F4F\x03\x02\x02\x02\u024A\u0F60\x03\x02\x02\x02\u024C" +
		"\u0F76\x03\x02\x02\x02\u024E\u0F7D\x03\x02\x02\x02\u0250\u0F85\x03\x02" +
		"\x02\x02\u0252\u0F8A\x03\x02\x02\x02\u0254\u0F8C\x03\x02\x02\x02\u0256" +
		"\u0F8F\x03\x02\x02\x02\u0258\u0F92\x03\x02\x02\x02\u025A\u0FA5\x03\x02" +
		"\x02\x02\u025C\u0FA7\x03\x02\x02\x02\u025E\u0FAA\x03\x02\x02\x02\u0260" +
		"\u0FAD\x03\x02\x02\x02\u0262\u0FB0\x03\x02\x02\x02\u0264\u0FB5\x03\x02" +
		"\x02\x02\u0266\u0FBA\x03\x02\x02\x02\u0268\u0FBC\x03\x02\x02\x02\u026A" +
		"\u0FBF\x03\x02\x02\x02\u026C\u0FCA\x03\x02\x02\x02\u026E\u0FCC\x03\x02" +
		"\x02\x02\u0270\u0FCF\x03\x02\x02\x02\u0272\u0FD2\x03\x02\x02\x02\u0274" +
		"\u0FD5\x03\x02\x02\x02\u0276\u0FD8\x03\x02\x02\x02\u0278\u0FDB\x03\x02" +
		"\x02\x02\u027A\u0FDE\x03\x02\x02\x02\u027C\u0FE1\x03\x02\x02\x02\u027E" +
		"\u0FE4\x03\x02\x02\x02\u0280\u0FE7\x03\x02\x02\x02\u0282\u0FEA\x03\x02" +
		"\x02\x02\u0284\u0FED\x03\x02\x02\x02\u0286\u0FF0\x03\x02\x02\x02\u0288" +
		"\u0FF3\x03\x02\x02\x02\u028A\u0FF6\x03\x02\x02\x02\u028C\u0FF9\x03\x02" +
		"\x02\x02\u028E\u0FFC\x03\x02\x02\x02\u0290\u0FFF\x03\x02\x02\x02\u0292" +
		"\u1002\x03\x02\x02\x02\u0294\u1005\x03\x02\x02\x02\u0296\u1008\x03\x02" +
		"\x02\x02\u0298\u100B\x03\x02\x02\x02\u029A\u100E\x03\x02\x02\x02\u029C" +
		"\u1011\x03\x02\x02\x02\u029E\u1014\x03\x02\x02\x02\u02A0\u1017\x03\x02" +
		"\x02\x02\u02A2\u101A\x03\x02\x02\x02\u02A4\u101D\x03\x02\x02\x02\u02A6" +
		"\u1020\x03\x02\x02\x02\u02A8\u1023\x03\x02\x02\x02\u02AA\u1026\x03\x02" +
		"\x02\x02\u02AC\u1029\x03\x02\x02\x02\u02AE\u102C\x03\x02\x02\x02\u02B0" +
		"\u102F\x03\x02\x02\x02\u02B2\u1032\x03\x02\x02\x02\u02B4\u1035\x03\x02" +
		"\x02\x02\u02B6\u1038\x03\x02\x02\x02\u02B8\u103B\x03\x02\x02\x02\u02BA" +
		"\u103E\x03\x02\x02\x02\u02BC\u1041\x03\x02\x02\x02\u02BE\u1044\x03\x02" +
		"\x02\x02\u02C0\u1047\x03\x02\x02\x02\u02C2\u104A\x03\x02\x02\x02\u02C4" +
		"\u104D\x03\x02\x02\x02\u02C6\u1050\x03\x02\x02\x02\u02C8\u1053\x03\x02" +
		"\x02\x02\u02CA\u1056\x03\x02\x02\x02\u02CC\u1059\x03\x02\x02\x02\u02CE" +
		"\u105C\x03\x02\x02\x02\u02D0\u105F\x03\x02\x02\x02\u02D2\u1062\x03\x02" +
		"\x02\x02\u02D4\u1065\x03\x02\x02\x02\u02D6\u1068\x03\x02\x02\x02\u02D8" +
		"\u106B\x03\x02\x02\x02\u02DA\u106E\x03\x02\x02\x02\u02DC\u1071\x03\x02" +
		"\x02\x02\u02DE\u1074\x03\x02\x02\x02\u02E0\u1077\x03\x02\x02\x02\u02E2" +
		"\u107A\x03\x02\x02\x02\u02E4\u107D\x03\x02\x02\x02\u02E6\u1080\x03\x02" +
		"\x02\x02\u02E8\u1083\x03\x02\x02\x02\u02EA\u1086\x03\x02\x02\x02\u02EC" +
		"\u1089\x03\x02\x02\x02\u02EE\u108C\x03\x02\x02\x02\u02F0\u108F\x03\x02" +
		"\x02\x02\u02F2\u1092\x03\x02\x02\x02\u02F4\u109B\x03\x02\x02\x02\u02F6" +
		"\u109E\x03\x02\x02\x02\u02F8\u10A1\x03\x02\x02\x02\u02FA\u10A4\x03\x02" +
		"\x02\x02\u02FC\u10A7\x03\x02\x02\x02\u02FE\u10AA\x03\x02\x02\x02\u0300" +
		"\u10AD\x03\x02\x02\x02\u0302\u10B0\x03\x02\x02\x02\u0304\u10B3\x03\x02" +
		"\x02\x02\u0306\u10B6\x03\x02\x02\x02\u0308\u10B9\x03\x02\x02\x02\u030A" +
		"\u10BC\x03\x02\x02\x02\u030C\u10BF\x03\x02\x02\x02\u030E\u10C2\x03\x02" +
		"\x02\x02\u0310\u10C5\x03\x02\x02\x02\u0312\u10C8\x03\x02\x02\x02\u0314" +
		"\u10CB\x03\x02\x02\x02\u0316\u10CE\x03\x02\x02\x02\u0318\u10D1\x03\x02" +
		"\x02\x02\u031A\u10D4\x03\x02\x02\x02\u031C\u10D7\x03\x02\x02\x02\u031E" +
		"\u0320\x05\f\x07\x02\u031F\u031E\x03\x02\x02\x02\u0320\u0323\x03\x02\x02" +
		"\x02\u0321\u031F\x03\x02\x02\x02\u0321\u0322\x03\x02\x02\x02\u0322\u0324" +
		"\x03\x02\x02\x02\u0323\u0321\x03\x02\x02\x02\u0324\u0325\x07\x02\x02\x03" +
		"\u0325\x03\x03\x02\x02\x02\u0326\u0329\x05\b\x05\x02\u0327\u0329\x05\n" +
		"\x06\x02\u0328\u0326\x03\x02\x02\x02\u0328\u0327\x03\x02\x02\x02\u0329" +
		"\x05\x03\x02\x02\x02\u032A\u032B\x07~\x02\x02\u032B\u032C\x07\u01F4\x02" +
		"\x02\u032C\u032D\x07#\x02\x02\u032D\x07\x03\x02\x02\x02\u032E\u032F\x07" +
		"\x7F\x02\x02\u032F\u0330\x07\x80\x02\x02\u0330\u0331\x07\u01F4\x02\x02" +
		"\u0331\u0332\x07#\x02\x02\u0332\t\x03\x02\x02\x02\u0333\u0334\x07\x7F" +
		"\x02\x02\u0334\u0335\x07\x81\x02\x02\u0335\u0336\x07\u01F4\x02\x02\u0336" +
		"\u0337\x07#\x02\x02\u0337\v\x03\x02\x02\x02\u0338\u0348\x05\x06\x04\x02" +
		"\u0339\u0348\x05\x04\x03\x02\u033A\u0348\x05\x0E\b\x02\u033B\u0348\x05" +
		"\x10\t\x02\u033C\u0348\x05\x12\n\x02\u033D\u0348\x05\x14\v\x02\u033E\u0348" +
		"\x05\x16\f\x02\u033F\u0348\x05\x18\r\x02\u0340\u0348\x05\x1A\x0E\x02\u0341" +
		"\u0348\x05\x1C\x0F\x02\u0342\u0348\x05\x1E\x10\x02\u0343\u0348\x05 \x11" +
		"\x02\u0344\u0348\x05\"\x12\x02\u0345\u0348\x05$\x13\x02\u0346\u0348\x05" +
		"&\x14\x02\u0347\u0338\x03\x02\x02\x02\u0347\u0339\x03\x02\x02\x02\u0347" +
		"\u033A\x03\x02\x02\x02\u0347\u033B\x03\x02\x02\x02\u0347\u033C\x03\x02" +
		"\x02\x02\u0347\u033D\x03\x02\x02\x02\u0347\u033E\x03\x02\x02\x02\u0347" +
		"\u033F\x03\x02\x02\x02\u0347\u0340\x03\x02\x02\x02\u0347\u0341\x03\x02" +
		"\x02\x02\u0347\u0342\x03\x02\x02\x02\u0347\u0343\x03\x02\x02\x02\u0347" +
		"\u0344\x03\x02\x02\x02\u0347\u0345\x03\x02\x02\x02\u0347\u0346\x03\x02" +
		"\x02\x02\u0348\r\x03\x02\x02\x02\u0349\u034A\x07\x82\x02\x02\u034A\u034B" +
		"\x07\x83\x02\x02\u034B\u034C\x07#\x02\x02\u034C\x0F\x03\x02\x02\x02\u034D" +
		"\u034E\x07%\x02\x02\u034E\u034F\x07\u01F4\x02\x02\u034F\u0350\x07\x84" +
		"\x02\x02\u0350\u0351\x05\xB0Y\x02\u0351\x11\x03\x02\x02\x02\u0352\u0353" +
		"\x07(\x02\x02\u0353\u0354\x07\u01F4\x02\x02\u0354\u0355\x07\x85\x02\x02" +
		"\u0355\u0356\t\x02\x02\x02\u0356\x13\x03\x02\x02\x02\u0357\u0358\x07$" +
		"\x02\x02\u0358\u0359\x07\u01F4\x02\x02\u0359\u035B\x05\u01BE\xE0\x02\u035A" +
		"\u035C\x05\u01C4\xE3\x02\u035B\u035A\x03\x02\x02\x02\u035B\u035C\x03\x02" +
		"\x02\x02\u035C\u035E\x03\x02\x02\x02\u035D\u035F\x05\u01C6\xE4\x02\u035E" +
		"\u035D\x03\x02\x02\x02\u035E\u035F\x03\x02\x02\x02\u035F\u0361\x03\x02" +
		"\x02\x02\u0360\u0362\x05\u01C8\xE5\x02\u0361\u0360\x03\x02\x02\x02\u0361" +
		"\u0362\x03\x02\x02\x02\u0362\u0364\x03\x02\x02\x02\u0363\u0365\x05\xFC" +
		"\x7F\x02\u0364\u0363\x03\x02\x02\x02\u0364\u0365\x03\x02\x02\x02\u0365" +
		"\u0367\x03\x02\x02\x02\u0366\u0368\x05\u01CC\xE7\x02\u0367\u0366\x03\x02" +
		"\x02\x02\u0367\u0368\x03\x02\x02\x02\u0368\u036A\x03\x02\x02\x02\u0369" +
		"\u036B\x05\xFA~\x02\u036A\u0369\x03\x02\x02\x02\u036A\u036B\x03\x02\x02" +
		"\x02\u036B\u036D\x03\x02\x02\x02\u036C\u036E\x05\u01CE\xE8\x02\u036D\u036C" +
		"\x03\x02\x02\x02\u036D\u036E\x03\x02\x02\x02\u036E\u036F\x03\x02\x02\x02" +
		"\u036F\u0370\x05\u01D0\xE9\x02\u0370\u0375\x05\xB0Y\x02\u0371\u0372\x07" +
		"\u01F2\x02\x02\u0372\u0374\x05n8\x02\u0373\u0371\x03\x02\x02\x02\u0374" +
		"\u0377\x03\x02\x02\x02\u0375\u0373\x03\x02\x02\x02\u0375\u0376\x03\x02" +
		"\x02\x02\u0376\u037C\x03\x02\x02\x02\u0377\u0375\x03\x02\x02\x02\u0378" +
		"\u0379\x07\u01F2\x02\x02\u0379\u037B\x05\x98M\x02\u037A\u0378\x03\x02" +
		"\x02\x02\u037B\u037E\x03\x02\x02\x02\u037C\u037A\x03\x02\x02\x02\u037C" +
		"\u037D\x03\x02\x02\x02\u037D\u0382\x03\x02\x02\x02\u037E\u037C\x03\x02" +
		"\x02\x02\u037F\u0381\x05\xAEX\x02\u0380\u037F\x03\x02\x02\x02\u0381\u0384" +
		"\x03\x02\x02\x02\u0382\u0380\x03\x02\x02\x02\u0382\u0383\x03\x02\x02\x02" +
		"\u0383\x15\x03\x02\x02\x02\u0384\u0382\x03\x02\x02\x02\u0385\u0386\x07" +
		"$\x02\x02\u0386\u0388\x07\u01F4\x02\x02\u0387\u0389\x05\u01C0\xE1\x02" +
		"\u0388\u0387\x03\x02\x02\x02\u0388\u0389\x03\x02\x02\x02\u0389\u038B\x03" +
		"\x02\x02\x02\u038A\u038C\x05\u01C4\xE3\x02\u038B\u038A\x03\x02\x02\x02" +
		"\u038B\u038C\x03\x02\x02\x02\u038C\u038E\x03\x02\x02\x02\u038D\u038F\x05" +
		"\u01C6\xE4\x02\u038E\u038D\x03\x02\x02\x02\u038E\u038F\x03\x02\x02\x02" +
		"\u038F\u0391\x03\x02\x02\x02\u0390\u0392\x05\u01C8\xE5\x02\u0391\u0390" +
		"\x03\x02\x02\x02\u0391\u0392\x03\x02\x02\x02\u0392\u0394\x03\x02\x02\x02" +
		"\u0393\u0395\x05\xFC\x7F\x02\u0394\u0393\x03\x02\x02\x02\u0394\u0395\x03" +
		"\x02\x02\x02\u0395\u0397\x03\x02\x02\x02\u0396\u0398\x05\u01CC\xE7\x02" +
		"\u0397\u0396\x03\x02\x02\x02\u0397\u0398\x03\x02\x02\x02\u0398\u039A\x03" +
		"\x02\x02\x02\u0399\u039B\x05\xFA~\x02\u039A\u0399\x03\x02\x02\x02\u039A" +
		"\u039B\x03\x02\x02\x02\u039B\u039D\x03\x02\x02\x02\u039C\u039E\x05\u01CE" +
		"\xE8\x02\u039D\u039C\x03\x02\x02\x02\u039D\u039E\x03\x02\x02\x02\u039E" +
		"\u039F\x03\x02\x02\x02\u039F\u03A0\x05\u01D0\xE9\x02\u03A0\u03A1\x05\xB0" +
		"Y\x02\u03A1\u03A6\x05v<\x02\u03A2\u03A3\x07\u01F2\x02\x02\u03A3\u03A5" +
		"\x05n8\x02\u03A4\u03A2\x03\x02\x02\x02\u03A5\u03A8\x03\x02\x02\x02\u03A6" +
		"\u03A4\x03\x02\x02\x02\u03A6\u03A7\x03\x02\x02\x02\u03A7\u03AD\x03\x02" +
		"\x02\x02\u03A8\u03A6\x03\x02\x02\x02\u03A9\u03AA\x07\u01F2\x02\x02\u03AA" +
		"\u03AC\x05\x98M\x02\u03AB\u03A9\x03\x02\x02\x02\u03AC\u03AF\x03\x02\x02" +
		"\x02\u03AD\u03AB\x03\x02\x02\x02\u03AD\u03AE\x03\x02\x02\x02\u03AE\u03B3" +
		"\x03\x02\x02\x02\u03AF\u03AD\x03\x02\x02\x02\u03B0\u03B2\x05\xAEX\x02" +
		"\u03B1\u03B0\x03\x02\x02\x02\u03B2\u03B5\x03\x02\x02\x02\u03B3\u03B1\x03" +
		"\x02\x02\x02\u03B3\u03B4\x03\x02\x02\x02\u03B4\x17\x03\x02\x02\x02\u03B5" +
		"\u03B3\x03\x02\x02\x02\u03B6\u03B7\x07$\x02\x02\u03B7\u03B9\x07\u01F4" +
		"\x02\x02\u03B8\u03BA\x05\u01C2\xE2\x02\u03B9\u03B8\x03\x02\x02\x02\u03B9" +
		"\u03BA\x03\x02\x02\x02\u03BA\u03BC\x03\x02\x02\x02\u03BB\u03BD\x05\u01C4" +
		"\xE3\x02\u03BC\u03BB\x03\x02\x02\x02\u03BC\u03BD\x03\x02\x02\x02\u03BD" +
		"\u03BF\x03\x02\x02\x02\u03BE\u03C0\x05\u01C6\xE4\x02\u03BF\u03BE\x03\x02" +
		"\x02\x02\u03BF\u03C0\x03\x02\x02\x02\u03C0\u03C2\x03\x02\x02\x02\u03C1" +
		"\u03C3\x05\u01C8\xE5\x02\u03C2\u03C1\x03\x02\x02\x02\u03C2\u03C3\x03\x02" +
		"\x02\x02\u03C3\u03C5\x03\x02\x02\x02\u03C4\u03C6\x05\xFC\x7F\x02\u03C5" +
		"\u03C4\x03\x02\x02\x02\u03C5\u03C6\x03\x02\x02\x02\u03C6\u03C8\x03\x02" +
		"\x02\x02\u03C7\u03C9\x05\u01CC\xE7\x02\u03C8\u03C7\x03\x02\x02\x02\u03C8" +
		"\u03C9\x03\x02\x02\x02\u03C9\u03CA\x03\x02\x02\x02\u03CA\u03CB\t\x03\x02" +
		"\x02\u03CB\u03CC\x05\xB0Y\x02\u03CC\u03CD\x07\u01F2\x02\x02\u03CD\u03D2" +
		"\x05*\x16\x02\u03CE\u03CF\x07\u01F2\x02\x02\u03CF\u03D1\x05t;\x02\u03D0" +
		"\u03CE\x03\x02\x02\x02\u03D1\u03D4\x03\x02\x02\x02\u03D2\u03D0\x03\x02" +
		"\x02\x02\u03D2\u03D3\x03\x02\x02\x02\u03D3\x19\x03\x02\x02\x02\u03D4\u03D2" +
		"\x03\x02\x02\x02\u03D5\u03D9\x07\x8D\x02\x02\u03D6\u03D8\x05\x98M\x02" +
		"\u03D7\u03D6\x03\x02\x02\x02\u03D8\u03DB\x03\x02\x02\x02\u03D9\u03D7\x03" +
		"\x02\x02\x02\u03D9\u03DA\x03\x02\x02\x02\u03DA\u03DC\x03\x02\x02\x02\u03DB" +
		"\u03D9\x03\x02\x02\x02\u03DC\u03DD\x05(\x15\x02\u03DD\x1B\x03\x02\x02" +
		"\x02\u03DE\u03DF\x07\x8E\x02\x02\u03DF\u03E3\x05(\x15\x02\u03E0\u03E2" +
		"\x05\x98M\x02\u03E1\u03E0\x03\x02\x02\x02\u03E2\u03E5\x03\x02\x02\x02" +
		"\u03E3\u03E1\x03\x02\x02\x02\u03E3\u03E4\x03\x02\x02\x02\u03E4\u03E6\x03" +
		"\x02\x02\x02\u03E5\u03E3\x03\x02\x02\x02\u03E6\u03E7\x05<\x1F\x02\u03E7" +
		"\x1D\x03\x02\x02\x02\u03E8\u03E9\x07\x8F\x02\x02\u03E9\u03EA\x07\'\x02" +
		"\x02\u03EA\u03EB\x07\u01F4\x02\x02\u03EB\u03EF\x07\u01F5\x02\x02\u03EC" +
		"\u03EE\x05\xAEX\x02\u03ED\u03EC\x03\x02\x02\x02\u03EE\u03F1\x03\x02\x02" +
		"\x02\u03EF\u03ED\x03\x02\x02\x02\u03EF\u03F0\x03\x02\x02\x02\u03F0\u03F2" +
		"\x03\x02\x02\x02\u03F1\u03EF\x03\x02\x02\x02\u03F2\u03F3\x07\u01F6\x02" +
		"\x02\u03F3\x1F\x03\x02\x02\x02\u03F4\u03F5\x07)\x02\x02\u03F5\u03F6\x07" +
		"\u01F4\x02\x02\u03F6\u03F7\x07\u01F8\x02\x02\u03F7\u0400\x07\u01F5\x02" +
		"\x02\u03F8\u03FD\x05h5\x02\u03F9\u03FA\x07\u01F2\x02\x02\u03FA\u03FC\x05" +
		"h5\x02\u03FB\u03F9\x03\x02\x02\x02\u03FC\u03FF\x03\x02\x02\x02\u03FD\u03FB" +
		"\x03\x02\x02\x02\u03FD\u03FE\x03\x02\x02\x02\u03FE\u0401\x03\x02\x02\x02" +
		"\u03FF\u03FD\x03\x02\x02\x02\u0400\u03F8\x03\x02\x02\x02\u0400\u0401\x03" +
		"\x02\x02\x02\u0401\u0402\x03\x02\x02\x02\u0402\u0403\x07\u01F6\x02\x02" +
		"\u0403!\x03\x02\x02\x02\u0404\u0405\x07*\x02\x02\u0405\u0407\x07\u01F4" +
		"\x02\x02\u0406\u0408\x05\u01D4\xEB\x02\u0407\u0406\x03\x02\x02\x02\u0407" +
		"\u0408\x03\x02\x02\x02\u0408\u040B\x03\x02\x02\x02\u0409\u040C\x05\x9C" +
		"O\x02\u040A\u040C\x05\u01EA\xF6\x02\u040B\u0409\x03\x02\x02\x02\u040B" +
		"\u040A\x03\x02\x02\x02\u040C#\x03\x02\x02\x02\u040D\u040E\x07\x90\x02" +
		"\x02\u040E\u040F\x05\xA2R\x02\u040F\u0410\x07\u01F2\x02\x02\u0410\u0411" +
		"\x07\u01F5\x02\x02\u0411\u0416\x07!\x02\x02\u0412\u0413\x07\u01F2\x02" +
		"\x02\u0413\u0415\x07!\x02\x02\u0414\u0412\x03\x02\x02\x02\u0415\u0418" +
		"\x03\x02\x02\x02\u0416\u0414\x03\x02\x02\x02\u0416\u0417\x03\x02\x02\x02" +
		"\u0417\u0419\x03\x02\x02\x02\u0418\u0416\x03\x02\x02\x02\u0419\u041A\x07" +
		"\u01F6\x02\x02\u041A%\x03\x02\x02\x02\u041B\u041C\x07\x91\x02\x02\u041C" +
		"\u041D\x07$\x02\x02\u041D\u041E\x07\u01F2\x02\x02\u041E\u041F\x07%\x02" +
		"\x02\u041F\u0420\x07\u01F2\x02\x02\u0420\u0421\x07\u01F5\x02\x02\u0421" +
		"\u0426\x07!\x02\x02\u0422\u0423\x07\u01F2\x02\x02\u0423\u0425\x07!\x02" +
		"\x02\u0424\u0422\x03\x02\x02\x02\u0425\u0428\x03\x02\x02\x02\u0426\u0424" +
		"\x03\x02\x02\x02\u0426\u0427\x03\x02\x02\x02\u0427\u0429\x03\x02\x02\x02" +
		"\u0428\u0426\x03\x02\x02\x02\u0429\u042A\x07\u01F6\x02\x02\u042A\'\x03" +
		"\x02\x02\x02\u042B\u042D\x05\u01C2\xE2\x02\u042C\u042B\x03\x02\x02\x02" +
		"\u042C\u042D\x03\x02\x02\x02\u042D\u042F\x03\x02\x02\x02\u042E\u0430\x05" +
		"\u01C4\xE3\x02\u042F\u042E\x03\x02\x02\x02\u042F\u0430\x03\x02\x02\x02" +
		"\u0430\u0432\x03\x02\x02\x02\u0431\u0433\x05\u01C6\xE4\x02\u0432\u0431" +
		"\x03\x02\x02\x02\u0432\u0433\x03\x02\x02\x02\u0433\u0435\x03\x02\x02\x02" +
		"\u0434\u0436\x05\u01C8\xE5\x02\u0435\u0434\x03\x02\x02\x02\u0435\u0436" +
		"\x03\x02\x02\x02\u0436\u0438\x03\x02\x02\x02\u0437\u0439\x05,\x17\x02" +
		"\u0438\u0437\x03\x02\x02\x02\u0438\u0439\x03\x02\x02\x02\u0439\u043D\x03" +
		"\x02\x02\x02\u043A\u043C\x05:\x1E\x02\u043B\u043A\x03\x02\x02\x02\u043C" +
		"\u043F\x03\x02\x02\x02\u043D\u043B\x03\x02\x02\x02\u043D\u043E\x03\x02" +
		"\x02\x02\u043E\u0440\x03\x02\x02\x02\u043F\u043D\x03\x02\x02\x02\u0440" +
		"\u0441\x05\xB0Y\x02\u0441\u0442\x07$\x02\x02\u0442\u0443\x07\u01F9\x02" +
		"\x02\u0443\u0444\x05\xB6\\\x02\u0444\u0446\x07\u01FA\x02\x02\u0445\u0447" +
		"\x05\u01CC\xE7\x02\u0446\u0445\x03\x02\x02\x02\u0446\u0447\x03\x02\x02" +
		"\x02\u0447\u0449\x03\x02\x02\x02\u0448\u044A\x05\xFA~\x02\u0449\u0448" +
		"\x03\x02\x02\x02\u0449\u044A\x03\x02\x02\x02\u044A\u044E\x03\x02\x02\x02" +
		"\u044B\u044D\x050\x19\x02\u044C\u044B\x03\x02\x02\x02\u044D\u0450\x03" +
		"\x02\x02\x02\u044E\u044C\x03\x02\x02\x02\u044E\u044F\x03\x02\x02\x02\u044F" +
		")\x03\x02\x02\x02\u0450\u044E\x03\x02\x02\x02\u0451\u0457\x05\x96L\x02" +
		"\u0452\u0457\x05\u0100\x81\x02\u0453\u0457\x05\u0102\x82\x02\u0454\u0457" +
		"\x05\u0106\x84\x02\u0455\u0457\x05\u0108\x85\x02\u0456\u0451\x03\x02\x02" +
		"\x02\u0456\u0452\x03\x02\x02\x02\u0456\u0453\x03\x02\x02\x02\u0456\u0454" +
		"\x03\x02\x02\x02\u0456\u0455\x03\x02\x02\x02\u0457+\x03\x02\x02\x02\u0458" +
		"\u045B\x05\u01E2\xF2\x02\u0459\u045B\x05.\x18\x02\u045A\u0458\x03\x02" +
		"\x02\x02\u045A\u0459\x03\x02\x02\x02\u045B-\x03\x02\x02\x02\u045C\u045D" +
		"\x07\x92\x02\x02\u045D\u045E\x07!\x02\x02\u045E/\x03\x02\x02\x02\u045F" +
		"\u0469\x05\xAEX\x02\u0460\u0469\x05p9\x02\u0461\u0469\x05t;\x02\u0462" +
		"\u0469\x05r:\x02\u0463\u0469\x05\xC0a\x02\u0464\u0469\x052\x1A\x02\u0465" +
		"\u0469\x054\x1B\x02\u0466\u0469\x056\x1C\x02\u0467\u0469\x058\x1D\x02" +
		"\u0468\u045F\x03\x02\x02\x02\u0468\u0460\x03\x02\x02\x02\u0468\u0461\x03" +
		"\x02\x02\x02\u0468\u0462\x03\x02\x02\x02\u0468\u0463\x03\x02\x02\x02\u0468" +
		"\u0464\x03\x02\x02\x02\u0468\u0465\x03\x02\x02\x02\u0468\u0466\x03\x02" +
		"\x02\x02\u0468\u0467\x03\x02\x02\x02\u04691\x03\x02\x02\x02\u046A\u046B" +
		"\x07\x93\x02\x02\u046B\u046C\x07#\x02\x02\u046C3\x03\x02\x02\x02\u046D" +
		"\u046E\x07\x94\x02\x02\u046E\u046F";
	private static readonly _serializedATNSegment3: string =
		"\x05\x96L\x02\u046F5\x03\x02\x02\x02\u0470\u0471\x07\x95\x02\x02\u0471" +
		"\u0472\x05\x96L\x02\u04727\x03\x02\x02\x02\u0473\u0474\x07\x96\x02\x02" +
		"\u0474\u0475\x05\x96L\x02\u04759\x03\x02\x02\x02\u0476\u0479\x05\u01D8" +
		"\xED\x02\u0477\u0479\x05\xD4k\x02\u0478\u0476\x03\x02\x02\x02\u0478\u0477" +
		"\x03\x02\x02\x02\u0479;\x03\x02\x02\x02\u047A\u047C\x07\u01F5\x02\x02" +
		"\u047B\u047D\x05> \x02\u047C\u047B\x03\x02\x02\x02\u047D\u047E\x03\x02" +
		"\x02\x02\u047E\u047C\x03\x02\x02\x02\u047E\u047F\x03\x02\x02\x02\u047F" +
		"\u0483\x03\x02\x02\x02\u0480\u0482\x05$\x13\x02\u0481\u0480\x03\x02\x02" +
		"\x02\u0482\u0485\x03\x02\x02\x02\u0483\u0481\x03\x02\x02\x02\u0483\u0484" +
		"\x03\x02\x02\x02\u0484\u0486\x03\x02\x02\x02\u0485\u0483\x03\x02\x02\x02" +
		"\u0486\u0487\x07\u01F6\x02\x02\u0487=\x03\x02\x02\x02\u0488\u048A\x07" +
		"&\x02\x02\u0489\u0488\x03\x02\x02\x02\u0489\u048A\x03\x02\x02\x02\u048A" +
		"\u048E\x03\x02\x02\x02\u048B\u048D\x05@!\x02\u048C\u048B\x03\x02\x02\x02" +
		"\u048D\u0490\x03\x02\x02\x02\u048E\u048C\x03\x02\x02\x02\u048E\u048F\x03" +
		"\x02\x02\x02\u048F\u0491\x03\x02\x02\x02\u0490\u048E\x03\x02\x02\x02\u0491" +
		"\u0492\x05B\"\x02\u0492?\x03\x02\x02\x02\u0493\u0498\x05\u013E\xA0\x02" +
		"\u0494\u0498\x05\u0140\xA1\x02\u0495\u0498\x05\u0142\xA2\x02\u0496\u0498" +
		"\x05\u0146\xA4\x02\u0497\u0493\x03\x02\x02\x02\u0497\u0494\x03\x02\x02" +
		"\x02\u0497\u0495\x03\x02\x02\x02\u0497\u0496\x03\x02\x02\x02\u0498A\x03" +
		"\x02\x02\x02\u0499\u04A5\x05D#\x02\u049A\u04A5\x05F$\x02\u049B\u04A5\x05" +
		"H%\x02\u049C\u04A5\x05J&\x02\u049D\u04A5\x05L\'\x02\u049E\u04A5\x05N(" +
		"\x02\u049F\u04A5\x05P)\x02\u04A0\u04A5\x05R*\x02\u04A1\u04A5\x05T+\x02" +
		"\u04A2\u04A5\x05V,\x02\u04A3\u04A5\x05X-\x02\u04A4\u0499\x03\x02\x02\x02" +
		"\u04A4\u049A\x03\x02\x02\x02\u04A4\u049B\x03\x02\x02\x02\u04A4\u049C\x03" +
		"\x02\x02\x02\u04A4\u049D\x03\x02\x02\x02\u04A4\u049E\x03\x02\x02\x02\u04A4" +
		"\u049F\x03\x02\x02\x02\u04A4\u04A0\x03\x02\x02\x02\u04A4\u04A1\x03\x02" +
		"\x02\x02\u04A4\u04A2\x03\x02\x02\x02\u04A4\u04A3\x03\x02\x02\x02\u04A5" +
		"C\x03\x02\x02\x02\u04A6\u04A7\x07%\x02\x02\u04A7\u04A8\x07\u01F4\x02\x02" +
		"\u04A8\u04A9\x05F$\x02\u04A9E\x03\x02\x02\x02\u04AA\u04AE\x05Z.\x02\u04AB" +
		"\u04AE\x05\\/\x02\u04AC\u04AE\x05^0\x02\u04AD\u04AA\x03\x02\x02\x02\u04AD" +
		"\u04AB\x03\x02\x02\x02\u04AD\u04AC\x03\x02\x02\x02\u04AEG\x03\x02\x02" +
		"\x02\u04AF\u04B0\x07r\x02\x02\u04B0\u04B5\x05\xB2Z\x02\u04B1\u04B2\x07" +
		"\u01F2\x02\x02\u04B2\u04B4\x05\x98M\x02\u04B3\u04B1\x03\x02\x02\x02\u04B4" +
		"\u04B7\x03\x02\x02\x02\u04B5\u04B3\x03\x02\x02\x02\u04B5\u04B6\x03\x02" +
		"\x02\x02\u04B6\u04C3\x03\x02\x02\x02\u04B7\u04B5\x03\x02\x02\x02\u04B8" +
		"\u04B9\x07r\x02\x02\u04B9\u04BA\x05\xE2r\x02\u04BA\u04BF\x05\xA4S\x02" +
		"\u04BB\u04BC\x07\u01F2\x02\x02\u04BC\u04BE\x05\x98M\x02\u04BD\u04BB\x03" +
		"\x02\x02\x02\u04BE\u04C1\x03\x02\x02\x02\u04BF\u04BD\x03\x02\x02\x02\u04BF" +
		"\u04C0\x03\x02\x02\x02\u04C0\u04C3\x03\x02\x02\x02\u04C1\u04BF\x03\x02" +
		"\x02\x02\u04C2\u04AF\x03\x02\x02\x02\u04C2\u04B8\x03\x02\x02\x02\u04C3" +
		"I\x03\x02\x02\x02\u04C4\u04C5\x07s\x02\x02\u04C5\u04CA\x05`1\x02\u04C6" +
		"\u04C7\x07\u01F2\x02\x02\u04C7\u04C9\x05\x98M\x02\u04C8\u04C6\x03\x02" +
		"\x02\x02\u04C9\u04CC\x03\x02\x02\x02\u04CA\u04C8\x03\x02\x02\x02\u04CA" +
		"\u04CB\x03\x02\x02\x02\u04CBK\x03\x02\x02\x02\u04CC\u04CA\x03\x02\x02" +
		"\x02\u04CD\u04CE\x07s\x02\x02\u04CE\u04CF\x07+\x02\x02\u04CF\u04D0\x05" +
		"\xA4S\x02\u04D0\u04D1\x07\u01F2\x02\x02\u04D1\u04D2\x05`1\x02\u04D2\u04D3" +
		"\x07\u01F2\x02\x02\u04D3\u04D8\x05`1\x02\u04D4\u04D5\x07\u01F2\x02\x02" +
		"\u04D5\u04D7\x05\x98M\x02\u04D6\u04D4\x03\x02\x02\x02\u04D7\u04DA\x03" +
		"\x02\x02\x02\u04D8\u04D6\x03\x02\x02\x02\u04D8\u04D9\x03\x02\x02\x02\u04D9" +
		"M\x03\x02\x02\x02\u04DA\u04D8\x03\x02\x02\x02\u04DB\u04DC\x07t\x02\x02" +
		"\u04DC\u04DD\x05\xA2R\x02\u04DD\u04DE\x07\u01F2\x02\x02\u04DE\u04DF\x05" +
		"`1\x02\u04DF\u04E3\x07\u01FB\x02\x02\u04E0\u04E2\x05b2\x02\u04E1\u04E0" +
		"\x03\x02\x02\x02\u04E2\u04E5\x03\x02\x02\x02\u04E3\u04E1\x03\x02\x02\x02" +
		"\u04E3\u04E4\x03\x02\x02\x02\u04E4\u04E6\x03\x02\x02\x02\u04E5\u04E3\x03" +
		"\x02\x02\x02\u04E6\u04EB\x07\u01FC\x02\x02\u04E7\u04E8\x07\u01F2\x02\x02" +
		"\u04E8\u04EA\x05\x98M\x02\u04E9\u04E7\x03\x02\x02\x02\u04EA\u04ED\x03" +
		"\x02\x02\x02\u04EB\u04E9\x03\x02\x02\x02\u04EB\u04EC\x03\x02\x02\x02\u04EC" +
		"O\x03\x02\x02\x02\u04ED\u04EB\x03\x02\x02\x02\u04EE\u04EF\x07u\x02\x02" +
		"\u04EF\u04F0\x05\xA2R\x02\u04F0\u04F1\x07\u01F2\x02\x02\u04F1\u04F7\x07" +
		"\u01FB\x02\x02\u04F2\u04F5\x05`1\x02\u04F3\u04F4\x07\u01F2\x02\x02\u04F4" +
		"\u04F6\x05`1\x02\u04F5\u04F3\x03\x02\x02\x02\u04F5\u04F6\x03\x02\x02\x02" +
		"\u04F6\u04F8\x03\x02\x02\x02\u04F7\u04F2\x03\x02\x02\x02\u04F7\u04F8\x03" +
		"\x02\x02\x02\u04F8\u04F9\x03\x02\x02\x02\u04F9\u04FE\x07\u01FC\x02\x02" +
		"\u04FA\u04FB\x07\u01F2\x02\x02\u04FB\u04FD\x05\x98M\x02\u04FC\u04FA\x03" +
		"\x02\x02\x02\u04FD\u0500\x03\x02\x02\x02\u04FE\u04FC\x03\x02\x02\x02\u04FE" +
		"\u04FF\x03\x02\x02\x02\u04FFQ\x03\x02\x02\x02\u0500\u04FE\x03\x02\x02" +
		"\x02\u0501\u0502\x07v\x02\x02\u0502\u0507\x05\xA2R\x02\u0503\u0504\x07" +
		"\u01F2\x02\x02\u0504\u0506\x05\x98M\x02\u0505\u0503\x03\x02\x02\x02\u0506" +
		"\u0509\x03\x02\x02\x02\u0507\u0505\x03\x02\x02\x02\u0507\u0508\x03\x02" +
		"\x02\x02\u0508S\x03\x02\x02\x02\u0509\u0507\x03\x02\x02\x02\u050A\u050B" +
		"\x07w\x02\x02\u050B\u050C\x07\x97\x02\x02\u050C\u050D\x05\xA4S\x02\u050D" +
		"\u050E\x07\x98\x02\x02\u050E\u0513\x05`1\x02\u050F\u0510\x07\u01F2\x02" +
		"\x02\u0510\u0512\x05\x98M\x02\u0511\u050F\x03\x02\x02\x02\u0512\u0515" +
		"\x03\x02\x02\x02\u0513\u0511\x03\x02\x02\x02\u0513\u0514\x03\x02\x02\x02" +
		"\u0514U\x03\x02\x02\x02\u0515\u0513\x03\x02\x02\x02\u0516\u0517\x07x\x02" +
		"\x02\u0517\u0518\x07\x97\x02\x02\u0518\u0519\x05\xA4S\x02\u0519\u051A" +
		"\x07\x99\x02\x02\u051A\u051F\x05d3\x02\u051B\u051C\x07\u01F2\x02\x02\u051C" +
		"\u051E\x05\x98M\x02\u051D\u051B\x03\x02\x02\x02\u051E\u0521\x03\x02\x02" +
		"\x02\u051F\u051D\x03\x02\x02\x02\u051F\u0520\x03\x02\x02\x02\u0520W\x03" +
		"\x02\x02\x02\u0521\u051F\x03\x02\x02\x02\u0522\u0527\x07y\x02\x02\u0523" +
		"\u0524\x07\u01F2\x02\x02\u0524\u0526\x05\x98M\x02\u0525\u0523\x03\x02" +
		"\x02\x02\u0526\u0529\x03\x02\x02\x02\u0527\u0525\x03\x02\x02\x02\u0527" +
		"\u0528\x03\x02\x02\x02\u0528Y\x03\x02\x02\x02\u0529\u0527\x03\x02\x02" +
		"\x02\u052A\u052C\x07z\x02\x02\u052B\u052D\x05,\x17\x02\u052C\u052B\x03" +
		"\x02\x02\x02\u052C\u052D\x03\x02\x02\x02\u052D\u0531\x03\x02\x02\x02\u052E" +
		"\u0530\x05:\x1E\x02\u052F\u052E\x03\x02\x02\x02\u0530\u0533\x03\x02\x02" +
		"\x02\u0531\u052F\x03\x02\x02\x02\u0531\u0532\x03\x02\x02\x02\u0532\u0535" +
		"\x03\x02\x02\x02\u0533\u0531\x03\x02\x02\x02\u0534\u0536\x05\xFA~\x02" +
		"\u0535\u0534\x03\x02\x02\x02\u0535\u0536\x03\x02\x02\x02\u0536\u0537\x03" +
		"\x02\x02\x02\u0537\u0538\x05\xB0Y\x02\u0538\u0539\x05\xA4S\x02\u0539\u053A" +
		"\x07\u01F9\x02\x02\u053A\u053B\x05\u01B6\xDC\x02\u053B\u053F\x07\u01FA" +
		"\x02\x02\u053C\u053E\x05\xAEX\x02\u053D\u053C\x03\x02\x02\x02\u053E\u0541" +
		"\x03\x02\x02\x02\u053F\u053D\x03\x02\x02\x02\u053F\u0540\x03\x02\x02\x02" +
		"\u0540\u054C\x03\x02\x02\x02\u0541\u053F\x03\x02\x02\x02\u0542\u0546\x07" +
		"\u01FB\x02\x02\u0543\u0544\x05\u01B2\xDA\x02\u0544\u0545\x07\u01F2\x02" +
		"\x02\u0545\u0547\x03\x02\x02\x02\u0546\u0543\x03\x02\x02\x02\u0547\u0548" +
		"\x03\x02\x02\x02\u0548\u0546\x03\x02\x02\x02\u0548\u0549\x03\x02\x02\x02" +
		"\u0549\u054A\x03\x02\x02\x02\u054A\u054B\x07\u01FC\x02\x02\u054B\u054D" +
		"\x03\x02\x02\x02\u054C\u0542\x03\x02\x02\x02\u054C\u054D\x03\x02\x02\x02" +
		"\u054D\u054E\x03\x02\x02\x02\u054E\u054F\x07\x98\x02\x02\u054F\u0550\x05" +
		"`1\x02\u0550\u0551\x07\x99\x02\x02\u0551\u0556\x05`1\x02\u0552\u0553\x07" +
		"\u01F2\x02\x02\u0553\u0555\x05\x98M\x02\u0554\u0552\x03\x02\x02\x02\u0555" +
		"\u0558\x03\x02\x02\x02\u0556\u0554\x03\x02\x02\x02\u0556\u0557\x03\x02" +
		"\x02\x02\u0557[\x03\x02\x02\x02\u0558\u0556\x03\x02\x02\x02\u0559\u055B" +
		"\x07{\x02\x02\u055A\u055C\x05,\x17\x02\u055B\u055A\x03\x02\x02\x02\u055B" +
		"\u055C\x03\x02\x02\x02\u055C\u0560\x03\x02\x02\x02\u055D\u055F\x05:\x1E" +
		"\x02\u055E\u055D\x03\x02\x02\x02\u055F\u0562\x03\x02\x02\x02\u0560\u055E" +
		"\x03\x02\x02\x02\u0560\u0561\x03\x02\x02\x02\u0561\u0564\x03\x02\x02\x02" +
		"\u0562\u0560\x03\x02\x02\x02\u0563\u0565\x05\xFA~\x02\u0564\u0563\x03" +
		"\x02\x02\x02\u0564\u0565\x03\x02\x02\x02\u0565\u0566\x03\x02\x02\x02\u0566" +
		"\u0567\x05\xB0Y\x02\u0567\u0568\x05\xA4S\x02\u0568\u0569\x07\u01F9\x02" +
		"\x02\u0569\u056A\x05\u01B6\xDC\x02\u056A\u056E\x07\u01FA\x02\x02\u056B" +
		"\u056D\x05\xAEX\x02\u056C\u056B\x03\x02\x02\x02\u056D\u0570\x03\x02\x02" +
		"\x02\u056E\u056C\x03\x02\x02\x02\u056E\u056F\x03\x02\x02\x02\u056F\u057B" +
		"\x03\x02\x02\x02\u0570\u056E\x03\x02\x02\x02\u0571\u0575\x07\u01FB\x02" +
		"\x02\u0572\u0573\x05\u01B2\xDA\x02\u0573\u0574\x07\u01F2\x02\x02\u0574" +
		"\u0576\x03\x02\x02\x02\u0575\u0572\x03\x02\x02\x02\u0576\u0577\x03\x02" +
		"\x02\x02\u0577\u0575\x03\x02\x02\x02\u0577\u0578\x03\x02\x02\x02\u0578" +
		"\u0579\x03\x02\x02\x02\u0579\u057A\x07\u01FC\x02\x02\u057A\u057C\x03\x02" +
		"\x02\x02\u057B\u0571\x03\x02\x02\x02\u057B\u057C\x03\x02\x02\x02\u057C" +
		"\u057D\x03\x02\x02\x02\u057D\u057E\x07\x98\x02\x02\u057E\u057F\x05`1\x02" +
		"\u057F\u0588\x07\u01FB\x02\x02\u0580\u0585\x05`1\x02\u0581\u0582\x07\u01F2" +
		"\x02\x02\u0582\u0584\x05`1\x02\u0583\u0581\x03\x02\x02\x02\u0584\u0587" +
		"\x03\x02\x02\x02\u0585\u0583\x03\x02\x02\x02\u0585\u0586\x03\x02\x02\x02" +
		"\u0586\u0589\x03\x02\x02\x02\u0587\u0585\x03\x02\x02\x02\u0588\u0580\x03" +
		"\x02\x02\x02\u0588\u0589\x03\x02\x02\x02\u0589\u058A\x03\x02\x02\x02\u058A" +
		"\u058F\x07\u01FC\x02\x02\u058B\u058C\x07\u01F2\x02\x02\u058C\u058E\x05" +
		"\x98M\x02\u058D\u058B\x03\x02\x02\x02\u058E\u0591\x03\x02\x02\x02\u058F" +
		"\u058D\x03\x02\x02\x02\u058F\u0590\x03\x02\x02\x02\u0590]\x03\x02\x02" +
		"\x02\u0591\u058F\x03\x02\x02\x02\u0592\u0593\x07|\x02\x02\u0593\u0594" +
		"\x07\x9A\x02\x02\u0594\u0595\x05\u01BC\xDF\x02\u0595\u0596\x07\u01FB\x02" +
		"\x02\u0596\u0597\x05f4\x02\u0597\u0598\x07\u01FC\x02\x02\u0598\u0599\x07" +
		"\x99\x02\x02\u0599\u059E\x05d3\x02\u059A\u059B\x07\u01F2\x02\x02\u059B" +
		"\u059D\x05\x98M\x02\u059C\u059A\x03\x02\x02\x02\u059D\u05A0\x03\x02\x02" +
		"\x02\u059E\u059C\x03\x02\x02\x02\u059E\u059F\x03\x02\x02\x02\u059F_\x03" +
		"\x02\x02\x02\u05A0\u059E\x03\x02\x02\x02\u05A1\u05A2\x07\x9B\x02\x02\u05A2" +
		"\u05A3\x07%\x02\x02\u05A3a\x03\x02\x02\x02\u05A4\u05A5\x05\x96L\x02\u05A5" +
		"\u05A6\x07\u01F2\x02\x02\u05A6\u05A7\x05`1\x02\u05A7c\x03\x02\x02\x02" +
		"\u05A8\u05A9\x07\x98\x02\x02\u05A9\u05AC\x07\x9C\x02\x02\u05AA\u05AC\x05" +
		"`1\x02\u05AB\u05A8\x03\x02\x02\x02\u05AB\u05AA\x03\x02\x02\x02\u05ACe" +
		"\x03\x02\x02\x02\u05AD\u05B2\x05`1\x02\u05AE\u05AF\x07\u01F2\x02\x02\u05AF" +
		"\u05B1\x05`1\x02\u05B0\u05AE\x03\x02\x02\x02\u05B1\u05B4\x03\x02\x02\x02" +
		"\u05B2\u05B0\x03\x02\x02\x02\u05B2\u05B3\x03\x02\x02\x02\u05B3g\x03\x02" +
		"\x02\x02\u05B4\u05B2\x03\x02\x02\x02\u05B5\u05B8\x07*\x02\x02\u05B6\u05B8" +
		"\x05j6\x02\u05B7\u05B5\x03\x02\x02\x02\u05B7\u05B6\x03\x02\x02\x02\u05B8" +
		"i\x03\x02\x02\x02\u05B9\u05BA\x07\x03\x02\x02\u05BA\u05C3\x07\u01F9\x02" +
		"\x02\u05BB\u05C0\x05l7\x02\u05BC\u05BD\x07\u01F2\x02\x02\u05BD\u05BF\x05" +
		"l7\x02\u05BE\u05BC\x03\x02\x02\x02\u05BF\u05C2\x03\x02\x02\x02\u05C0\u05BE" +
		"\x03\x02\x02\x02\u05C0\u05C1\x03\x02\x02\x02\u05C1\u05C4\x03\x02\x02\x02" +
		"\u05C2\u05C0\x03\x02\x02\x02\u05C3\u05BB\x03\x02\x02\x02\u05C3\u05C4\x03" +
		"\x02\x02\x02\u05C4\u05C5\x03\x02\x02\x02\u05C5\u05C6\x07\u01FA\x02\x02" +
		"\u05C6k\x03\x02\x02\x02\u05C7\u05C8\t\x04\x02\x02\u05C8m\x03\x02\x02\x02" +
		"\u05C9\u05CF\x05p9\x02\u05CA\u05CF\x05t;\x02\u05CB\u05CF\x05r:\x02\u05CC" +
		"\u05CF\x05\xC0a\x02\u05CD\u05CF\t\x05\x02\x02\u05CE\u05C9\x03\x02\x02" +
		"\x02\u05CE\u05CA\x03\x02\x02\x02\u05CE\u05CB\x03\x02\x02\x02\u05CE\u05CC" +
		"\x03\x02\x02\x02\u05CE\u05CD\x03\x02\x02\x02\u05CFo\x03\x02\x02\x02\u05D0" +
		"\u05D1\x07\xA1\x02\x02\u05D1\u05D2\x07#\x02\x02\u05D2q\x03\x02\x02\x02" +
		"\u05D3\u05D7\x07\x85\x02\x02\u05D4\u05D5\x07\u01F9\x02\x02\u05D5\u05D6" +
		"\x07(\x02\x02\u05D6\u05D8\x07\u01FA\x02\x02\u05D7\u05D4\x03\x02\x02\x02" +
		"\u05D7\u05D8\x03\x02\x02\x02\u05D8s\x03\x02\x02\x02\u05D9\u05DA\x07\xA2" +
		"\x02\x02\u05DA\u05DB\x07#\x02\x02\u05DBu\x03\x02\x02\x02\u05DC\u05ED\x05" +
		"x=\x02\u05DD\u05ED\x05z>\x02\u05DE\u05ED\x05|?\x02\u05DF\u05ED\x05~@\x02" +
		"\u05E0\u05ED\x05\x80A\x02\u05E1\u05ED\x05\x82B\x02\u05E2\u05ED\x05\x84" +
		"C\x02\u05E3\u05ED\x05\x86D\x02\u05E4\u05ED\x05\x88E\x02\u05E5\u05ED\x07" +
		"$\x02\x02\u05E6\u05ED\x05\x8AF\x02\u05E7\u05ED\x05\x8CG\x02\u05E8\u05ED" +
		"\x05\x8EH\x02\u05E9\u05ED\x05\x90I\x02\u05EA\u05ED\x05\x92J\x02\u05EB" +
		"\u05ED\x05\x94K\x02\u05EC\u05DC\x03\x02\x02\x02\u05EC\u05DD\x03\x02\x02" +
		"\x02\u05EC\u05DE\x03\x02\x02\x02\u05EC\u05DF\x03\x02\x02\x02\u05EC\u05E0" +
		"\x03\x02\x02\x02\u05EC\u05E1\x03\x02\x02\x02\u05EC\u05E2\x03\x02\x02\x02" +
		"\u05EC\u05E3\x03\x02\x02\x02\u05EC\u05E4\x03\x02\x02\x02\u05EC\u05E5\x03" +
		"\x02\x02\x02\u05EC\u05E6\x03\x02\x02\x02\u05EC\u05E7\x03\x02\x02\x02\u05EC" +
		"\u05E8\x03\x02\x02\x02\u05EC\u05E9\x03\x02\x02\x02\u05EC\u05EA\x03\x02" +
		"\x02\x02\u05EC\u05EB\x03\x02\x02\x02\u05EDw\x03\x02\x02\x02\u05EE\u05EF" +
		"\t\x06\x02\x02\u05EFy\x03\x02\x02\x02\u05F0\u05F1\x07!\x02\x02\u05F1{" +
		"\x03\x02\x02\x02\u05F2\u05F3\x07\"\x02\x02\u05F3}\x03\x02\x02\x02\u05F4" +
		"\u05F5\x07\xA5\x02\x02\u05F5\x7F\x03\x02\x02\x02\u05F6\u05F7\x07\xA6\x02" +
		"\x02\u05F7\x81\x03\x02\x02\x02\u05F8\u0601\x07\u01F5\x02\x02\u05F9\u05FE" +
		"\x05\x96L\x02\u05FA\u05FB\x07\u01F2\x02\x02\u05FB\u05FD\x05\x96L\x02\u05FC" +
		"\u05FA\x03\x02\x02\x02\u05FD\u0600\x03\x02\x02\x02\u05FE\u05FC\x03\x02" +
		"\x02\x02\u05FE\u05FF\x03\x02\x02\x02\u05FF\u0602\x03\x02\x02\x02\u0600" +
		"\u05FE\x03\x02\x02\x02\u0601\u05F9\x03\x02\x02\x02\u0601\u0602\x03\x02" +
		"\x02\x02\u0602\u0603\x03\x02\x02\x02\u0603\u0613\x07\u01F6\x02\x02\u0604" +
		"\u0605\x07\u01FE\x02\x02\u0605\u060E\x07\u01F5\x02\x02\u0606\u060B\x05" +
		"\x96L\x02\u0607\u0608\x07\u01F2\x02\x02\u0608\u060A\x05\x96L\x02\u0609" +
		"\u0607\x03\x02\x02\x02\u060A\u060D\x03\x02\x02\x02\u060B\u0609\x03\x02" +
		"\x02\x02\u060B\u060C\x03\x02\x02\x02\u060C\u060F\x03\x02\x02\x02\u060D" +
		"\u060B\x03\x02\x02\x02\u060E\u0606\x03\x02\x02\x02\u060E\u060F\x03\x02" +
		"\x02\x02\u060F\u0610\x03\x02\x02\x02\u0610\u0611\x07\u01F6\x02\x02\u0611" +
		"\u0613\x07\u01FF\x02\x02\u0612\u05F8\x03\x02\x02\x02\u0612\u0604\x03\x02" +
		"\x02\x02\u0613\x83\x03\x02\x02\x02\u0614\u0615\x07\xA7\x02\x02\u0615\u0623" +
		"\x07#\x02\x02\u0616\u061F\x07\u01FB\x02\x02\u0617\u061C\x05\x96L\x02\u0618" +
		"\u0619\x07\u01F2\x02\x02\u0619\u061B\x05\x96L\x02\u061A\u0618\x03\x02" +
		"\x02\x02\u061B\u061E\x03\x02\x02\x02\u061C\u061A\x03\x02\x02\x02\u061C" +
		"\u061D\x03\x02\x02\x02\u061D\u0620\x03\x02\x02\x02\u061E\u061C\x03\x02" +
		"\x02\x02\u061F\u0617\x03\x02\x02\x02\u061F\u0620\x03\x02\x02\x02\u0620" +
		"\u0621\x03\x02\x02\x02\u0621\u0623\x07\u01FC\x02\x02\u0622\u0614\x03\x02" +
		"\x02\x02\u0622\u0616\x03\x02\x02\x02\u0623\x85\x03\x02\x02\x02\u0624\u062D" +
		"\x07\u01FE\x02\x02\u0625\u062A\x05\x96L\x02\u0626\u0627\x07\u01F2\x02" +
		"\x02\u0627\u0629\x05\x96L\x02\u0628\u0626\x03\x02\x02\x02\u0629\u062C" +
		"\x03\x02\x02\x02\u062A\u0628\x03\x02\x02\x02\u062A\u062B\x03\x02\x02\x02" +
		"\u062B\u062E\x03\x02\x02\x02\u062C\u062A\x03\x02\x02\x02\u062D\u0625\x03" +
		"\x02\x02\x02\u062D\u062E\x03\x02\x02\x02\u062E\u062F\x03\x02\x02\x02\u062F" +
		"\u0630\x07\u01FF\x02\x02\u0630\x87\x03\x02\x02\x02\u0631\u0632\x07\xA8" +
		"\x02\x02\u0632\x89\x03\x02\x02\x02\u0633\u0634\x07\xA9\x02\x02\u0634\x8B" +
		"\x03\x02\x02\x02\u0635\u0636\x07\xAA\x02\x02\u0636\x8D\x03\x02\x02\x02" +
		"\u0637\u0638\x07\xAB\x02\x02\u0638\u0639\x07\u01F9\x02\x02\u0639\u063A" +
		"\x07$\x02\x02\u063A\u063B\x07\u01F2\x02\x02\u063B\u063C\x07%\x02\x02\u063C" +
		"\u063D\x07\u01FA\x02\x02\u063D\x8F\x03\x02\x02\x02\u063E\u063F\x07\xAC" +
		"\x02\x02\u063F\u0640\x07$\x02\x02\u0640\x91\x03\x02\x02\x02\u0641\u0642" +
		"\x07\xAD\x02\x02\u0642\u0643\x07$\x02\x02\u0643\x93\x03\x02\x02\x02\u0644" +
		"\u0663\x05\u013C\x9F\x02\u0645\u0663\x05\u0136\x9C\x02\u0646\u0663\x05" +
		"\u0138\x9D\x02\u0647\u0663\x05\u013A\x9E\x02\u0648\u0663\x05\u012A\x96" +
		"\x02\u0649\u0663\x05\u012C\x97\x02\u064A\u0663\x05\u012E\x98\x02\u064B" +
		"\u0663\x05\u0130\x99\x02\u064C\u0663\x05\u0132\x9A\x02\u064D\u0663\x05" +
		"\u0134\x9B\x02\u064E\u0663\x05\u0124\x93\x02\u064F\u0663\x05\u0126\x94" +
		"\x02\u0650\u0663\x05\u0128\x95\x02\u0651\u0663\x05\u0102\x82\x02\u0652" +
		"\u0663\x05\u0110\x89\x02\u0653\u0663\x05\u0112\x8A\x02\u0654\u0663\x05" +
		"\u0114\x8B\x02\u0655\u0663\x05\u0116\x8C\x02\u0656\u0663\x05\u0118\x8D" +
		"\x02\u0657\u0663\x05\u011A\x8E\x02\u0658\u0663\x05\u011C\x8F\x02\u0659" +
		"\u0663\x05\u011E\x90\x02\u065A\u0663\x05\u0120\x91\x02\u065B\u0663\x05" +
		"\u0122\x92\x02\u065C\u0663\x05\u0108\x85\x02\u065D\u0663\x05\u0100\x81" +
		"\x02\u065E\u0663\x05\u0106\x84\x02\u065F\u0663\x05\u010A\x86\x02\u0660" +
		"\u0663\x05\u010C\x87\x02\u0661\u0663\x05\u010E\x88\x02\u0662\u0644\x03" +
		"\x02\x02\x02\u0662\u0645\x03\x02\x02\x02\u0662\u0646\x03\x02\x02\x02\u0662" +
		"\u0647\x03\x02\x02\x02\u0662\u0648\x03\x02\x02\x02\u0662\u0649\x03\x02" +
		"\x02\x02\u0662\u064A\x03\x02\x02\x02\u0662\u064B\x03\x02\x02\x02\u0662" +
		"\u064C\x03\x02\x02\x02\u0662\u064D\x03\x02\x02\x02\u0662\u064E\x03\x02" +
		"\x02\x02\u0662\u064F\x03\x02\x02\x02\u0662\u0650\x03\x02\x02\x02\u0662" +
		"\u0651\x03\x02\x02\x02\u0662\u0652\x03\x02\x02\x02\u0662\u0653\x03\x02" +
		"\x02\x02\u0662\u0654\x03\x02\x02\x02\u0662\u0655\x03\x02\x02\x02\u0662" +
		"\u0656\x03\x02\x02\x02\u0662\u0657\x03\x02\x02\x02\u0662\u0658\x03\x02" +
		"\x02\x02\u0662\u0659\x03\x02\x02\x02\u0662\u065A\x03\x02\x02\x02\u0662" +
		"\u065B\x03\x02\x02\x02\u0662\u065C\x03\x02\x02\x02\u0662\u065D\x03\x02" +
		"\x02\x02\u0662\u065E\x03\x02\x02\x02\u0662\u065F\x03\x02\x02\x02\u0662" +
		"\u0660\x03\x02\x02\x02\u0662\u0661\x03\x02\x02\x02\u0663\x95\x03\x02\x02" +
		"\x02\u0664\u0665\x05\xE0q\x02\u0665\u0666\x05v<\x02\u0666\x97\x03\x02" +
		"\x02\x02\u0667\u0668\x07)\x02\x02\u0668\u0669\x05\x9AN\x02\u0669\x99\x03" +
		"\x02\x02\x02\u066A\u066E\x05\x9CO\x02\u066B\u066E\x07*\x02\x02\u066C\u066E" +
		"\x05\u01EA\xF6\x02\u066D\u066A\x03\x02\x02\x02\u066D\u066B\x03\x02\x02" +
		"\x02\u066D\u066C\x03\x02\x02\x02\u066E\x9B\x03\x02\x02\x02\u066F\u0670" +
		"\x07\u01F8\x02\x02\u0670\u0679\x07\u01F5\x02\x02\u0671\u0676\x05\u0264" +
		"\u0133\x02\u0672\u0673\x07\u01F2\x02\x02\u0673\u0675\x05\u0264\u0133\x02" +
		"\u0674\u0672\x03\x02\x02\x02\u0675\u0678\x03\x02\x02\x02\u0676\u0674\x03" +
		"\x02\x02\x02\u0676\u0677\x03\x02\x02\x02\u0677\u067A\x03\x02\x02\x02\u0678" +
		"\u0676\x03\x02\x02\x02\u0679\u0671\x03\x02\x02\x02\u0679\u067A\x03\x02" +
		"\x02\x02\u067A\u067B\x03\x02\x02\x02\u067B\u067C\x07\u01F6\x02\x02\u067C" +
		"\x9D\x03\x02\x02\x02\u067D\u0684\x05\xA2R\x02\u067E\u0684\x05\xA8U\x02" +
		"\u067F\u0684\x05\x9CO\x02\u0680\u0684\x07*\x02\x02\u0681\u0684\x05\xA0" +
		"Q\x02\u0682\u0684\x05\u01EA\xF6\x02\u0683\u067D\x03\x02\x02\x02\u0683" +
		"\u067E\x03\x02\x02\x02\u0683\u067F\x03\x02\x02\x02\u0683\u0680\x03\x02" +
		"\x02\x02\u0683\u0681\x03\x02\x02\x02\u0683\u0682\x03\x02\x02\x02\u0684" +
		"\x9F\x03\x02\x02\x02\u0685\u0686\x07\x04\x02\x02\u0686\u068F\x07\u01F9" +
		"\x02\x02\u0687\u068C\x05\xA2R\x02\u0688\u0689\x07\u01F2\x02\x02\u0689" +
		"\u068B\x05\xA2R\x02\u068A\u0688\x03\x02\x02\x02\u068B\u068E\x03\x02\x02" +
		"\x02\u068C\u068A\x03\x02\x02\x02\u068C\u068D\x03\x02\x02\x02\u068D\u0690" +
		"\x03\x02\x02\x02\u068E\u068C\x03\x02\x02\x02\u068F\u0687\x03\x02\x02\x02" +
		"\u068F\u0690\x03\x02\x02\x02\u0690\u0691\x03\x02\x02\x02\u0691\u0692\x07" +
		"\u01FA\x02\x02\u0692\xA1\x03\x02\x02\x02\u0693\u0694\x05\xE0q\x02\u0694" +
		"\u0695\x05\xA4S\x02\u0695\xA3\x03\x02\x02\x02\u0696\u069A\x05v<\x02\u0697" +
		"\u069A\x07%\x02\x02\u0698\u069A\x05\xA6T\x02\u0699\u0696\x03\x02\x02\x02" +
		"\u0699\u0697\x03\x02\x02\x02\u0699\u0698\x03\x02\x02\x02\u069A\xA5\x03" +
		"\x02\x02\x02\u069B\u069D\x07\x83\x02\x02\u069C\u069E\x07\xAE\x02\x02\u069D" +
		"\u069C\x03\x02\x02\x02\u069D\u069E\x03\x02\x02\x02\u069E\u06A0\x03\x02" +
		"\x02\x02\u069F\u06A1\x07\xAF\x02\x02\u06A0\u069F\x03\x02\x02\x02\u06A0" +
		"\u06A1\x03\x02\x02\x02\u06A1\u06A3\x03\x02\x02\x02\u06A2\u06A4\x07\xB0" +
		"\x02\x02\u06A3\u06A2\x03\x02\x02\x02\u06A3\u06A4\x03\x02\x02\x02\u06A4" +
		"\u06A6\x03\x02\x02\x02\u06A5\u06A7\x07\x99\x02\x02\u06A6\u06A5\x03\x02" +
		"\x02\x02\u06A6\u06A7\x03\x02\x02\x02\u06A7\u06A8\x03\x02\x02\x02\u06A8" +
		"\u06A9\x07#\x02\x02\u06A9\u06AA\x07\u01F2\x02\x02\u06AA\u06AB\x07#\x02" +
		"\x02\u06AB\xA7\x03\x02\x02\x02\u06AC\u06AD\x07\u01F8\x02\x02\u06AD\u06AE" +
		"\x07#\x02\x02\u06AE\xA9\x03\x02\x02\x02\u06AF\u06B2\x07!\x02\x02\u06B0" +
		"\u06B2\x05\u0264\u0133\x02\u06B1\u06AF\x03\x02\x02\x02\u06B1\u06B0\x03" +
		"\x02\x02\x02\u06B2\xAB\x03\x02\x02\x02\u06B3\u06B4\t\x07\x02\x02\u06B4" +
		"\xAD\x03\x02\x02\x02\u06B5\u06C2\x05\xBC_\x02\u06B6\u06C2\x05\xBE`\x02" +
		"\u06B7\u06C2\x07\'\x02\x02\u06B8\u06C2\x05\xC2b\x02\u06B9\u06C2\x05\xC4" +
		"c\x02\u06BA\u06C2\x05\xC6d\x02\u06BB\u06C2\x05\xC8e\x02\u06BC\u06C2\x05" +
		"\xCAf\x02\u06BD\u06C2\x05\u01D2\xEA\x02\u06BE\u06C2\x05\xDCo\x02\u06BF" +
		"\u06C2\x05\xCCg\x02\u06C0\u06C2\x05\xCEh\x02\u06C1\u06B5\x03\x02\x02\x02" +
		"\u06C1\u06B6\x03\x02\x02\x02\u06C1\u06B7\x03\x02\x02\x02\u06C1\u06B8\x03" +
		"\x02\x02\x02\u06C1\u06B9\x03\x02\x02\x02\u06C1\u06BA\x03\x02\x02\x02\u06C1" +
		"\u06BB\x03\x02\x02\x02\u06C1\u06BC\x03\x02\x02\x02\u06C1\u06BD\x03\x02" +
		"\x02\x02\u06C1\u06BE\x03\x02\x02\x02\u06C1\u06BF\x03\x02\x02\x02\u06C1" +
		"\u06C0\x03\x02\x02\x02\u06C2\xAF\x03\x02\x02\x02\u06C3\u06C4\bY\x01\x02" +
		"\u06C4\u06D2\x05\xB2Z\x02\u06C5\u06D2\x05\xB4[\x02\u06C6\u06D2\x05\xE4" +
		"s\x02\u06C7\u06D2\x05\xE6t\x02\u06C8\u06D2\x05\xF8}\x02\u06C9\u06D2\x05" +
		"\xEAv\x02\u06CA\u06D2\x05\xECw\x02\u06CB\u06D2\x05\xEEx\x02\u06CC\u06D2" +
		"\x05\xF0y\x02\u06CD\u06D2\x05\xF2z\x02\u06CE\u06D2\x05\xF4{\x02\u06CF" +
		"\u06D2\x05\xF6|\x02\u06D0\u06D2\x05\xFE\x80\x02\u06D1\u06C3\x03\x02\x02" +
		"\x02\u06D1\u06C5\x03\x02\x02\x02\u06D1\u06C6\x03\x02\x02\x02\u06D1\u06C7" +
		"\x03\x02\x02\x02\u06D1\u06C8\x03\x02\x02\x02\u06D1\u06C9\x03\x02\x02\x02" +
		"\u06D1\u06CA\x03\x02\x02\x02\u06D1\u06CB\x03\x02\x02\x02\u06D1\u06CC\x03" +
		"\x02\x02\x02\u06D1\u06CD\x03\x02\x02\x02\u06D1\u06CE\x03\x02\x02\x02\u06D1" +
		"\u06CF\x03\x02\x02\x02\u06D1\u06D0\x03\x02\x02\x02\u06D2\u06DF\x03\x02" +
		"\x02\x02\u06D3\u06D4\f\x0F\x02\x02\u06D4\u06D5\x07\u01F9\x02\x02\u06D5" +
		"\u06D6\x05\xB6\\\x02\u06D6\u06D7\x07\u01FA\x02\x02\u06D7\u06DE\x03\x02" +
		"\x02\x02\u06D8\u06DA\f\f\x02\x02\u06D9\u06DB\x05\xFA~\x02\u06DA\u06D9" +
		"\x03\x02\x02\x02\u06DA\u06DB\x03\x02\x02\x02\u06DB\u06DC\x03\x02\x02\x02" +
		"\u06DC\u06DE\x07\u0200\x02\x02\u06DD\u06D3\x03\x02\x02\x02\u06DD\u06D8" +
		"\x03\x02\x02\x02\u06DE\u06E1\x03\x02\x02\x02\u06DF\u06DD\x03\x02\x02\x02" +
		"\u06DF\u06E0\x03\x02\x02\x02\u06E0\xB1\x03\x02\x02\x02\u06E1\u06DF\x03" +
		"\x02\x02\x02\u06E2\u06E3\x07\xB1\x02\x02\u06E3\xB3\x03\x02\x02\x02\u06E4" +
		"\u06E5\x07\xB2\x02\x02\u06E5\xB5\x03\x02\x02\x02\u06E6\u06E8\x07\u01FD" +
		"\x02\x02\u06E7\u06E6\x03\x02\x02\x02\u06E7\u06E8\x03\x02\x02\x02\u06E8" +
		"\u06F6\x03\x02\x02\x02\u06E9\u06EE\x05\xB8]\x02\u06EA\u06EB\x07\u01F2" +
		"\x02\x02\u06EB\u06ED\x05\xB8]\x02\u06EC\u06EA\x03\x02\x02\x02\u06ED\u06F0" +
		"\x03\x02\x02\x02\u06EE\u06EC\x03\x02\x02\x02\u06EE\u06EF\x03\x02\x02\x02" +
		"\u06EF\u06F3\x03\x02\x02\x02\u06F0\u06EE\x03\x02\x02\x02\u06F1\u06F2\x07" +
		"\u01F2\x02\x02\u06F2\u06F4\x07\u01FD\x02\x02\u06F3\u06F1\x03\x02\x02\x02" +
		"\u06F3\u06F4\x03\x02\x02\x02\u06F4\u06F6\x03\x02\x02\x02\u06F5\u06E7\x03" +
		"\x02\x02\x02\u06F5\u06E9\x03\x02\x02\x02\u06F6\xB7\x03\x02\x02\x02\u06F7" +
		"\u06FB\x05\xB0Y\x02\u06F8\u06FA\x05\xBA^\x02\u06F9\u06F8\x03\x02\x02\x02" +
		"\u06FA\u06FD\x03\x02\x02\x02\u06FB\u06F9\x03\x02\x02\x02\u06FB\u06FC\x03" +
		"\x02\x02\x02\u06FC\u06FF\x03\x02\x02\x02\u06FD\u06FB\x03\x02\x02\x02\u06FE" +
		"\u0700\x07%\x02\x02\u06FF\u06FE\x03\x02\x02\x02\u06FF\u0700\x03\x02\x02" +
		"\x02\u0700\xB9\x03\x02\x02\x02\u0701\u070E\x05\xBC_\x02\u0702\u070E\x05" +
		"\xBE`\x02\u0703\u070E\x05\xC0a\x02\u0704\u070E\x05\xC4c\x02\u0705\u070E" +
		"\x05\xD0i\x02\u0706\u070E\x05\xD2j\x02\u0707\u070E\x05\xD4k\x02\u0708" +
		"\u070E\x05\xD6l\x02\u0709\u070E\x05\xD8m\x02\u070A\u070E\x05\xDA";
	private static readonly _serializedATNSegment4: string =
		"n\x02\u070B\u070E\x05\xDCo\x02\u070C\u070E\x05\xDEp\x02\u070D\u0701\x03" +
		"\x02\x02\x02\u070D\u0702\x03\x02\x02\x02\u070D\u0703\x03\x02\x02\x02\u070D" +
		"\u0704\x03\x02\x02\x02\u070D\u0705\x03\x02\x02\x02\u070D\u0706\x03\x02" +
		"\x02\x02\u070D\u0707\x03\x02\x02\x02\u070D\u0708\x03\x02\x02\x02\u070D" +
		"\u0709\x03\x02\x02\x02\u070D\u070A\x03\x02\x02\x02\u070D\u070B\x03\x02" +
		"\x02\x02\u070D\u070C\x03\x02\x02\x02\u070E\xBB\x03\x02\x02\x02\u070F\u0710" +
		"\x07#\x02\x02\u0710\xBD\x03\x02\x02\x02\u0711\u0712\x07#\x02\x02\u0712" +
		"\u0713\x07\u01F4\x02\x02\u0713\u0714\x07#\x02\x02\u0714\xBF\x03\x02\x02" +
		"\x02\u0715\u0716\x07\xB3\x02\x02\u0716\u071C\x07!\x02\x02\u0717\u0718" +
		"\x07\xB3\x02\x02\u0718\u0719\x07\u01F9\x02\x02\u0719\u071A\x07!\x02\x02" +
		"\u071A\u071C\x07\u01FA\x02\x02\u071B\u0715\x03\x02\x02\x02\u071B\u0717" +
		"\x03\x02\x02\x02\u071C\xC1\x03\x02\x02\x02\u071D\u071E\x07\xB3\x02\x02" +
		"\u071E\u071F\x07\u01F4\x02\x02\u071F\u0720\x07!\x02\x02\u0720\xC3\x03" +
		"\x02\x02\x02\u0721\u0722\x07\xAF\x02\x02\u0722\u0723\x07\u01F9\x02\x02" +
		"\u0723\u0724\x07!\x02\x02\u0724\u0725\x07\u01FA\x02\x02\u0725\xC5\x03" +
		"\x02\x02\x02\u0726\u0727\x07\xAF\x02\x02\u0727\u0728\x07\u01F4\x02\x02" +
		"\u0728\u0729\x07!\x02\x02\u0729\xC7\x03\x02\x02\x02\u072A\u072B\x07\xB4" +
		"\x02\x02\u072B\u072C\x07\u01F9\x02\x02\u072C\u072D\x07#\x02\x02\u072D" +
		"\u072E\x07\u01FA\x02\x02\u072E\xC9\x03\x02\x02\x02\u072F\u0730\x07\xB5" +
		"\x02\x02\u0730\u0731\x07\u01F9\x02\x02\u0731\u0734\x07!\x02\x02\u0732" +
		"\u0733\x07\u01F2\x02\x02\u0733\u0735\x07!\x02\x02\u0734\u0732\x03\x02" +
		"\x02\x02\u0734\u0735\x03\x02\x02\x02\u0735\u0736\x03\x02\x02\x02\u0736" +
		"\u0737\x07\u01FA\x02\x02\u0737\xCB\x03\x02\x02\x02\u0738\u073E\x07\xB6" +
		"\x02\x02\u0739\u073A\x07\xB6\x02\x02\u073A\u073B\x07\u01F9\x02\x02\u073B" +
		"\u073C\t\b\x02\x02\u073C\u073E\x07\u01FA\x02\x02\u073D\u0738\x03\x02\x02" +
		"\x02\u073D\u0739\x03\x02\x02\x02\u073E\xCD\x03\x02\x02\x02\u073F\u0748" +
		"\x07\xB9\x02\x02\u0740\u0745\x07\u01F9\x02\x02\u0741\u0746\x07!\x02\x02" +
		"\u0742\u0743\x07!\x02\x02\u0743\u0744\x07\u01F2\x02\x02\u0744\u0746\x07" +
		"!\x02\x02\u0745\u0741\x03\x02\x02\x02\u0745\u0742\x03\x02\x02\x02\u0746" +
		"\u0747\x03\x02\x02\x02\u0747\u0749\x07\u01FA\x02\x02\u0748\u0740\x03\x02" +
		"\x02\x02\u0748\u0749\x03\x02\x02\x02\u0749\xCF\x03\x02\x02\x02\u074A\u074B" +
		"\x07\xBA\x02\x02\u074B\u074C\x07\u01F9\x02\x02\u074C\u074D\x05\xB0Y\x02" +
		"\u074D\u074E\x07\u01FA\x02\x02\u074E\xD1\x03\x02\x02\x02\u074F\u0754\x07" +
		"\xBB\x02\x02\u0750\u0751\x07\u01F9\x02\x02\u0751\u0752\x05\xB0Y\x02\u0752" +
		"\u0753\x07\u01FA\x02\x02\u0753\u0755\x03\x02\x02\x02\u0754\u0750\x03\x02" +
		"\x02\x02\u0754\u0755\x03\x02\x02\x02\u0755\xD3\x03\x02\x02\x02\u0756\u0757" +
		"\x07\xBC\x02\x02\u0757\u0758\x07\u01F9\x02\x02\u0758\u0759\x07!\x02\x02" +
		"\u0759\u075F\x07\u01FA\x02\x02\u075A\u075B\x07\xBD\x02\x02\u075B\u075C" +
		"\x07\u01F9\x02\x02\u075C\u075D\x07!\x02\x02\u075D\u075F\x07\u01FA\x02" +
		"\x02\u075E\u0756\x03\x02\x02\x02\u075E\u075A\x03\x02\x02\x02\u075F\xD5" +
		"\x03\x02\x02\x02\u0760\u0761\x07\xBE\x02\x02\u0761\u0762\x07\u01F9\x02" +
		"\x02\u0762\u0763\x05\xB0Y\x02\u0763\u0764\x07\u01FA\x02\x02\u0764\xD7" +
		"\x03\x02\x02\x02\u0765\u0766\x07\xBF\x02\x02\u0766\u0767\x07\u01F9\x02" +
		"\x02\u0767\u0768\x05\xB0Y\x02\u0768\u0769\x07\u01FA\x02\x02\u0769\xD9" +
		"\x03\x02\x02\x02\u076A\u076B\t\t\x02\x02\u076B\xDB\x03\x02\x02\x02\u076C" +
		"\u076D\x07\xD3\x02\x02\u076D\u076E\x07\u01F9\x02\x02\u076E\u076F\x05\xB0" +
		"Y\x02\u076F\u0770\x07\u01FA\x02\x02\u0770\xDD\x03\x02\x02\x02\u0771\u0772" +
		"\x07\xD4\x02\x02\u0772\u0773\x07\u01F9\x02\x02\u0773\u0774\x05\xB0Y\x02" +
		"\u0774\u0775\x07\u01FA\x02\x02\u0775\xDF\x03\x02\x02\x02\u0776\u0779\x05" +
		"\xE2r\x02\u0777\u0779\x05\xFE\x80\x02\u0778\u0776\x03\x02\x02\x02\u0778" +
		"\u0777\x03\x02\x02\x02\u0779\xE1\x03\x02\x02\x02\u077A\u0785\x05\xE4s" +
		"\x02\u077B\u0785\x05\xE6t\x02\u077C\u0785\x05\xE8u\x02\u077D\u0785\x05" +
		"\xEAv\x02\u077E\u0785\x05\xECw\x02\u077F\u0785\x05\xEEx\x02\u0780\u0785" +
		"\x05\xF0y\x02\u0781\u0785\x05\xF2z\x02\u0782\u0785\x05\xF4{\x02\u0783" +
		"\u0785\x05\xF6|\x02\u0784\u077A\x03\x02\x02\x02\u0784\u077B\x03\x02\x02" +
		"\x02\u0784\u077C\x03\x02\x02\x02\u0784\u077D\x03\x02\x02\x02\u0784\u077E" +
		"\x03\x02\x02\x02\u0784\u077F\x03\x02\x02\x02\u0784\u0780\x03\x02\x02\x02" +
		"\u0784\u0781\x03\x02\x02\x02\u0784\u0782\x03\x02\x02\x02\u0784\u0783\x03" +
		"\x02\x02\x02\u0785\xE3\x03\x02\x02\x02\u0786\u0787\x07+\x02\x02\u0787" +
		"\xE5\x03\x02\x02\x02\u0788\u0789\x05\u01E8\xF5\x02\u0789\xE7\x03\x02\x02" +
		"\x02\u078A\u078C\x05\xB0Y\x02\u078B\u078D\x05\xFA~\x02\u078C\u078B\x03" +
		"\x02\x02\x02\u078C\u078D\x03\x02\x02\x02\u078D\u078E\x03\x02\x02\x02\u078E" +
		"\u078F\x07\u0200\x02\x02\u078F\u0792\x03\x02\x02\x02\u0790\u0792\x05\xF8" +
		"}\x02\u0791\u078A\x03\x02\x02\x02\u0791\u0790\x03\x02\x02\x02\u0792\xE9" +
		"\x03\x02\x02\x02\u0793\u0794\x07\u01FE\x02\x02\u0794\u0795\x07!\x02\x02" +
		"\u0795\u0796\x07\xD5\x02\x02\u0796\u0797\x05\xB0Y\x02\u0797\u0798\x07" +
		"\u01FF\x02\x02\u0798\u07A2\x03\x02\x02\x02\u0799\u079A\x07\u01FE\x02\x02" +
		"\u079A\u079B\x07\xD6\x02\x02\u079B\u079C\x07\xD5\x02\x02\u079C\u079D\x07" +
		"!\x02\x02\u079D\u079E\x07\xD5\x02\x02\u079E\u079F\x05\xB0Y\x02\u079F\u07A0" +
		"\x07\u01FF\x02\x02\u07A0\u07A2\x03\x02\x02\x02\u07A1\u0793\x03\x02\x02" +
		"\x02\u07A1\u0799\x03\x02\x02\x02\u07A2\xEB\x03\x02\x02\x02\u07A3\u07A4" +
		"\x07\x9B\x02\x02\u07A4\xED\x03\x02\x02\x02\u07A5\u07A6\x07\u01FB\x02\x02" +
		"\u07A6\u07A7\x07!\x02\x02\u07A7\u07A8\x07\xD5\x02\x02\u07A8\u07A9\x05" +
		"\xB0Y\x02\u07A9\u07AA\x07\u01FC\x02\x02\u07AA\xEF\x03\x02\x02\x02\u07AB" +
		"\u07B4\x07\u01F5\x02\x02\u07AC\u07B1\x05\xB0Y\x02\u07AD\u07AE\x07\u01F2" +
		"\x02\x02\u07AE\u07B0\x05\xB0Y\x02\u07AF\u07AD\x03\x02\x02\x02\u07B0\u07B3" +
		"\x03\x02\x02\x02\u07B1\u07AF\x03\x02\x02\x02\u07B1\u07B2\x03\x02\x02\x02" +
		"\u07B2\u07B5\x03\x02\x02\x02\u07B3\u07B1\x03\x02\x02\x02\u07B4\u07AC\x03" +
		"\x02\x02\x02\u07B4\u07B5\x03\x02\x02\x02\u07B5\u07B6\x03\x02\x02\x02\u07B6" +
		"\u07C6\x07\u01F6\x02\x02\u07B7\u07B8\x07\u01FE\x02\x02\u07B8\u07C1\x07" +
		"\u01F5\x02\x02\u07B9\u07BE\x05\xB0Y\x02\u07BA\u07BB\x07\u01F2\x02\x02" +
		"\u07BB\u07BD\x05\xB0Y\x02\u07BC\u07BA\x03\x02\x02\x02\u07BD\u07C0\x03" +
		"\x02\x02\x02\u07BE\u07BC\x03\x02\x02\x02\u07BE\u07BF\x03\x02\x02\x02\u07BF" +
		"\u07C2\x03\x02\x02\x02\u07C0\u07BE\x03\x02\x02\x02\u07C1\u07B9\x03\x02" +
		"\x02\x02\u07C1\u07C2\x03\x02\x02\x02\u07C2\u07C3\x03\x02\x02\x02\u07C3" +
		"\u07C4\x07\u01F6\x02\x02\u07C4\u07C6\x07\u01FF\x02\x02\u07C5\u07AB\x03" +
		"\x02\x02\x02\u07C5\u07B7\x03\x02\x02\x02\u07C6\xF1\x03\x02\x02\x02\u07C7" +
		"\u07C8\x07%\x02\x02\u07C8\xF3\x03\x02\x02\x02\u07C9\u07CA\x07\xD7\x02" +
		"\x02\u07CA\xF5\x03\x02\x02\x02\u07CB\u07CC\x07\xD8\x02\x02\u07CC\xF7\x03" +
		"\x02\x02\x02\u07CD\u07CF\x07\xD9\x02\x02\u07CE\u07D0\x05\xFA~\x02\u07CF" +
		"\u07CE\x03\x02\x02\x02\u07CF\u07D0\x03\x02\x02\x02\u07D0\xF9\x03\x02\x02" +
		"\x02\u07D1\u07D2\x07\xDA\x02\x02\u07D2\u07D3\x07\u01F9\x02\x02\u07D3\u07D4" +
		"\x07!\x02\x02\u07D4\u07D5\x07\u01FA\x02\x02\u07D5\xFB\x03\x02\x02\x02" +
		"\u07D6\u07DB\x07\xDB\x02\x02\u07D7\u07D8\x07\u01F9\x02\x02\u07D8\u07D9" +
		"\x05\u01CA\xE6\x02\u07D9\u07DA\x07\u01FA\x02\x02\u07DA\u07DC\x03\x02\x02" +
		"\x02\u07DB\u07D7\x03\x02\x02\x02\u07DB\u07DC\x03\x02\x02\x02\u07DC\xFD" +
		"\x03\x02\x02\x02\u07DD\u07DE\x07\xDC\x02\x02\u07DE\xFF\x03\x02\x02\x02" +
		"\u07DF\u07E0\x07>\x02\x02\u07E0\u07E1\x07\u01F9\x02\x02\u07E1\u07E2\x05" +
		"\x96L\x02\u07E2\u07E3\x07\x98\x02\x02\u07E3\u07E4\x05\xB0Y\x02\u07E4\u07E5" +
		"\x07\u01FA\x02\x02\u07E5\u0101\x03\x02\x02\x02\u07E6\u07E8\x07\xDD\x02" +
		"\x02\u07E7\u07E9\x05\u01D6\xEC\x02\u07E8\u07E7\x03\x02\x02\x02\u07E8\u07E9" +
		"\x03\x02\x02\x02\u07E9\u07EA\x03\x02\x02\x02\u07EA\u07EB\x07\u01F9\x02" +
		"\x02\u07EB\u07EC\x05\xB0Y\x02\u07EC\u07ED\x07\u01F2\x02\x02\u07ED\u07F2" +
		"\x05\x96L\x02\u07EE\u07EF\x07\u01F2\x02\x02\u07EF\u07F1\x05\u0104\x83" +
		"\x02\u07F0\u07EE\x03\x02\x02\x02\u07F1\u07F4\x03\x02\x02\x02\u07F2\u07F0" +
		"\x03\x02\x02\x02\u07F2\u07F3\x03\x02\x02\x02\u07F3\u07F5\x03\x02\x02\x02" +
		"\u07F4\u07F2\x03\x02\x02\x02\u07F5\u07F6\x07\u01FA\x02\x02\u07F6\u0103" +
		"\x03\x02\x02\x02\u07F7\u07F9\x07\xDE\x02\x02\u07F8\u07F7\x03\x02\x02\x02" +
		"\u07F8\u07F9\x03\x02\x02\x02\u07F9\u07FA\x03\x02\x02\x02\u07FA\u07FB\x05" +
		"\x96L\x02\u07FB\u0105\x03\x02\x02\x02\u07FC\u07FD\x07?\x02\x02\u07FD\u07FE" +
		"\x07\u01F9\x02\x02\u07FE\u07FF\x05\x96L\x02\u07FF\u0800\x07\x98\x02\x02" +
		"\u0800\u0801\x05\xB0Y\x02\u0801\u0802\x07\u01FA\x02\x02\u0802\u0107\x03" +
		"\x02\x02\x02\u0803\u0804\x07@\x02\x02\u0804\u0805\x07\u01F9\x02\x02\u0805" +
		"\u0806\x05\x96L\x02\u0806\u0807\x07\x98\x02\x02\u0807\u0808\x05\xB0Y\x02" +
		"\u0808\u0809\x07\u01FA\x02\x02\u0809\u0109\x03\x02\x02\x02\u080A\u080B" +
		"\x07A\x02\x02\u080B\u080C\x05\u01DC\xEF\x02\u080C\u080D\x07\u01F9\x02" +
		"\x02\u080D\u080E\x05\x96L\x02\u080E\u080F\x07\u01F2\x02\x02\u080F\u0810" +
		"\x05\x96L\x02\u0810\u0811\x07\u01FA\x02\x02\u0811\u010B\x03\x02\x02\x02" +
		"\u0812\u0813\x07B\x02\x02\u0813\u0814\x05\u01DE\xF0\x02\u0814\u0815\x07" +
		"\u01F9\x02\x02\u0815\u0816\x05\x96L\x02\u0816\u0817\x07\u01F2\x02\x02" +
		"\u0817\u0818\x05\x96L\x02\u0818\u0819\x07\u01FA\x02\x02\u0819\u010D\x03" +
		"\x02\x02\x02\u081A\u081B\x07C\x02\x02\u081B\u081C\x07\u01F9\x02\x02\u081C" +
		"\u081D\x05\x96L\x02\u081D\u081E\x07\u01F2\x02\x02\u081E\u081F\x05\x96" +
		"L\x02\u081F\u0820\x07\u01F2\x02\x02\u0820\u0821\x05\x96L\x02\u0821\u0822" +
		"\x07\u01FA\x02\x02\u0822\u010F\x03\x02\x02\x02\u0823\u0824\x07D\x02\x02" +
		"\u0824\u0825\x07\u01F9\x02\x02\u0825\u0826\x05\x96L\x02\u0826\u0827\x07" +
		"\x98\x02\x02\u0827\u0828\x05\xB0Y\x02\u0828\u0829\x07\u01FA\x02\x02\u0829" +
		"\u0111\x03\x02\x02\x02\u082A\u082B\x07E\x02\x02\u082B\u082C\x07\u01F9" +
		"\x02\x02\u082C\u082D\x05\x96L\x02\u082D\u082E\x07\x98\x02\x02\u082E\u082F" +
		"\x05\xB0Y\x02\u082F\u0830\x07\u01FA\x02\x02\u0830\u0113\x03\x02\x02\x02" +
		"\u0831\u0832\x07F\x02\x02\u0832\u0833\x07\u01F9\x02\x02\u0833\u0834\x05" +
		"\x96L\x02\u0834\u0835\x07\x98\x02\x02\u0835\u0836\x05\xB0Y\x02\u0836\u0837" +
		"\x07\u01FA\x02\x02\u0837\u0115\x03\x02\x02\x02\u0838\u0839\x07G\x02\x02" +
		"\u0839\u083A\x07\u01F9\x02\x02\u083A\u083B\x05\x96L\x02\u083B\u083C\x07" +
		"\x98\x02\x02\u083C\u083D\x05\xB0Y\x02\u083D\u083E\x07\u01FA\x02\x02\u083E" +
		"\u0117\x03\x02\x02\x02\u083F\u0840\x07H\x02\x02\u0840\u0841\x07\u01F9" +
		"\x02\x02\u0841\u0842\x05\x96L\x02\u0842\u0843\x07\x98\x02\x02\u0843\u0844" +
		"\x05\xB0Y\x02\u0844\u0845\x07\u01FA\x02\x02\u0845\u0119\x03\x02\x02\x02" +
		"\u0846\u0847\x07I\x02\x02\u0847\u0848\x07\u01F9\x02\x02\u0848\u0849\x05" +
		"\x96L\x02\u0849\u084A\x07\x98\x02\x02\u084A\u084B\x05\xB0Y\x02\u084B\u084C" +
		"\x07\u01FA\x02\x02\u084C\u011B\x03\x02\x02\x02\u084D\u084E\x07J\x02\x02" +
		"\u084E\u084F\x07\u01F9\x02\x02\u084F\u0850\x05\x96L\x02\u0850\u0851\x07" +
		"\x98\x02\x02\u0851\u0852\x05\xB0Y\x02\u0852\u0853\x07\u01FA\x02\x02\u0853" +
		"\u011D\x03\x02\x02\x02\u0854\u0855\x07K\x02\x02\u0855\u0856\x07\u01F9" +
		"\x02\x02\u0856\u0857\x05\x96L\x02\u0857\u0858\x07\x98\x02\x02\u0858\u0859" +
		"\x05\xB0Y\x02\u0859\u085A\x07\u01FA\x02\x02\u085A\u011F\x03\x02\x02\x02" +
		"\u085B\u085C\x07L\x02\x02\u085C\u085D\x07\u01F9\x02\x02\u085D\u085E\x05" +
		"\x96L\x02\u085E\u085F\x07\x98\x02\x02\u085F\u0860\x05\xB0Y\x02\u0860\u0861" +
		"\x07\u01FA\x02\x02\u0861\u0121\x03\x02\x02\x02\u0862\u0863\x07M\x02\x02" +
		"\u0863\u0864\x07\u01F9\x02\x02\u0864\u0865\x05\x96L\x02\u0865\u0866\x07" +
		"\x98\x02\x02\u0866\u0867\x05\xB0Y\x02\u0867\u0868\x07\u01FA\x02\x02\u0868" +
		"\u0123\x03\x02\x02\x02\u0869\u086A\x07N\x02\x02\u086A\u086B\x07\u01F9" +
		"\x02\x02\u086B\u086C\x05\x96L\x02\u086C\u086D\x07\u01F2\x02\x02\u086D" +
		"\u086E\x05\x96L\x02\u086E\u086F\x07\u01FA\x02\x02\u086F\u0125\x03\x02" +
		"\x02\x02\u0870\u0871\x07O\x02\x02\u0871\u0872\x07\u01F9\x02\x02\u0872" +
		"\u0873\x05\x96L\x02\u0873\u0874\x07\u01F2\x02\x02\u0874\u0875\x05\x96" +
		"L\x02\u0875\u0876\x07\u01F2\x02\x02\u0876\u0877\x05\x96L\x02\u0877\u0878" +
		"\x07\u01FA\x02\x02\u0878\u0127\x03\x02\x02\x02\u0879\u087A\x07P\x02\x02" +
		"\u087A\u087B\x07\u01F9\x02\x02\u087B\u087C\x05\x96L\x02\u087C\u087D\x07" +
		"\u01F2\x02\x02\u087D\u087E\x05\x96L\x02\u087E\u087F\x07\u01F2\x02\x02" +
		"\u087F\u0880\x05\x96L\x02\u0880\u0881\x07\u01FA\x02\x02\u0881\u0129\x03" +
		"\x02\x02\x02\u0882\u0886\x07Q\x02\x02\u0883\u0885\x05\u01DA\xEE\x02\u0884" +
		"\u0883\x03\x02\x02\x02\u0885\u0888\x03\x02\x02\x02\u0886\u0884\x03\x02" +
		"\x02\x02\u0886\u0887\x03\x02\x02\x02\u0887\u0889\x03\x02\x02\x02\u0888" +
		"\u0886\x03\x02\x02\x02\u0889\u088A\x07\u01F9\x02\x02\u088A\u088B\x05\x96" +
		"L\x02\u088B\u088C\x07\u01F2\x02\x02\u088C\u088D\x05\x96L\x02\u088D\u088E" +
		"\x07\u01FA\x02\x02\u088E\u012B\x03\x02\x02\x02\u088F\u0891\x07R\x02\x02" +
		"\u0890\u0892\x07\xDF\x02\x02\u0891\u0890\x03\x02\x02\x02\u0891\u0892\x03" +
		"\x02\x02\x02\u0892\u0893\x03\x02\x02\x02\u0893\u0894\x07\u01F9\x02\x02" +
		"\u0894\u0895\x05\x96L\x02\u0895\u0896\x07\u01F2\x02\x02\u0896\u0897\x05" +
		"\x96L\x02\u0897\u0898\x07\u01FA\x02\x02\u0898\u012D\x03\x02\x02\x02\u0899" +
		"\u089B\x07S\x02\x02\u089A\u089C\x07\xDF\x02\x02\u089B\u089A\x03\x02\x02" +
		"\x02\u089B\u089C\x03\x02\x02\x02\u089C\u089D\x03\x02\x02\x02\u089D\u089E" +
		"\x07\u01F9\x02\x02\u089E\u089F\x05\x96L\x02\u089F\u08A0\x07\u01F2\x02" +
		"\x02\u08A0\u08A1\x05\x96L\x02\u08A1\u08A2\x07\u01FA\x02\x02\u08A2\u012F" +
		"\x03\x02\x02\x02\u08A3\u08A4\x07T\x02\x02\u08A4\u08A5\x07\u01F9\x02\x02" +
		"\u08A5\u08A6\x05\x96L\x02\u08A6\u08A7\x07\u01F2\x02\x02\u08A7\u08A8\x05" +
		"\x96L\x02\u08A8\u08A9\x07\u01FA\x02\x02\u08A9\u0131\x03\x02\x02\x02\u08AA" +
		"\u08AB\x07U\x02\x02\u08AB\u08AC\x07\u01F9\x02\x02\u08AC\u08AD\x05\x96" +
		"L\x02\u08AD\u08AE\x07\u01F2\x02\x02\u08AE\u08AF\x05\x96L\x02\u08AF\u08B0" +
		"\x07\u01FA\x02\x02\u08B0\u0133\x03\x02\x02\x02\u08B1\u08B2\x07V\x02\x02" +
		"\u08B2\u08B3\x07\u01F9\x02\x02\u08B3\u08B4\x05\x96L\x02\u08B4\u08B5\x07" +
		"\u01F2\x02\x02\u08B5\u08B6\x05\x96L\x02\u08B6\u08B7\x07\u01FA\x02\x02" +
		"\u08B7\u0135\x03\x02\x02\x02\u08B8\u08BC\x07W\x02\x02\u08B9\u08BB\x05" +
		"\u01DA\xEE\x02\u08BA\u08B9\x03\x02\x02\x02\u08BB\u08BE\x03\x02\x02\x02" +
		"\u08BC\u08BA\x03\x02\x02\x02\u08BC\u08BD\x03\x02\x02\x02\u08BD\u08BF\x03" +
		"\x02\x02\x02\u08BE\u08BC\x03\x02\x02\x02\u08BF\u08C0\x07\u01F9\x02\x02" +
		"\u08C0\u08C1\x05\x96L\x02\u08C1\u08C2\x07\u01F2\x02\x02\u08C2\u08C3\x05" +
		"\x96L\x02\u08C3\u08C4\x07\u01FA\x02\x02\u08C4\u0137\x03\x02\x02\x02\u08C5" +
		"\u08C9\x07X\x02\x02\u08C6\u08C8\x05\u01DA\xEE\x02\u08C7\u08C6\x03\x02" +
		"\x02\x02\u08C8\u08CB\x03\x02\x02\x02\u08C9\u08C7\x03\x02\x02\x02\u08C9" +
		"\u08CA\x03\x02\x02\x02\u08CA\u08CC\x03\x02\x02\x02\u08CB\u08C9\x03\x02" +
		"\x02\x02\u08CC\u08CD\x07\u01F9\x02\x02\u08CD\u08CE\x05\x96L\x02\u08CE" +
		"\u08CF\x07\u01F2\x02\x02\u08CF\u08D0\x05\x96L\x02\u08D0\u08D1\x07\u01FA" +
		"\x02\x02\u08D1\u0139\x03\x02\x02\x02\u08D2\u08D6\x07Y\x02\x02\u08D3\u08D5" +
		"\x05\u01DA\xEE\x02\u08D4\u08D3\x03\x02\x02\x02\u08D5\u08D8\x03\x02\x02" +
		"\x02\u08D6\u08D4\x03\x02\x02\x02\u08D6\u08D7\x03\x02\x02\x02\u08D7\u08D9" +
		"\x03\x02\x02\x02\u08D8\u08D6\x03\x02\x02\x02\u08D9\u08DA\x07\u01F9\x02" +
		"\x02\u08DA\u08DB\x05\x96L\x02\u08DB\u08DC\x07\u01F2\x02\x02\u08DC\u08DD" +
		"\x05\x96L\x02\u08DD\u08DE\x07\u01FA\x02\x02\u08DE\u013B\x03\x02\x02\x02" +
		"\u08DF\u08E0\x07Z\x02\x02\u08E0\u08E1\x07\u01F9\x02\x02\u08E1\u08E2\x05" +
		"\x96L\x02\u08E2\u08E3\x07\u01FA\x02\x02\u08E3\u013D\x03\x02\x02\x02\u08E4" +
		"\u08E5\x07%\x02\x02\u08E5\u08E6\x07\u01F4\x02\x02\u08E6\u08E7\x05\u0140" +
		"\xA1\x02\u08E7\u013F\x03\x02\x02\x02\u08E8\u091D\x05\u0148\xA5\x02\u08E9" +
		"\u091D\x05\u014A\xA6\x02\u08EA\u091D\x05\u014C\xA7\x02\u08EB\u091D\x05" +
		"\u014E\xA8\x02\u08EC\u091D\x05\u0150\xA9\x02\u08ED\u091D\x05\u0152\xAA" +
		"\x02\u08EE\u091D\x05\u0154\xAB\x02\u08EF\u091D\x05\u0156\xAC\x02\u08F0" +
		"\u091D\x05\u0158\xAD\x02\u08F1\u091D\x05\u015A\xAE\x02\u08F2\u091D\x05" +
		"\u015C\xAF\x02\u08F3\u091D\x05\u015E\xB0\x02\u08F4\u091D\x05\u0160\xB1" +
		"\x02\u08F5\u091D\x05\u0162\xB2\x02\u08F6\u091D\x05\u0164\xB3\x02\u08F7" +
		"\u091D\x05\u0166\xB4\x02\u08F8\u091D\x05\u0168\xB5\x02\u08F9\u091D\x05" +
		"\u016A\xB6\x02\u08FA\u091D\x05\u016C\xB7\x02\u08FB\u091D\x05\u016E\xB8" +
		"\x02\u08FC\u091D\x05\u0170\xB9\x02\u08FD\u091D\x05\u0172\xBA\x02\u08FE" +
		"\u091D\x05\u0174\xBB\x02\u08FF\u091D\x05\u0176\xBC\x02\u0900\u091D\x05" +
		"\u0178\xBD\x02\u0901\u091D\x05\u017A\xBE\x02\u0902\u091D\x05\u017C\xBF" +
		"\x02\u0903\u091D\x05\u017E\xC0\x02\u0904\u091D\x05\u0180\xC1\x02\u0905" +
		"\u091D\x05\u0182\xC2\x02\u0906\u091D\x05\u0184\xC3\x02\u0907\u091D\x05" +
		"\u0186\xC4\x02\u0908\u091D\x05\u0188\xC5\x02\u0909\u091D\x05\u018A\xC6" +
		"\x02\u090A\u091D\x05\u018C\xC7\x02\u090B\u091D\x05\u018E\xC8\x02\u090C" +
		"\u091D\x05\u0190\xC9\x02\u090D\u091D\x05\u0192\xCA\x02\u090E\u091D\x05" +
		"\u0194\xCB\x02\u090F\u091D\x05\u0196\xCC\x02\u0910\u091D\x05\u0198\xCD" +
		"\x02\u0911\u091D\x05\u019A\xCE\x02\u0912\u091D\x05\u019C\xCF\x02\u0913" +
		"\u091D\x05\u019E\xD0\x02\u0914\u091D\x05\u01A0\xD1\x02\u0915\u091D\x05" +
		"\u01A2\xD2\x02\u0916\u091D\x05\u01A4\xD3\x02\u0917\u091D\x05\u01A6\xD4" +
		"\x02\u0918\u091D\x05\u01A8\xD5\x02\u0919\u091D\x05\u01AA\xD6\x02\u091A" +
		"\u091D\x05\u01AC\xD7\x02\u091B\u091D\x05\u01AE\xD8\x02\u091C\u08E8\x03" +
		"\x02\x02\x02\u091C\u08E9\x03\x02\x02\x02\u091C\u08EA\x03\x02\x02\x02\u091C" +
		"\u08EB\x03\x02\x02\x02\u091C\u08EC\x03\x02\x02\x02\u091C\u08ED\x03\x02" +
		"\x02\x02\u091C\u08EE\x03\x02\x02\x02\u091C\u08EF\x03\x02\x02\x02\u091C" +
		"\u08F0\x03\x02\x02\x02\u091C\u08F1\x03\x02\x02\x02\u091C\u08F2\x03\x02" +
		"\x02\x02\u091C\u08F3\x03\x02\x02\x02\u091C\u08F4\x03\x02\x02\x02\u091C" +
		"\u08F5\x03\x02\x02\x02\u091C\u08F6\x03\x02\x02\x02\u091C\u08F7\x03\x02" +
		"\x02\x02\u091C\u08F8\x03\x02\x02\x02\u091C\u08F9\x03\x02\x02\x02\u091C" +
		"\u08FA\x03\x02\x02\x02\u091C\u08FB\x03\x02\x02\x02\u091C\u08FC\x03\x02" +
		"\x02\x02\u091C\u08FD\x03\x02\x02\x02\u091C\u08FE\x03\x02\x02\x02\u091C" +
		"\u08FF\x03\x02\x02\x02\u091C\u0900\x03\x02\x02\x02\u091C\u0901\x03\x02" +
		"\x02\x02\u091C\u0902\x03\x02\x02\x02\u091C\u0903\x03\x02\x02\x02\u091C" +
		"\u0904\x03\x02\x02\x02\u091C\u0905\x03\x02\x02\x02\u091C\u0906\x03\x02" +
		"\x02\x02\u091C\u0907\x03\x02\x02\x02\u091C\u0908\x03\x02\x02\x02\u091C" +
		"\u0909\x03\x02\x02\x02\u091C\u090A\x03\x02\x02\x02\u091C\u090B\x03\x02" +
		"\x02\x02\u091C\u090C\x03\x02\x02\x02\u091C\u090D\x03\x02\x02\x02\u091C" +
		"\u090E\x03\x02\x02\x02\u091C\u090F\x03\x02\x02\x02\u091C\u0910\x03\x02" +
		"\x02\x02\u091C\u0911\x03\x02\x02\x02\u091C\u0912\x03\x02\x02\x02\u091C" +
		"\u0913\x03\x02\x02\x02\u091C\u0914\x03\x02\x02\x02\u091C\u0915\x03\x02" +
		"\x02\x02\u091C\u0916\x03\x02\x02\x02\u091C\u0917\x03\x02\x02\x02\u091C" +
		"\u0918\x03\x02\x02\x02\u091C\u0919\x03\x02\x02\x02\u091C\u091A\x03\x02" +
		"\x02\x02\u091C\u091B\x03\x02\x02\x02\u091D\u0141\x03\x02\x02\x02\u091E" +
		"\u0920\x07[\x02\x02\u091F\u0921\x07\xE0\x02\x02\u0920\u091F\x03\x02\x02" +
		"\x02\u0920\u0921\x03\x02\x02\x02\u0921\u0922\x03\x02\x02\x02\u0922\u0923" +
		"\x05\xA2R\x02\u0923\u0924\x07\u01F2\x02\x02\u0924\u0927\x05\xA2R\x02\u0925" +
		"\u0926\x07\u01F2\x02\x02\u0926\u0928\x05\xC0a\x02\u0927\u0925\x03\x02" +
		"\x02\x02\u0927\u0928\x03\x02\x02\x02\u0928\u092D\x03\x02\x02\x02\u0929" +
		"\u092A\x07\u01F2\x02\x02\u092A\u092C\x05\x98M\x02\u092B\u0929\x03\x02" +
		"\x02\x02\u092C\u092F\x03\x02\x02\x02\u092D\u092B\x03\x02\x02\x02\u092D" +
		"\u092E\x03\x02\x02\x02\u092E\u0948\x03\x02\x02\x02\u092F\u092D\x03\x02" +
		"\x02\x02\u0930\u0931\x07[\x02\x02\u0931\u0933\x07\xE1\x02\x02\u0932\u0934" +
		"\x07\xE0\x02\x02\u0933\u0932\x03\x02\x02\x02\u0933\u0934\x03\x02\x02\x02" +
		"\u0934\u0935\x03\x02\x02\x02\u0935\u0936\x05\xA2R\x02\u0936\u0937\x07" +
		"\u01F2\x02\x02\u0937\u0939\x05\xA2R\x02\u0938\u093A\x05\u0144\xA3\x02" +
		"\u0939\u0938\x03\x02\x02\x02\u0939\u093A\x03\x02\x02\x02\u093A\u093B\x03" +
		"\x02\x02\x02\u093B\u093E\x05\u01E0\xF1\x02\u093C\u093D\x07\u01F2\x02\x02" +
		"\u093D\u093F\x05\xC0a\x02\u093E\u093C\x03\x02\x02\x02\u093E\u093F\x03" +
		"\x02\x02\x02\u093F\u0944\x03\x02\x02\x02\u0940\u0941\x07\u01F2\x02\x02" +
		"\u0941\u0943\x05\x98M\x02\u0942\u0940\x03\x02\x02\x02\u0943\u0946\x03" +
		"\x02\x02\x02\u0944\u0942\x03\x02\x02\x02\u0944\u0945\x03\x02\x02\x02\u0945" +
		"\u0948\x03\x02\x02\x02\u0946\u0944\x03\x02\x02\x02\u0947\u091E\x03\x02" +
		"\x02\x02\u0947\u0930\x03\x02\x02\x02\u0948\u0143\x03\x02\x02\x02\u0949" +
		"\u094A\x07\xE2\x02\x02\u094A\u094B\x07\u01F9\x02\x02\u094B\u094C\x07#" +
		"\x02\x02\u094C\u094D\x07\u01FA\x02\x02\u094D\u0145\x03\x02\x02\x02\u094E" +
		"\u0950\x07\\\x02\x02\u094F\u0951\x05\u0144\xA3\x02\u0950\u094F\x03\x02" +
		"\x02\x02\u0950\u0951\x03\x02\x02\x02\u0951\u0952\x03\x02\x02\x02\u0952" +
		"\u0957\x05\u01E0\xF1\x02\u0953\u0954\x07\u01F2\x02\x02\u0954\u0956\x05" +
		"\x98M\x02\u0955\u0953\x03\x02\x02\x02\u0956\u0959\x03\x02\x02\x02\u0957" +
		"\u0955\x03\x02\x02\x02\u0957\u0958\x03\x02\x02\x02\u0958\u0147\x03\x02" +
		"\x02\x02\u0959\u0957\x03\x02\x02\x02\u095A\u095E\x07Z\x02\x02\u095B\u095D" +
		"\x05\u01E4\xF3\x02\u095C\u095B\x03\x02\x02\x02\u095D\u0960\x03\x02\x02" +
		"\x02\u095E\u095C\x03\x02\x02\x02\u095E\u095F\x03\x02\x02\x02\u095F\u0961" +
		"\x03\x02\x02\x02\u0960\u095E\x03\x02\x02\x02\u0961\u0966\x05\xA2R\x02" +
		"\u0962\u0963\x07\u01F2\x02\x02\u0963\u0965\x05\x98M\x02\u0964\u0962\x03" +
		"\x02\x02\x02\u0965\u0968\x03\x02\x02\x02\u0966\u0964\x03\x02\x02\x02\u0966" +
		"\u0967\x03\x02\x02\x02\u0967\u0149\x03\x02\x02\x02\u0968\u0966\x03\x02" +
		"\x02\x02\u0969\u096D\x07W\x02\x02\u096A\u096C\x05\u01DA\xEE\x02\u096B" +
		"\u096A\x03\x02\x02\x02\u096C\u096F\x03\x02\x02\x02\u096D\u096B\x03\x02" +
		"\x02\x02\u096D\u096E\x03\x02\x02\x02\u096E\u0970\x03\x02\x02\x02\u096F" +
		"\u096D\x03\x02\x02\x02\u0970\u0971\x05\xA2R\x02\u0971\u0972\x07\u01F2" +
		"\x02\x02\u0972\u0977\x05\xA4S\x02\u0973\u0974\x07\u01F2\x02\x02\u0974" +
		"\u0976\x05\x98M\x02\u0975\u0973\x03\x02\x02\x02\u0976\u0979\x03\x02\x02" +
		"\x02\u0977\u0975\x03\x02\x02\x02\u0977\u0978\x03\x02\x02\x02\u0978\u014B" +
		"\x03\x02\x02\x02\u0979\u0977\x03\x02\x02\x02\u097A\u097E\x07]\x02\x02" +
		"\u097B\u097D\x05\u01E4\xF3\x02\u097C\u097B\x03\x02\x02\x02\u097D\u0980" +
		"\x03\x02\x02\x02\u097E\u097C\x03\x02\x02\x02\u097E\u097F\x03\x02\x02\x02" +
		"\u097F\u0981\x03\x02\x02\x02\u0980\u097E\x03\x02\x02\x02\u0981\u0982\x05" +
		"\xA2R\x02\u0982\u0983\x07\u01F2\x02\x02\u0983\u0988\x05\xA4S\x02\u0984" +
		"\u0985\x07\u01F2\x02\x02\u0985\u0987\x05\x98M\x02\u0986\u0984\x03\x02" +
		"\x02\x02\u0987\u098A\x03\x02\x02\x02\u0988\u0986\x03\x02\x02\x02\u0988" +
		"\u0989\x03\x02\x02\x02\u0989\u014D\x03\x02\x02\x02\u098A\u0988\x03\x02" +
		"\x02\x02\u098B\u098F\x07X\x02\x02\u098C\u098E\x05\u01DA\xEE\x02\u098D" +
		"\u098C\x03\x02\x02\x02\u098E\u0991\x03\x02\x02\x02\u098F\u098D\x03\x02" +
		"\x02\x02\u098F\u0990\x03\x02\x02\x02\u0990\u0992\x03\x02\x02\x02\u0991" +
		"\u098F\x03\x02\x02\x02\u0992\u0993\x05\xA2R\x02\u0993\u0994\x07\u01F2" +
		"\x02\x02\u0994\u0999\x05\xA4S\x02\u0995\u0996\x07\u01F2\x02\x02\u0996" +
		"\u0998\x05\x98M\x02\u0997\u0995\x03\x02\x02\x02\u0998\u099B\x03\x02\x02" +
		"\x02\u0999\u0997\x03\x02\x02\x02\u0999\u099A\x03\x02\x02\x02\u099A\u014F" +
		"\x03\x02\x02\x02\u099B\u0999\x03\x02\x02\x02\u099C\u09A0\x07^\x02\x02" +
		"\u099D\u099F\x05\u01E4\xF3\x02\u099E\u099D\x03\x02\x02\x02\u099F\u09A2" +
		"\x03\x02\x02\x02\u09A0\u099E\x03\x02\x02\x02\u09A0\u09A1\x03\x02\x02\x02" +
		"\u09A1\u09A3\x03\x02\x02\x02\u09A2\u09A0\x03\x02\x02\x02\u09A3\u09A4\x05" +
		"\xA2R\x02\u09A4\u09A5\x07\u01F2\x02\x02\u09A5\u09AA\x05\xA4S\x02\u09A6" +
		"\u09A7\x07\u01F2\x02\x02\u09A7\u09A9\x05\x98M\x02\u09A8\u09A6\x03\x02" +
		"\x02\x02\u09A9\u09AC\x03\x02\x02\x02\u09AA\u09A8\x03\x02\x02\x02\u09AA" +
		"\u09AB\x03\x02\x02\x02\u09AB\u0151\x03\x02\x02\x02\u09AC\u09AA\x03\x02" +
		"\x02\x02\u09AD\u09B1\x07Y\x02\x02\u09AE\u09B0\x05\u01DA\xEE\x02\u09AF" +
		"\u09AE\x03\x02\x02\x02\u09B0\u09B3\x03\x02\x02\x02\u09B1\u09AF\x03\x02" +
		"\x02\x02\u09B1\u09B2\x03\x02\x02\x02\u09B2\u09B4\x03\x02\x02\x02\u09B3" +
		"\u09B1\x03\x02\x02\x02\u09B4\u09B5\x05\xA2R\x02\u09B5\u09B6\x07\u01F2" +
		"\x02\x02\u09B6\u09BB\x05\xA4S\x02\u09B7\u09B8\x07\u01F2\x02\x02\u09B8" +
		"\u09BA\x05\x98M\x02\u09B9\u09B7\x03\x02\x02\x02\u09BA\u09BD\x03\x02\x02" +
		"\x02\u09BB\u09B9\x03\x02\x02\x02\u09BB\u09BC\x03\x02\x02\x02\u09BC\u0153" +
		"\x03\x02\x02\x02\u09BD\u09BB\x03\x02\x02\x02\u09BE\u09C2\x07_\x02\x02" +
		"\u09BF\u09C1\x05\u01E4\xF3\x02\u09C0\u09BF\x03\x02\x02\x02\u09C1\u09C4" +
		"\x03\x02\x02\x02\u09C2\u09C0\x03\x02\x02\x02\u09C2\u09C3\x03\x02\x02\x02" +
		"\u09C3\u09C5\x03\x02\x02\x02\u09C4\u09C2\x03\x02\x02\x02\u09C5\u09C6\x05" +
		"\xA2R\x02\u09C6\u09C7\x07\u01F2\x02\x02\u09C7\u09CC\x05\xA4S\x02\u09C8" +
		"\u09C9\x07\u01F2\x02\x02\u09C9\u09CB\x05\x98M\x02\u09CA\u09C8\x03\x02" +
		"\x02\x02\u09CB\u09CE\x03\x02\x02\x02\u09CC\u09CA\x03\x02\x02\x02\u09CC" +
		"\u09CD\x03\x02\x02\x02\u09CD\u0155\x03\x02\x02\x02\u09CE\u09CC\x03\x02" +
		"\x02\x02\u09CF\u09D1\x07`\x02\x02\u09D0\u09D2\x07\xDF\x02\x02\u09D1\u09D0" +
		"\x03\x02\x02\x02";
	private static readonly _serializedATNSegment5: string =
		"\u09D1\u09D2\x03\x02\x02\x02\u09D2\u09D3\x03\x02\x02\x02\u09D3\u09D4\x05" +
		"\xA2R\x02\u09D4\u09D5\x07\u01F2\x02\x02\u09D5\u09DA\x05\xA4S\x02\u09D6" +
		"\u09D7\x07\u01F2\x02\x02\u09D7\u09D9\x05\x98M\x02\u09D8\u09D6\x03\x02" +
		"\x02\x02\u09D9\u09DC\x03\x02\x02\x02\u09DA\u09D8\x03\x02\x02\x02\u09DA" +
		"\u09DB\x03\x02\x02\x02\u09DB\u0157\x03\x02\x02\x02\u09DC\u09DA\x03\x02" +
		"\x02\x02\u09DD\u09DF\x07a\x02\x02\u09DE\u09E0\x07\xDF\x02\x02\u09DF\u09DE" +
		"\x03\x02\x02\x02\u09DF\u09E0\x03\x02\x02\x02\u09E0\u09E1\x03\x02\x02\x02" +
		"\u09E1\u09E2\x05\xA2R\x02\u09E2\u09E3\x07\u01F2\x02\x02\u09E3\u09E8\x05" +
		"\xA4S\x02\u09E4\u09E5\x07\u01F2\x02\x02\u09E5\u09E7\x05\x98M\x02\u09E6" +
		"\u09E4\x03\x02\x02\x02\u09E7\u09EA\x03\x02\x02\x02\u09E8\u09E6\x03\x02" +
		"\x02\x02\u09E8\u09E9\x03\x02\x02\x02\u09E9\u0159\x03\x02\x02\x02\u09EA" +
		"\u09E8\x03\x02\x02\x02\u09EB\u09EF\x07b\x02\x02\u09EC\u09EE\x05\u01E4" +
		"\xF3\x02\u09ED\u09EC\x03\x02\x02\x02\u09EE\u09F1\x03\x02\x02\x02\u09EF" +
		"\u09ED\x03\x02\x02\x02\u09EF\u09F0\x03\x02\x02\x02\u09F0\u09F2\x03\x02" +
		"\x02\x02\u09F1\u09EF\x03\x02\x02\x02\u09F2\u09F3\x05\xA2R\x02\u09F3\u09F4" +
		"\x07\u01F2\x02\x02\u09F4\u09F9\x05\xA4S\x02\u09F5\u09F6\x07\u01F2\x02" +
		"\x02\u09F6\u09F8\x05\x98M\x02\u09F7\u09F5\x03\x02\x02\x02\u09F8\u09FB" +
		"\x03\x02\x02\x02\u09F9\u09F7\x03\x02\x02\x02\u09F9\u09FA\x03\x02\x02\x02" +
		"\u09FA\u015B\x03\x02\x02\x02\u09FB\u09F9\x03\x02\x02\x02\u09FC\u09FD\x07" +
		"c\x02\x02\u09FD\u09FE\x05\xA2R\x02\u09FE\u09FF\x07\u01F2\x02\x02\u09FF" +
		"\u0A04\x05\xA4S\x02\u0A00\u0A01\x07\u01F2\x02\x02\u0A01\u0A03\x05\x98" +
		"M\x02\u0A02\u0A00\x03\x02\x02\x02\u0A03\u0A06\x03\x02\x02\x02\u0A04\u0A02" +
		"\x03\x02\x02\x02\u0A04\u0A05\x03\x02\x02\x02\u0A05\u015D\x03\x02\x02\x02" +
		"\u0A06\u0A04\x03\x02\x02\x02\u0A07\u0A08\x07d\x02\x02\u0A08\u0A09\x05" +
		"\xA2R\x02\u0A09\u0A0A\x07\u01F2\x02\x02\u0A0A\u0A0F\x05\xA4S\x02\u0A0B" +
		"\u0A0C\x07\u01F2\x02\x02\u0A0C\u0A0E\x05\x98M\x02\u0A0D\u0A0B\x03\x02" +
		"\x02\x02\u0A0E\u0A11\x03\x02\x02\x02\u0A0F\u0A0D\x03\x02\x02\x02\u0A0F" +
		"\u0A10\x03\x02\x02\x02\u0A10\u015F\x03\x02\x02\x02\u0A11\u0A0F\x03\x02" +
		"\x02\x02\u0A12\u0A16\x07e\x02\x02\u0A13\u0A15\x05\u01E4\xF3\x02\u0A14" +
		"\u0A13\x03\x02\x02\x02\u0A15\u0A18\x03\x02\x02\x02\u0A16\u0A14\x03\x02" +
		"\x02\x02\u0A16\u0A17\x03\x02\x02\x02\u0A17\u0A19\x03\x02\x02\x02\u0A18" +
		"\u0A16\x03\x02\x02\x02\u0A19\u0A1A\x05\xA2R\x02\u0A1A\u0A1B\x07\u01F2" +
		"\x02\x02\u0A1B\u0A20\x05\xA4S\x02\u0A1C\u0A1D\x07\u01F2\x02\x02\u0A1D" +
		"\u0A1F\x05\x98M\x02\u0A1E\u0A1C\x03\x02\x02\x02\u0A1F\u0A22\x03\x02\x02" +
		"\x02\u0A20\u0A1E\x03\x02\x02\x02\u0A20\u0A21\x03\x02\x02\x02\u0A21\u0161" +
		"\x03\x02\x02\x02\u0A22\u0A20\x03\x02\x02\x02\u0A23\u0A27\x07Q\x02\x02" +
		"\u0A24\u0A26\x05\u01DA\xEE\x02\u0A25\u0A24\x03\x02\x02\x02\u0A26\u0A29" +
		"\x03\x02\x02\x02\u0A27\u0A25\x03\x02\x02\x02\u0A27\u0A28\x03\x02\x02\x02" +
		"\u0A28\u0A2A\x03\x02\x02\x02\u0A29\u0A27\x03\x02\x02\x02\u0A2A\u0A2B\x05" +
		"\xA2R\x02\u0A2B\u0A2C\x07\u01F2\x02\x02\u0A2C\u0A31\x05\xA4S\x02\u0A2D" +
		"\u0A2E\x07\u01F2\x02\x02\u0A2E\u0A30\x05\x98M\x02\u0A2F\u0A2D\x03\x02" +
		"\x02\x02\u0A30\u0A33\x03\x02\x02\x02\u0A31\u0A2F\x03\x02\x02\x02\u0A31" +
		"\u0A32\x03\x02\x02\x02\u0A32\u0163\x03\x02\x02\x02\u0A33\u0A31\x03\x02" +
		"\x02\x02\u0A34\u0A36\x07R\x02\x02\u0A35\u0A37\x07\xDF\x02\x02\u0A36\u0A35" +
		"\x03\x02\x02\x02\u0A36\u0A37\x03\x02\x02\x02\u0A37\u0A38\x03\x02\x02\x02" +
		"\u0A38\u0A39\x05\xA2R\x02\u0A39\u0A3A\x07\u01F2\x02\x02\u0A3A\u0A3F\x05" +
		"\xA4S\x02\u0A3B\u0A3C\x07\u01F2\x02\x02\u0A3C\u0A3E\x05\x98M\x02\u0A3D" +
		"\u0A3B\x03\x02\x02\x02\u0A3E\u0A41\x03\x02\x02\x02\u0A3F\u0A3D\x03\x02" +
		"\x02\x02\u0A3F\u0A40\x03\x02\x02\x02\u0A40\u0165\x03\x02\x02\x02\u0A41" +
		"\u0A3F\x03\x02\x02\x02\u0A42\u0A44\x07S\x02\x02\u0A43\u0A45\x07\xDF\x02" +
		"\x02\u0A44\u0A43\x03\x02\x02\x02\u0A44\u0A45\x03\x02\x02\x02\u0A45\u0A46" +
		"\x03\x02\x02\x02\u0A46\u0A47\x05\xA2R\x02\u0A47\u0A48\x07\u01F2\x02\x02" +
		"\u0A48\u0A4D\x05\xA4S\x02\u0A49\u0A4A\x07\u01F2\x02\x02\u0A4A\u0A4C\x05" +
		"\x98M\x02\u0A4B\u0A49\x03\x02\x02\x02\u0A4C\u0A4F\x03\x02\x02\x02\u0A4D" +
		"\u0A4B\x03\x02\x02\x02\u0A4D\u0A4E\x03\x02\x02\x02\u0A4E\u0167\x03\x02" +
		"\x02\x02\u0A4F\u0A4D\x03\x02\x02\x02\u0A50\u0A51\x07T\x02\x02\u0A51\u0A52" +
		"\x05\xA2R\x02\u0A52\u0A53\x07\u01F2\x02\x02\u0A53\u0A58\x05\xA4S\x02\u0A54" +
		"\u0A55\x07\u01F2\x02\x02\u0A55\u0A57\x05\x98M\x02\u0A56\u0A54\x03\x02" +
		"\x02\x02\u0A57\u0A5A\x03\x02\x02\x02\u0A58\u0A56\x03\x02\x02\x02\u0A58" +
		"\u0A59\x03\x02\x02\x02\u0A59\u0169\x03\x02\x02\x02\u0A5A\u0A58\x03\x02" +
		"\x02\x02\u0A5B\u0A5C\x07U\x02\x02\u0A5C\u0A5D\x05\xA2R\x02\u0A5D\u0A5E" +
		"\x07\u01F2\x02\x02\u0A5E\u0A63\x05\xA4S\x02\u0A5F\u0A60\x07\u01F2\x02" +
		"\x02\u0A60\u0A62\x05\x98M\x02\u0A61\u0A5F\x03\x02\x02\x02\u0A62\u0A65" +
		"\x03\x02\x02\x02\u0A63\u0A61\x03\x02\x02\x02\u0A63\u0A64\x03\x02\x02\x02" +
		"\u0A64\u016B\x03\x02\x02\x02\u0A65\u0A63\x03\x02\x02\x02\u0A66\u0A67\x07" +
		"V\x02\x02\u0A67\u0A68\x05\xA2R\x02\u0A68\u0A69\x07\u01F2\x02\x02\u0A69" +
		"\u0A6E\x05\xA4S\x02\u0A6A\u0A6B\x07\u01F2\x02\x02\u0A6B\u0A6D\x05\x98" +
		"M\x02\u0A6C\u0A6A\x03\x02\x02\x02\u0A6D\u0A70\x03\x02\x02\x02\u0A6E\u0A6C" +
		"\x03\x02\x02\x02\u0A6E\u0A6F\x03\x02\x02\x02\u0A6F\u016D\x03\x02\x02\x02" +
		"\u0A70\u0A6E\x03\x02\x02\x02\u0A71\u0A72\x07N\x02\x02\u0A72\u0A73\x05" +
		"\xA2R\x02\u0A73\u0A74\x07\u01F2\x02\x02\u0A74\u0A79\x05\xA2R\x02\u0A75" +
		"\u0A76\x07\u01F2\x02\x02\u0A76\u0A78\x05\x98M\x02\u0A77\u0A75\x03\x02" +
		"\x02\x02\u0A78\u0A7B\x03\x02\x02\x02\u0A79\u0A77\x03\x02\x02\x02\u0A79" +
		"\u0A7A\x03\x02\x02\x02\u0A7A\u016F\x03\x02\x02\x02\u0A7B\u0A79\x03\x02" +
		"\x02\x02\u0A7C\u0A7D\x07O\x02\x02\u0A7D\u0A7E\x05\xA2R\x02\u0A7E\u0A7F" +
		"\x07\u01F2\x02\x02\u0A7F\u0A80\x05\xA2R\x02\u0A80\u0A81\x07\u01F2\x02" +
		"\x02\u0A81\u0A86\x05\xA2R\x02\u0A82\u0A83\x07\u01F2\x02\x02\u0A83\u0A85" +
		"\x05\x98M\x02\u0A84\u0A82\x03\x02\x02\x02\u0A85\u0A88\x03\x02\x02\x02" +
		"\u0A86\u0A84\x03\x02\x02\x02\u0A86\u0A87\x03\x02\x02\x02\u0A87\u0171\x03" +
		"\x02\x02\x02\u0A88\u0A86\x03\x02\x02\x02\u0A89\u0A8A\x07P\x02\x02\u0A8A" +
		"\u0A8B\x05\xA2R\x02\u0A8B\u0A8C\x07\u01F2\x02\x02\u0A8C\u0A8D\x05\xA2" +
		"R\x02\u0A8D\u0A8E\x07\u01F2\x02\x02\u0A8E\u0A93\x05\xA2R\x02\u0A8F\u0A90" +
		"\x07\u01F2\x02\x02\u0A90\u0A92\x05\x98M\x02\u0A91\u0A8F\x03\x02\x02\x02" +
		"\u0A92\u0A95\x03\x02\x02\x02\u0A93\u0A91\x03\x02\x02\x02\u0A93\u0A94\x03" +
		"\x02\x02\x02\u0A94\u0173\x03\x02\x02\x02\u0A95\u0A93\x03\x02\x02\x02\u0A96" +
		"\u0A97\x07f\x02\x02\u0A97\u0A9A\x05\xA2R\x02\u0A98\u0A99\x07\u01F2\x02" +
		"\x02\u0A99\u0A9B\x07!\x02\x02\u0A9A\u0A98\x03\x02\x02\x02\u0A9B\u0A9C" +
		"\x03\x02\x02\x02\u0A9C\u0A9A\x03\x02\x02\x02\u0A9C\u0A9D\x03\x02\x02\x02" +
		"\u0A9D\u0AA2\x03\x02\x02\x02\u0A9E\u0A9F\x07\u01F2\x02\x02\u0A9F\u0AA1" +
		"\x05\x98M\x02\u0AA0\u0A9E\x03\x02\x02\x02\u0AA1\u0AA4\x03\x02\x02\x02" +
		"\u0AA2\u0AA0\x03\x02\x02\x02\u0AA2\u0AA3\x03\x02\x02\x02\u0AA3\u0175\x03" +
		"\x02\x02\x02\u0AA4\u0AA2\x03\x02\x02\x02\u0AA5\u0AA6\x07g\x02\x02\u0AA6" +
		"\u0AA7\x05\xA2R\x02\u0AA7\u0AA8\x07\u01F2\x02\x02\u0AA8\u0AAB\x05\xA2" +
		"R\x02\u0AA9\u0AAA\x07\u01F2\x02\x02\u0AAA\u0AAC\x07!\x02\x02\u0AAB\u0AA9" +
		"\x03\x02\x02\x02\u0AAC\u0AAD\x03\x02\x02\x02\u0AAD\u0AAB\x03\x02\x02\x02" +
		"\u0AAD\u0AAE\x03\x02\x02\x02\u0AAE\u0AB3\x03\x02\x02\x02\u0AAF\u0AB0\x07" +
		"\u01F2\x02\x02\u0AB0\u0AB2\x05\x98M\x02\u0AB1\u0AAF\x03\x02\x02\x02\u0AB2" +
		"\u0AB5\x03\x02\x02\x02\u0AB3\u0AB1\x03\x02\x02\x02\u0AB3\u0AB4\x03\x02" +
		"\x02\x02\u0AB4\u0177\x03\x02\x02\x02\u0AB5\u0AB3\x03\x02\x02\x02\u0AB6" +
		"\u0AB8\x07h\x02\x02\u0AB7\u0AB9\x07\xBF\x02\x02\u0AB8\u0AB7\x03\x02\x02" +
		"\x02\u0AB8\u0AB9\x03\x02\x02\x02\u0AB9\u0ABB\x03\x02\x02\x02\u0ABA\u0ABC" +
		"\x07\xCF\x02\x02\u0ABB\u0ABA\x03\x02\x02\x02\u0ABB\u0ABC\x03\x02\x02\x02" +
		"\u0ABC\u0ABD\x03\x02\x02\x02\u0ABD\u0AC0\x05\xB0Y\x02\u0ABE\u0ABF\x07" +
		"\u01F2\x02\x02\u0ABF\u0AC1\x05\xA2R\x02\u0AC0\u0ABE\x03\x02\x02\x02\u0AC0" +
		"\u0AC1\x03\x02\x02\x02\u0AC1\u0AC4\x03\x02\x02\x02\u0AC2\u0AC3\x07\u01F2" +
		"\x02\x02\u0AC3\u0AC5\x05\xC0a\x02\u0AC4\u0AC2\x03\x02\x02\x02\u0AC4\u0AC5" +
		"\x03\x02\x02\x02\u0AC5\u0AC8\x03\x02\x02\x02\u0AC6\u0AC7\x07\u01F2\x02" +
		"\x02\u0AC7\u0AC9\x05\xFA~\x02\u0AC8\u0AC6\x03\x02\x02\x02\u0AC8\u0AC9" +
		"\x03\x02\x02\x02\u0AC9\u0ACE\x03\x02\x02\x02\u0ACA\u0ACB\x07\u01F2\x02" +
		"\x02\u0ACB\u0ACD\x05\x98M\x02\u0ACC\u0ACA\x03\x02\x02\x02\u0ACD\u0AD0" +
		"\x03\x02\x02\x02\u0ACE\u0ACC\x03\x02\x02\x02\u0ACE\u0ACF\x03\x02\x02\x02" +
		"\u0ACF\u0179\x03\x02\x02\x02\u0AD0\u0ACE\x03\x02\x02\x02\u0AD1\u0AD3\x07" +
		"i\x02\x02\u0AD2\u0AD4\x07\xE0\x02\x02\u0AD3\u0AD2\x03\x02\x02\x02\u0AD3" +
		"\u0AD4\x03\x02\x02\x02\u0AD4\u0AD5\x03\x02\x02\x02\u0AD5\u0AD6\x05\xB0" +
		"Y\x02\u0AD6\u0AD7\x07\u01F2\x02\x02\u0AD7\u0ADA\x05\xA2R\x02\u0AD8\u0AD9" +
		"\x07\u01F2\x02\x02\u0AD9\u0ADB\x05\xC0a\x02\u0ADA\u0AD8\x03\x02\x02\x02" +
		"\u0ADA\u0ADB\x03\x02\x02\x02\u0ADB\u0AE0\x03\x02\x02\x02\u0ADC\u0ADD\x07" +
		"\u01F2\x02\x02\u0ADD\u0ADF\x05\x98M\x02\u0ADE\u0ADC\x03\x02\x02\x02\u0ADF" +
		"\u0AE2\x03\x02\x02\x02\u0AE0\u0ADE\x03\x02\x02\x02\u0AE0\u0AE1\x03\x02" +
		"\x02\x02\u0AE1\u0AFB\x03\x02\x02\x02\u0AE2\u0AE0\x03\x02\x02\x02\u0AE3" +
		"\u0AE4\x07i\x02\x02\u0AE4\u0AE6\x07\xE1\x02\x02\u0AE5\u0AE7\x07\xE0\x02" +
		"\x02\u0AE6\u0AE5\x03\x02\x02\x02\u0AE6\u0AE7\x03\x02\x02\x02\u0AE7\u0AE8" +
		"\x03\x02\x02\x02\u0AE8\u0AE9\x05\xB0Y\x02\u0AE9\u0AEA\x07\u01F2\x02\x02" +
		"\u0AEA\u0AEC\x05\xA2R\x02\u0AEB\u0AED\x05\u0144\xA3\x02\u0AEC\u0AEB\x03" +
		"\x02\x02\x02\u0AEC\u0AED\x03\x02\x02\x02\u0AED\u0AEE\x03\x02\x02\x02\u0AEE" +
		"\u0AF1\x05\u01E0\xF1\x02\u0AEF\u0AF0\x07\u01F2\x02\x02\u0AF0\u0AF2\x05" +
		"\xC0a\x02\u0AF1\u0AEF\x03\x02\x02\x02\u0AF1\u0AF2\x03\x02\x02\x02\u0AF2" +
		"\u0AF7\x03\x02\x02\x02\u0AF3\u0AF4\x07\u01F2\x02\x02\u0AF4\u0AF6\x05\x98" +
		"M\x02\u0AF5\u0AF3\x03\x02\x02\x02\u0AF6\u0AF9\x03\x02\x02\x02\u0AF7\u0AF5" +
		"\x03\x02\x02\x02\u0AF7\u0AF8\x03\x02\x02\x02\u0AF8\u0AFB\x03\x02\x02\x02" +
		"\u0AF9\u0AF7\x03\x02\x02\x02\u0AFA\u0AD1\x03\x02\x02\x02\u0AFA\u0AE3\x03" +
		"\x02\x02\x02\u0AFB\u017B\x03\x02\x02\x02\u0AFC\u0AFE\x07j\x02\x02\u0AFD" +
		"\u0AFF\x07\xE3\x02\x02\u0AFE\u0AFD\x03\x02\x02\x02\u0AFE\u0AFF\x03\x02" +
		"\x02\x02\u0AFF\u0B01\x03\x02\x02\x02\u0B00\u0B02\x07\xE0\x02\x02\u0B01" +
		"\u0B00\x03\x02\x02\x02\u0B01\u0B02\x03\x02\x02\x02\u0B02\u0B03\x03\x02" +
		"\x02\x02\u0B03\u0B04\x05\xA2R\x02\u0B04\u0B05\x07\u01F2\x02\x02\u0B05" +
		"\u0B06\x05\xA2R\x02\u0B06\u0B07\x07\u01F2\x02\x02\u0B07\u0B09\x05\xA2" +
		"R\x02\u0B08\u0B0A\x05\u0144\xA3\x02\u0B09\u0B08\x03\x02\x02\x02\u0B09" +
		"\u0B0A\x03\x02\x02\x02\u0B0A\u0B0B\x03\x02\x02\x02\u0B0B\u0B0C\x05\u01E0" +
		"\xF1\x02\u0B0C\u0B0F\x05\u01E0\xF1\x02\u0B0D\u0B0E\x07\u01F2\x02\x02\u0B0E" +
		"\u0B10\x05\xC0a\x02\u0B0F\u0B0D\x03\x02\x02\x02\u0B0F\u0B10\x03\x02\x02" +
		"\x02\u0B10\u0B15\x03\x02\x02\x02\u0B11\u0B12\x07\u01F2\x02\x02\u0B12\u0B14" +
		"\x05\x98M\x02\u0B13\u0B11\x03\x02\x02\x02\u0B14\u0B17\x03\x02\x02\x02" +
		"\u0B15\u0B13\x03\x02\x02\x02\u0B15\u0B16\x03\x02\x02\x02\u0B16\u017D\x03" +
		"\x02\x02\x02\u0B17\u0B15\x03\x02\x02\x02\u0B18\u0B1A\x07k\x02\x02\u0B19" +
		"\u0B1B\x07\xE0\x02\x02\u0B1A\u0B19\x03\x02\x02\x02\u0B1A\u0B1B\x03\x02" +
		"\x02\x02\u0B1B\u0B1C\x03\x02\x02\x02\u0B1C\u0B1D\x05\u01E6\xF4\x02\u0B1D" +
		"\u0B1E\x05\xA2R\x02\u0B1E\u0B1F\x07\u01F2\x02\x02\u0B1F\u0B21\x05\xA2" +
		"R\x02\u0B20\u0B22\x05\u0144\xA3\x02\u0B21\u0B20\x03\x02\x02\x02\u0B21" +
		"\u0B22\x03\x02\x02\x02\u0B22\u0B23\x03\x02\x02\x02\u0B23\u0B26\x05\u01E0" +
		"\xF1\x02\u0B24\u0B25\x07\u01F2\x02\x02\u0B25\u0B27\x05\xC0a\x02\u0B26" +
		"\u0B24\x03\x02\x02\x02\u0B26\u0B27\x03\x02\x02\x02\u0B27\u0B2C\x03\x02" +
		"\x02\x02\u0B28\u0B29\x07\u01F2\x02\x02\u0B29\u0B2B\x05\x98M\x02\u0B2A" +
		"\u0B28\x03\x02\x02\x02\u0B2B\u0B2E\x03\x02\x02\x02\u0B2C\u0B2A\x03\x02" +
		"\x02\x02\u0B2C\u0B2D\x03\x02\x02\x02\u0B2D\u017F\x03\x02\x02\x02\u0B2E" +
		"\u0B2C\x03\x02\x02\x02\u0B2F\u0B31\x07\xDD\x02\x02\u0B30\u0B32\x05\u01D6" +
		"\xEC\x02\u0B31\u0B30\x03\x02\x02\x02\u0B31\u0B32\x03\x02\x02\x02\u0B32" +
		"\u0B33\x03\x02\x02\x02\u0B33\u0B34\x05\xB0Y\x02\u0B34\u0B35\x07\u01F2" +
		"\x02\x02\u0B35\u0B3A\x05\xA2R\x02\u0B36\u0B37\x07\u01F2\x02\x02\u0B37" +
		"\u0B39\x05\xA2R\x02\u0B38\u0B36\x03\x02\x02\x02\u0B39\u0B3C\x03\x02\x02" +
		"\x02\u0B3A\u0B38\x03\x02\x02\x02\u0B3A\u0B3B\x03\x02\x02\x02\u0B3B\u0B41" +
		"\x03\x02\x02\x02\u0B3C\u0B3A\x03\x02\x02\x02\u0B3D\u0B3E\x07\u01F2\x02" +
		"\x02\u0B3E\u0B40\x05\x98M\x02\u0B3F\u0B3D\x03\x02\x02\x02\u0B40\u0B43" +
		"\x03\x02\x02\x02\u0B41\u0B3F\x03\x02\x02\x02\u0B41\u0B42\x03\x02\x02\x02" +
		"\u0B42\u0181\x03\x02\x02\x02\u0B43\u0B41\x03\x02\x02\x02\u0B44\u0B45\x07" +
		"D\x02\x02\u0B45\u0B46\x05\xA2R\x02\u0B46\u0B47\x07\x98\x02\x02\u0B47\u0B4C" +
		"\x05\xB0Y\x02\u0B48\u0B49\x07\u01F2\x02\x02\u0B49\u0B4B\x05\x98M\x02\u0B4A" +
		"\u0B48\x03\x02\x02\x02\u0B4B\u0B4E\x03\x02\x02\x02\u0B4C\u0B4A\x03\x02" +
		"\x02\x02\u0B4C\u0B4D\x03\x02\x02\x02\u0B4D\u0183\x03\x02\x02\x02\u0B4E" +
		"\u0B4C\x03\x02\x02\x02\u0B4F\u0B50\x07E\x02\x02\u0B50\u0B51\x05\xA2R\x02" +
		"\u0B51\u0B52\x07\x98\x02\x02\u0B52\u0B57\x05\xB0Y\x02\u0B53\u0B54\x07" +
		"\u01F2\x02\x02\u0B54\u0B56\x05\x98M\x02\u0B55\u0B53\x03\x02\x02\x02\u0B56" +
		"\u0B59\x03\x02\x02\x02\u0B57\u0B55\x03\x02\x02\x02\u0B57\u0B58\x03\x02" +
		"\x02\x02\u0B58\u0185\x03\x02\x02\x02\u0B59\u0B57\x03\x02\x02\x02\u0B5A" +
		"\u0B5B\x07F\x02\x02\u0B5B\u0B5C\x05\xA2R\x02\u0B5C\u0B5D\x07\x98\x02\x02" +
		"\u0B5D\u0B62\x05\xB0Y\x02\u0B5E\u0B5F\x07\u01F2\x02\x02\u0B5F\u0B61\x05" +
		"\x98M\x02\u0B60\u0B5E\x03\x02\x02\x02\u0B61\u0B64\x03\x02\x02\x02\u0B62" +
		"\u0B60\x03\x02\x02\x02\u0B62\u0B63\x03\x02\x02\x02\u0B63\u0187\x03\x02" +
		"\x02\x02\u0B64\u0B62\x03\x02\x02\x02\u0B65\u0B66\x07G\x02\x02\u0B66\u0B67" +
		"\x05\xA2R\x02\u0B67\u0B68\x07\x98\x02\x02\u0B68\u0B6D\x05\xB0Y\x02\u0B69" +
		"\u0B6A\x07\u01F2\x02\x02\u0B6A\u0B6C\x05\x98M\x02\u0B6B\u0B69\x03\x02" +
		"\x02\x02\u0B6C\u0B6F\x03\x02\x02\x02\u0B6D\u0B6B\x03\x02\x02\x02\u0B6D" +
		"\u0B6E\x03\x02\x02\x02\u0B6E\u0189\x03\x02\x02\x02\u0B6F\u0B6D\x03\x02" +
		"\x02\x02\u0B70\u0B71\x07H\x02\x02\u0B71\u0B72\x05\xA2R\x02\u0B72\u0B73" +
		"\x07\x98\x02\x02\u0B73\u0B78\x05\xB0Y\x02\u0B74\u0B75\x07\u01F2\x02\x02" +
		"\u0B75\u0B77\x05\x98M\x02\u0B76\u0B74\x03\x02\x02\x02\u0B77\u0B7A\x03" +
		"\x02\x02\x02\u0B78\u0B76\x03\x02\x02\x02\u0B78\u0B79\x03\x02\x02\x02\u0B79" +
		"\u018B\x03\x02\x02\x02\u0B7A\u0B78\x03\x02\x02\x02\u0B7B\u0B7C\x07I\x02" +
		"\x02\u0B7C\u0B7D\x05\xA2R\x02\u0B7D\u0B7E\x07\x98\x02\x02\u0B7E\u0B83" +
		"\x05\xB0Y\x02\u0B7F\u0B80\x07\u01F2\x02\x02\u0B80\u0B82\x05\x98M\x02\u0B81" +
		"\u0B7F\x03\x02\x02\x02\u0B82\u0B85\x03\x02\x02\x02\u0B83\u0B81\x03\x02" +
		"\x02\x02\u0B83\u0B84\x03\x02\x02\x02\u0B84\u018D\x03\x02\x02\x02\u0B85" +
		"\u0B83\x03\x02\x02\x02\u0B86\u0B87\x07J\x02\x02\u0B87\u0B88\x05\xA2R\x02" +
		"\u0B88\u0B89\x07\x98\x02\x02\u0B89\u0B8E\x05\xB0Y\x02\u0B8A\u0B8B\x07" +
		"\u01F2\x02\x02\u0B8B\u0B8D\x05\x98M\x02\u0B8C\u0B8A\x03\x02\x02\x02\u0B8D" +
		"\u0B90\x03\x02\x02\x02\u0B8E\u0B8C\x03\x02\x02\x02\u0B8E\u0B8F\x03\x02" +
		"\x02\x02\u0B8F\u018F\x03\x02\x02\x02\u0B90\u0B8E\x03\x02\x02\x02\u0B91" +
		"\u0B92\x07K\x02\x02\u0B92\u0B93\x05\xA2R\x02\u0B93\u0B94\x07\x98\x02\x02" +
		"\u0B94\u0B99\x05\xB0Y\x02\u0B95\u0B96\x07\u01F2\x02\x02\u0B96\u0B98\x05" +
		"\x98M\x02\u0B97\u0B95\x03\x02\x02\x02\u0B98\u0B9B\x03\x02\x02\x02\u0B99" +
		"\u0B97\x03\x02\x02\x02\u0B99\u0B9A\x03\x02\x02\x02\u0B9A\u0191\x03\x02" +
		"\x02\x02\u0B9B\u0B99\x03\x02\x02\x02\u0B9C\u0B9D\x07L\x02\x02\u0B9D\u0B9E" +
		"\x05\xA2R\x02\u0B9E\u0B9F\x07\x98\x02\x02\u0B9F\u0BA4\x05\xB0Y\x02\u0BA0" +
		"\u0BA1\x07\u01F2\x02\x02\u0BA1\u0BA3\x05\x98M\x02\u0BA2\u0BA0\x03\x02" +
		"\x02\x02\u0BA3\u0BA6\x03\x02\x02\x02\u0BA4\u0BA2\x03\x02\x02\x02\u0BA4" +
		"\u0BA5\x03\x02\x02\x02\u0BA5\u0193\x03\x02\x02\x02\u0BA6\u0BA4\x03\x02" +
		"\x02\x02\u0BA7\u0BA8\x07M\x02\x02\u0BA8\u0BA9\x05\xA2R\x02\u0BA9\u0BAA" +
		"\x07\x98\x02\x02\u0BAA\u0BAF\x05\xB0Y\x02\u0BAB\u0BAC\x07\u01F2\x02\x02" +
		"\u0BAC\u0BAE\x05\x98M\x02\u0BAD\u0BAB\x03\x02\x02\x02\u0BAE\u0BB1\x03" +
		"\x02\x02\x02\u0BAF\u0BAD\x03\x02\x02\x02\u0BAF\u0BB0\x03\x02\x02\x02\u0BB0" +
		"\u0195\x03\x02\x02\x02\u0BB1\u0BAF\x03\x02\x02\x02\u0BB2\u0BB3\x07@\x02" +
		"\x02\u0BB3\u0BB4\x05\xA2R\x02\u0BB4\u0BB5\x07\x98\x02\x02\u0BB5\u0BBA" +
		"\x05\xB0Y\x02\u0BB6\u0BB7\x07\u01F2\x02\x02\u0BB7\u0BB9\x05\x98M\x02\u0BB8" +
		"\u0BB6\x03\x02\x02\x02\u0BB9\u0BBC\x03\x02\x02\x02\u0BBA\u0BB8\x03\x02" +
		"\x02\x02\u0BBA\u0BBB\x03\x02\x02\x02\u0BBB\u0197\x03\x02\x02\x02\u0BBC" +
		"\u0BBA\x03\x02\x02\x02\u0BBD\u0BBE\x07>\x02\x02\u0BBE\u0BBF\x05\xA2R\x02" +
		"\u0BBF\u0BC0\x07\x98\x02\x02\u0BC0\u0BC5\x05\xB0Y\x02\u0BC1\u0BC2\x07" +
		"\u01F2\x02\x02\u0BC2\u0BC4\x05\x98M\x02\u0BC3\u0BC1\x03\x02\x02\x02\u0BC4" +
		"\u0BC7\x03\x02\x02\x02\u0BC5\u0BC3\x03\x02\x02\x02\u0BC5\u0BC6\x03\x02" +
		"\x02\x02\u0BC6\u0199\x03\x02\x02\x02\u0BC7\u0BC5\x03\x02\x02\x02\u0BC8" +
		"\u0BC9\x07?\x02\x02\u0BC9\u0BCA\x05\xA2R\x02\u0BCA\u0BCB\x07\x98\x02\x02" +
		"\u0BCB\u0BD0\x05\xB0Y\x02\u0BCC\u0BCD\x07\u01F2\x02\x02\u0BCD\u0BCF\x05" +
		"\x98M\x02\u0BCE\u0BCC\x03\x02\x02\x02\u0BCF\u0BD2\x03\x02\x02\x02\u0BD0" +
		"\u0BCE\x03\x02\x02\x02\u0BD0\u0BD1\x03\x02\x02\x02\u0BD1\u019B\x03\x02" +
		"\x02\x02\u0BD2\u0BD0\x03\x02\x02\x02\u0BD3\u0BD4\x07A\x02\x02\u0BD4\u0BD5" +
		"\x05\u01DC\xEF\x02\u0BD5\u0BD6\x05\xA2R\x02\u0BD6\u0BD7\x07\u01F2\x02" +
		"\x02\u0BD7\u0BDC\x05\xA4S\x02\u0BD8\u0BD9\x07\u01F2\x02\x02\u0BD9\u0BDB" +
		"\x05\x98M\x02\u0BDA\u0BD8\x03\x02\x02\x02\u0BDB\u0BDE\x03\x02\x02\x02" +
		"\u0BDC\u0BDA\x03\x02\x02\x02\u0BDC\u0BDD\x03\x02\x02\x02\u0BDD\u019D\x03" +
		"\x02\x02\x02\u0BDE\u0BDC\x03\x02\x02\x02\u0BDF\u0BE3\x07B\x02\x02\u0BE0" +
		"\u0BE2\x05\u01E4\xF3\x02\u0BE1\u0BE0\x03\x02\x02\x02\u0BE2\u0BE5\x03\x02" +
		"\x02\x02\u0BE3\u0BE1\x03\x02\x02\x02\u0BE3\u0BE4\x03\x02\x02\x02\u0BE4" +
		"\u0BE6\x03\x02\x02\x02\u0BE5\u0BE3\x03\x02\x02\x02\u0BE6\u0BE7\x05\u01DE" +
		"\xF0\x02\u0BE7\u0BE8\x05\xA2R\x02\u0BE8\u0BE9\x07\u01F2\x02\x02\u0BE9" +
		"\u0BEE\x05\xA4S\x02\u0BEA\u0BEB\x07\u01F2\x02\x02\u0BEB\u0BED\x05\x98" +
		"M\x02\u0BEC\u0BEA\x03\x02\x02\x02\u0BED\u0BF0\x03\x02\x02\x02\u0BEE\u0BEC" +
		"\x03\x02\x02\x02\u0BEE\u0BEF\x03\x02\x02\x02\u0BEF\u019F\x03\x02\x02\x02" +
		"\u0BF0\u0BEE\x03\x02\x02\x02\u0BF1\u0BF5\x07l\x02\x02\u0BF2\u0BF4\x05" +
		"\u01E4\xF3\x02\u0BF3\u0BF2\x03\x02\x02\x02\u0BF4\u0BF7\x03\x02\x02\x02" +
		"\u0BF5\u0BF3\x03\x02\x02\x02\u0BF5\u0BF6\x03\x02\x02\x02\u0BF6\u0BF8\x03" +
		"\x02\x02\x02\u0BF7\u0BF5\x03\x02\x02\x02\u0BF8\u0BF9\x05\xB0Y\x02\u0BF9" +
		"\u0BFE\x05\u01B0\xD9\x02\u0BFA\u0BFB\x07\u01F2\x02\x02\u0BFB\u0BFD\x05" +
		"\u01B0\xD9\x02\u0BFC\u0BFA\x03\x02\x02\x02\u0BFD\u0C00\x03\x02\x02\x02" +
		"\u0BFE\u0BFC\x03\x02\x02\x02\u0BFE\u0BFF\x03\x02\x02\x02\u0BFF\u0C05\x03" +
		"\x02\x02\x02\u0C00\u0BFE\x03\x02\x02\x02\u0C01\u0C02\x07\u01F2\x02\x02" +
		"\u0C02\u0C04\x05\x98M\x02\u0C03\u0C01\x03\x02\x02\x02\u0C04\u0C07\x03" +
		"\x02\x02\x02\u0C05\u0C03\x03\x02\x02\x02\u0C05\u0C06\x03\x02\x02\x02\u0C06" +
		"\u01A1\x03\x02\x02\x02\u0C07\u0C05\x03\x02\x02\x02\u0C08\u0C0C\x07C\x02" +
		"\x02\u0C09\u0C0B\x05\u01E4\xF3\x02\u0C0A\u0C09\x03\x02\x02\x02\u0C0B\u0C0E" +
		"\x03\x02\x02\x02\u0C0C\u0C0A\x03\x02\x02\x02\u0C0C\u0C0D\x03\x02\x02\x02" +
		"\u0C0D\u0C0F\x03\x02\x02\x02\u0C0E\u0C0C\x03\x02\x02\x02\u0C0F\u0C10\x05" +
		"\xA2R\x02\u0C10\u0C11\x07\u01F2\x02\x02\u0C11\u0C12\x05\xA2R\x02\u0C12" +
		"\u0C13\x07\u01F2\x02\x02\u0C13\u0C18\x05\xA2R\x02\u0C14\u0C15\x07\u01F2" +
		"\x02\x02\u0C15\u0C17\x05\x98M\x02\u0C16\u0C14\x03\x02\x02\x02\u0C17\u0C1A" +
		"\x03\x02\x02\x02\u0C18\u0C16\x03\x02\x02\x02\u0C18\u0C19\x03\x02\x02\x02" +
		"\u0C19\u01A3\x03\x02\x02\x02\u0C1A\u0C18\x03\x02\x02\x02\u0C1B\u0C1C\x07" +
		"m\x02\x02\u0C1C\u0C1D\x05\xA2R\x02\u0C1D\u01A5\x03\x02\x02\x02\u0C1E\u0C20" +
		"\t\n\x02\x02\u0C1F\u0C1E\x03\x02\x02\x02\u0C1F\u0C20\x03\x02\x02\x02\u0C20" +
		"\u0C21\x03\x02\x02\x02\u0C21\u0C25\x07n\x02\x02\u0C22\u0C24\x05\u01E4" +
		"\xF3\x02\u0C23\u0C22\x03\x02\x02\x02\u0C24\u0C27\x03\x02\x02\x02\u0C25" +
		"\u0C23\x03\x02\x02\x02\u0C25\u0C26\x03\x02\x02\x02\u0C26\u0C29\x03\x02" +
		"\x02\x02\u0C27\u0C25\x03\x02\x02\x02\u0C28\u0C2A\x05,\x17\x02\u0C29\u0C28" +
		"\x03\x02\x02\x02\u0C29\u0C2A\x03\x02\x02\x02\u0C2A\u0C2E\x03\x02\x02\x02" +
		"\u0C2B\u0C2D\x05:\x1E\x02\u0C2C\u0C2B\x03\x02\x02\x02\u0C2D\u0C30\x03" +
		"\x02\x02\x02\u0C2E\u0C2C\x03\x02\x02\x02\u0C2E\u0C2F\x03\x02\x02\x02\u0C2F" +
		"\u0C32\x03\x02\x02\x02\u0C30\u0C2E\x03\x02\x02\x02\u0C31\u0C33\x05\xFA" +
		"~\x02\u0C32\u0C31\x03\x02\x02\x02\u0C32\u0C33\x03\x02\x02\x02\u0C33\u0C34" +
		"\x03\x02\x02\x02\u0C34\u0C35\x05\xB0Y\x02\u0C35\u0C36\x05\xA4S\x02\u0C36" +
		"\u0C37\x07\u01F9\x02\x02\u0C37\u0C38\x05\u01B6\xDC\x02\u0C38\u0C3C\x07" +
		"\u01FA\x02\x02\u0C39\u0C3B\x05\xAEX\x02\u0C3A\u0C39\x03\x02\x02\x02\u0C3B" +
		"\u0C3E\x03\x02\x02\x02\u0C3C\u0C3A\x03\x02\x02\x02\u0C3C\u0C3D\x03\x02" +
		"\x02\x02\u0C3D\u0C4A\x03\x02\x02\x02\u0C3E\u0C3C\x03\x02\x02\x02\u0C3F" +
		"\u0C40\x07\u01FB\x02\x02\u0C40\u0C45\x05\u01B2\xDA\x02\u0C41\u0C42\x07" +
		"\u01F2\x02\x02\u0C42\u0C44\x05\u01B2\xDA\x02\u0C43\u0C41\x03\x02\x02\x02" +
		"\u0C44\u0C47\x03\x02\x02\x02\u0C45\u0C43\x03\x02\x02\x02\u0C45\u0C46\x03" +
		"\x02\x02\x02\u0C46\u0C48\x03\x02\x02\x02\u0C47\u0C45\x03\x02\x02\x02\u0C48" +
		"\u0C49\x07\u01FC\x02\x02\u0C49\u0C4B\x03\x02\x02\x02\u0C4A\u0C3F\x03\x02" +
		"\x02\x02\u0C4A\u0C4B\x03\x02\x02\x02\u0C4B\u0C50\x03\x02\x02\x02\u0C4C" +
		"\u0C4D\x07\u01F2\x02\x02\u0C4D\u0C4F\x05\x98M\x02\u0C4E\u0C4C\x03\x02" +
		"\x02\x02\u0C4F\u0C52\x03\x02\x02\x02\u0C50\u0C4E\x03\x02\x02\x02\u0C50" +
		"\u0C51\x03\x02\x02\x02\u0C51\u01A7\x03\x02\x02\x02\u0C52\u0C50\x03\x02" +
		"\x02\x02\u0C53\u0C54\x07o\x02\x02\u0C54\u0C55\x05\xA2R\x02\u0C55\u0C56" +
		"\x07\u01F2\x02\x02\u0C56\u0C5B\x05\xB0Y\x02\u0C57\u0C58\x07\u01F2\x02" +
		"\x02\u0C58\u0C5A\x05\x98M\x02\u0C59\u0C57\x03\x02\x02\x02\u0C5A\u0C5D" +
		"\x03\x02\x02\x02\u0C5B\u0C59\x03\x02\x02\x02\u0C5B\u0C5C\x03\x02\x02\x02" +
		"\u0C5C\u01A9\x03\x02\x02\x02\u0C5D\u0C5B\x03\x02\x02\x02\u0C5E\u0C5F\x07" +
		"}\x02\x02\u0C5F\u0C61\x05\xB0Y\x02\u0C60\u0C62\x07\xE7\x02\x02\u0C61\u0C60" +
		"\x03\x02\x02\x02\u0C61\u0C62\x03\x02\x02\x02\u0C62\u0C66\x03\x02\x02\x02" +
		"\u0C63\u0C65\x05\u01B4\xDB\x02\u0C64\u0C63\x03\x02\x02\x02\u0C65\u0C68" +
		"\x03\x02\x02\x02\u0C66\u0C64\x03\x02\x02\x02\u0C66\u0C67\x03\x02\x02\x02" +
		"\u0C67\u0C6D\x03\x02\x02\x02\u0C68\u0C66\x03\x02\x02\x02\u0C69\u0C6A\x07" +
		"\u01F2\x02\x02\u0C6A\u0C6C\x05\x98M\x02\u0C6B\u0C69\x03\x02\x02\x02\u0C6C" +
		"\u0C6F\x03\x02\x02\x02\u0C6D\u0C6B\x03\x02\x02\x02\u0C6D\u0C6E\x03\x02" +
		"\x02\x02\u0C6E\u01AB\x03\x02\x02\x02\u0C6F\u0C6D\x03\x02\x02\x02\u0C70" +
		"\u0C71\x07p\x02\x02\u0C71\u0C72\x07\x9A\x02\x02\u0C72\u0C73\x07%\x02\x02" +
		"\u0C73\u0C7C\x07\u01FB\x02\x02\u0C74\u0C79\x05\u01BA\xDE\x02\u0C75\u0C76" +
		"\x07\u01F2\x02\x02\u0C76\u0C78\x05\u01BA\xDE\x02\u0C77\u0C75\x03\x02\x02" +
		"\x02\u0C78\u0C7B\x03\x02\x02\x02\u0C79\u0C77\x03\x02\x02\x02\u0C79\u0C7A" +
		"\x03\x02\x02\x02\u0C7A\u0C7D\x03\x02\x02\x02\u0C7B\u0C79\x03\x02\x02\x02" +
		"\u0C7C\u0C74\x03\x02\x02\x02\u0C7C\u0C7D\x03\x02\x02\x02\u0C7D\u0C7E\x03" +
		"\x02\x02\x02\u0C7E\u0C83\x07\u01FC\x02\x02\u0C7F\u0C80\x07\u01F2\x02\x02" +
		"\u0C80\u0C82\x05\x98M\x02\u0C81\u0C7F\x03\x02\x02\x02\u0C82\u0C85\x03" +
		"\x02\x02\x02\u0C83\u0C81\x03\x02\x02\x02\u0C83\u0C84\x03\x02\x02\x02\u0C84" +
		"\u01AD\x03\x02\x02\x02\u0C85\u0C83\x03\x02\x02\x02\u0C86\u0C87\x07q\x02" +
		"\x02\u0C87\u0C88\x07\x9A\x02\x02\u0C88\u0C89\x05\u01BC\xDF\x02\u0C89\u0C92" +
		"\x07\u01FB\x02\x02\u0C8A\u0C8F\x05\u01BA\xDE\x02\u0C8B\u0C8C\x07\u01F2" +
		"\x02\x02\u0C8C\u0C8E\x05\u01BA\xDE\x02\u0C8D\u0C8B\x03\x02\x02\x02\u0C8E" +
		"\u0C91\x03\x02\x02\x02\u0C8F\u0C8D\x03\x02\x02\x02\u0C8F\u0C90\x03\x02" +
		"\x02\x02\u0C90\u0C93\x03\x02\x02\x02\u0C91\u0C8F\x03\x02\x02\x02\u0C92" +
		"\u0C8A\x03\x02\x02\x02\u0C92\u0C93\x03\x02\x02\x02\u0C93\u0C94\x03\x02" +
		"\x02\x02\u0C94\u0C99\x07\u01FC\x02\x02\u0C95\u0C96\x07\u01F2\x02\x02\u0C96" +
		"\u0C98\x05\x98M\x02\u0C97\u0C95\x03\x02\x02\x02\u0C98\u0C9B\x03\x02\x02" +
		"\x02\u0C99\u0C97\x03\x02\x02\x02\u0C99\u0C9A\x03\x02\x02\x02\u0C9A\u01AF" +
		"\x03\x02\x02\x02\u0C9B\u0C99\x03\x02\x02\x02\u0C9C\u0C9D\x07\u01FB\x02" +
		"\x02\u0C9D\u0C9E\x05\xA4S\x02\u0C9E\u0C9F\x07\u01F2\x02\x02\u0C9F\u0CA0" +
		"\x07%\x02\x02\u0CA0\u0CA1\x07\u01FC\x02\x02\u0CA1\u01B1\x03\x02\x02\x02" +
		"\u0CA2\u0CA3\x07#\x02\x02\u0CA3\u0CAC\x07\u01F9\x02\x02\u0CA4\u0CA9\x05" +
		"\xA2R\x02\u0CA5\u0CA6\x07\u01F2\x02\x02\u0CA6\u0CA8\x05\xA2R\x02\u0CA7" +
		"\u0CA5\x03\x02\x02\x02\u0CA8\u0CAB\x03\x02\x02\x02\u0CA9\u0CA7\x03\x02" +
		"\x02\x02\u0CA9\u0CAA\x03\x02\x02\x02\u0CAA\u0CAD\x03\x02\x02\x02\u0CAB" +
		"\u0CA9\x03\x02\x02\x02\u0CAC\u0CA4\x03\x02\x02\x02\u0CAC\u0CAD\x03\x02" +
		"\x02\x02\u0CAD\u0CAE\x03\x02\x02\x02\u0CAE\u0CAF\x07\u01FA\x02\x02\u0CAF" +
		"\u01B3\x03\x02\x02\x02\u0CB0\u0CB1\t\v\x02\x02\u0CB1\u0CB2\x05\xA2R\x02" +
		"\u0CB2\u01B5\x03\x02\x02\x02\u0CB3\u0CB5\x07\u01FD\x02\x02\u0CB4\u0CB3" +
		"\x03\x02\x02\x02\u0CB4\u0CB5";
	private static readonly _serializedATNSegment6: string =
		"\x03\x02\x02\x02\u0CB5\u0CC3\x03\x02\x02\x02\u0CB6\u0CBB\x05\u01B8\xDD" +
		"\x02\u0CB7\u0CB8\x07\u01F2\x02\x02\u0CB8\u0CBA\x05\u01B8\xDD\x02\u0CB9" +
		"\u0CB7\x03\x02\x02\x02\u0CBA\u0CBD\x03\x02\x02\x02\u0CBB\u0CB9\x03\x02" +
		"\x02\x02\u0CBB\u0CBC\x03\x02\x02\x02\u0CBC\u0CC0\x03\x02\x02\x02\u0CBD" +
		"\u0CBB\x03\x02\x02\x02\u0CBE\u0CBF\x07\u01F2\x02\x02\u0CBF\u0CC1\x07\u01FD" +
		"\x02\x02\u0CC0\u0CBE\x03\x02\x02\x02\u0CC0\u0CC1\x03\x02\x02\x02\u0CC1" +
		"\u0CC3\x03\x02\x02\x02\u0CC2\u0CB4\x03\x02\x02\x02\u0CC2\u0CB6\x03\x02" +
		"\x02\x02\u0CC3\u01B7\x03\x02\x02\x02\u0CC4\u0CC8\x05\xE2r\x02\u0CC5\u0CC7" +
		"\x05\xBA^\x02\u0CC6\u0CC5\x03\x02\x02\x02\u0CC7\u0CCA\x03\x02\x02\x02" +
		"\u0CC8\u0CC6\x03\x02\x02\x02\u0CC8\u0CC9\x03\x02\x02\x02\u0CC9\u0CCB\x03" +
		"\x02\x02\x02\u0CCA\u0CC8\x03\x02\x02\x02\u0CCB\u0CCC\x05\xA4S\x02\u0CCC" +
		"\u0CD1\x03\x02\x02\x02\u0CCD\u0CCE\x05\xFE\x80\x02\u0CCE\u0CCF\x05\x9E" +
		"P\x02\u0CCF\u0CD1\x03\x02\x02\x02\u0CD0\u0CC4\x03\x02\x02\x02\u0CD0\u0CCD" +
		"\x03\x02\x02\x02\u0CD1\u01B9\x03\x02\x02\x02\u0CD2\u0CD3\x05\xE2r\x02" +
		"\u0CD3\u0CD4\x05\xA4S\x02\u0CD4\u0CD9\x03\x02\x02\x02\u0CD5\u0CD6\x05" +
		"\xFE\x80\x02\u0CD6\u0CD7\x05\x9EP\x02\u0CD7\u0CD9\x03\x02\x02\x02\u0CD8" +
		"\u0CD2\x03\x02\x02\x02\u0CD8\u0CD5\x03\x02\x02\x02\u0CD9\u01BB\x03\x02" +
		"\x02\x02\u0CDA\u0CDD\x05\x80A\x02\u0CDB\u0CDD\x07%\x02\x02\u0CDC\u0CDA" +
		"\x03\x02\x02\x02\u0CDC\u0CDB\x03\x02\x02\x02\u0CDD\u01BD\x03\x02\x02\x02" +
		"\u0CDE\u0CDF\t\f\x02\x02\u0CDF\u01BF\x03\x02\x02\x02\u0CE0\u0CE1\t\r\x02" +
		"\x02\u0CE1\u01C1\x03\x02\x02\x02\u0CE2\u0CE5\x05\u01C0\xE1\x02\u0CE3\u0CE5" +
		"\x05\u01BE\xE0\x02\u0CE4\u0CE2\x03\x02\x02\x02\u0CE4\u0CE3\x03\x02\x02" +
		"\x02\u0CE5\u01C3\x03\x02\x02\x02\u0CE6\u0CE7\t\x0E\x02\x02\u0CE7\u01C5" +
		"\x03\x02\x02\x02\u0CE8\u0CE9\t\x0F\x02\x02\u0CE9\u01C7\x03\x02\x02\x02" +
		"\u0CEA\u0CEB\t\x10\x02\x02\u0CEB\u01C9\x03\x02\x02\x02\u0CEC\u0CED\t\x11" +
		"\x02\x02\u0CED\u01CB\x03\x02\x02\x02\u0CEE\u0CEF\t\x12\x02\x02\u0CEF\u01CD" +
		"\x03\x02\x02\x02\u0CF0\u0CF1\x07\u0100\x02\x02\u0CF1\u01CF\x03\x02\x02" +
		"\x02\u0CF2\u0CF3\t\x13\x02\x02\u0CF3\u01D1\x03\x02\x02\x02\u0CF4\u0CF5" +
		"\t\x14\x02\x02\u0CF5\u01D3\x03\x02\x02\x02\u0CF6\u0CF7\x07\u0135\x02\x02" +
		"\u0CF7\u01D5\x03\x02\x02\x02\u0CF8\u0CF9\x07\u0136\x02\x02\u0CF9\u01D7" +
		"\x03\x02\x02\x02\u0CFA\u0CFB\t\x15\x02\x02\u0CFB\u01D9\x03\x02\x02\x02" +
		"\u0CFC\u0CFD\t\x16\x02\x02\u0CFD\u01DB\x03\x02\x02\x02\u0CFE\u0CFF\t\x17" +
		"\x02\x02\u0CFF\u01DD\x03\x02\x02\x02\u0D00\u0D01\t\x18\x02\x02\u0D01\u01DF" +
		"\x03\x02\x02\x02\u0D02\u0D03\t\x19\x02\x02\u0D03\u01E1\x03\x02\x02\x02" +
		"\u0D04\u0D05\t\x1A\x02\x02\u0D05\u01E3\x03\x02\x02\x02\u0D06\u0D07\t\x1B" +
		"\x02\x02\u0D07\u01E5\x03\x02\x02\x02\u0D08\u0D09\t\x1C\x02\x02\u0D09\u01E7" +
		"\x03\x02\x02\x02\u0D0A\u0D0B\t\x1D\x02\x02\u0D0B\u01E9\x03\x02\x02\x02" +
		"\u0D0C\u0D29\x05\u01EC\xF7\x02\u0D0D\u0D29\x05\u01EE\xF8\x02\u0D0E\u0D29" +
		"\x05\u01F0\xF9\x02\u0D0F\u0D29\x05\u01F2\xFA\x02\u0D10\u0D29\x05\u01F6" +
		"\xFC\x02\u0D11\u0D29\x05\u01FA\xFE\x02\u0D12\u0D29\x05j6\x02\u0D13\u0D29" +
		"\x05\u01FE\u0100\x02\u0D14\u0D29\x05\u0202\u0102\x02\u0D15\u0D29\x05\u0206" +
		"\u0104\x02\u0D16\u0D29\x05\u020A\u0106\x02\u0D17\u0D29\x05\u020E\u0108" +
		"\x02\u0D18\u0D29\x05\u0212\u010A\x02\u0D19\u0D29\x05\u0216\u010C\x02\u0D1A" +
		"\u0D29\x05\u021A\u010E\x02\u0D1B\u0D29\x05\u021E\u0110\x02\u0D1C\u0D29" +
		"\x05\u0222\u0112\x02\u0D1D\u0D29\x05\u0226\u0114\x02\u0D1E\u0D29\x05\u022A" +
		"\u0116\x02\u0D1F\u0D29\x05\u022E\u0118\x02\u0D20\u0D29\x05\u0232\u011A" +
		"\x02\u0D21\u0D29\x05\u0236\u011C\x02\u0D22\u0D29\x05\u023A\u011E\x02\u0D23" +
		"\u0D29\x05\u023E\u0120\x02\u0D24\u0D29\x05\u0242\u0122\x02\u0D25\u0D29" +
		"\x05\u0244\u0123\x02\u0D26\u0D29\x05\u0246\u0124\x02\u0D27\u0D29\x05\u0248" +
		"\u0125\x02\u0D28\u0D0C\x03\x02\x02\x02\u0D28\u0D0D\x03\x02\x02\x02\u0D28" +
		"\u0D0E\x03\x02\x02\x02\u0D28\u0D0F\x03\x02\x02\x02\u0D28\u0D10\x03\x02" +
		"\x02\x02\u0D28\u0D11\x03\x02\x02\x02\u0D28\u0D12\x03\x02\x02\x02\u0D28" +
		"\u0D13\x03\x02\x02\x02\u0D28\u0D14\x03\x02\x02\x02\u0D28\u0D15\x03\x02" +
		"\x02\x02\u0D28\u0D16\x03\x02\x02\x02\u0D28\u0D17\x03\x02\x02\x02\u0D28" +
		"\u0D18\x03\x02\x02\x02\u0D28\u0D19\x03\x02\x02\x02\u0D28\u0D1A\x03\x02" +
		"\x02\x02\u0D28\u0D1B\x03\x02\x02\x02\u0D28\u0D1C\x03\x02\x02\x02\u0D28" +
		"\u0D1D\x03\x02\x02\x02\u0D28\u0D1E\x03\x02\x02\x02\u0D28\u0D1F\x03\x02" +
		"\x02\x02\u0D28\u0D20\x03\x02\x02\x02\u0D28\u0D21\x03\x02\x02\x02\u0D28" +
		"\u0D22\x03\x02\x02\x02\u0D28\u0D23\x03\x02\x02\x02\u0D28\u0D24\x03\x02" +
		"\x02\x02\u0D28\u0D25\x03\x02\x02\x02\u0D28\u0D26\x03\x02\x02\x02\u0D28" +
		"\u0D27\x03\x02\x02\x02\u0D29\u01EB\x03\x02\x02\x02\u0D2A\u0D2B\x07\x05" +
		"\x02\x02\u0D2B\u0D34\x07\u01F9\x02\x02\u0D2C\u0D31\x05\u0250\u0129\x02" +
		"\u0D2D\u0D2E\x07\u01F2\x02\x02\u0D2E\u0D30\x05\u0250\u0129\x02\u0D2F\u0D2D" +
		"\x03\x02\x02\x02\u0D30\u0D33\x03\x02\x02\x02\u0D31\u0D2F\x03\x02\x02\x02" +
		"\u0D31\u0D32\x03\x02\x02\x02\u0D32\u0D35\x03\x02\x02\x02\u0D33\u0D31\x03" +
		"\x02\x02\x02\u0D34\u0D2C\x03\x02\x02\x02\u0D34\u0D35\x03\x02\x02\x02\u0D35" +
		"\u0D36\x03\x02\x02\x02\u0D36\u0D37\x07\u01FA\x02\x02\u0D37\u01ED\x03\x02" +
		"\x02\x02\u0D38\u0D39\x07\x06\x02\x02\u0D39\u0D42\x07\u01F9\x02\x02\u0D3A" +
		"\u0D3F\x05\u024E\u0128\x02\u0D3B\u0D3C\x07\u01F2\x02\x02\u0D3C\u0D3E\x05" +
		"\u024E\u0128\x02\u0D3D\u0D3B\x03\x02\x02\x02\u0D3E\u0D41\x03\x02\x02\x02" +
		"\u0D3F\u0D3D\x03\x02\x02\x02\u0D3F\u0D40\x03\x02\x02\x02\u0D40\u0D43\x03" +
		"\x02\x02\x02\u0D41\u0D3F\x03\x02\x02\x02\u0D42\u0D3A\x03\x02\x02\x02\u0D42" +
		"\u0D43\x03\x02\x02\x02\u0D43\u0D44\x03\x02\x02\x02\u0D44\u0D45\x07\u01FA" +
		"\x02\x02\u0D45\u01EF\x03\x02\x02\x02\u0D46\u0D47\x07\x07\x02\x02\u0D47" +
		"\u0D50\x07\u01F9\x02\x02\u0D48\u0D4D\x05\u024C\u0127\x02\u0D49\u0D4A\x07" +
		"\u01F2\x02\x02\u0D4A\u0D4C\x05\u024C\u0127\x02\u0D4B\u0D49\x03\x02\x02" +
		"\x02\u0D4C\u0D4F\x03\x02\x02\x02\u0D4D\u0D4B\x03\x02\x02\x02\u0D4D\u0D4E" +
		"\x03\x02\x02\x02\u0D4E\u0D51\x03\x02\x02\x02\u0D4F\u0D4D\x03\x02\x02\x02" +
		"\u0D50\u0D48\x03\x02\x02\x02\u0D50\u0D51\x03\x02\x02\x02\u0D51\u0D52\x03" +
		"\x02\x02\x02\u0D52\u0D53\x07\u01FA\x02\x02\u0D53\u01F1\x03\x02\x02\x02" +
		"\u0D54\u0D55\x07\b\x02\x02\u0D55\u0D5E\x07\u01F9\x02\x02\u0D56\u0D5B\x05" +
		"\u01F4\xFB\x02\u0D57\u0D58\x07\u01F2\x02\x02\u0D58\u0D5A\x05\u01F4\xFB" +
		"\x02\u0D59\u0D57\x03\x02\x02\x02\u0D5A\u0D5D\x03\x02\x02\x02\u0D5B\u0D59" +
		"\x03\x02\x02\x02\u0D5B\u0D5C\x03\x02\x02\x02\u0D5C\u0D5F\x03\x02\x02\x02" +
		"\u0D5D\u0D5B\x03\x02\x02\x02\u0D5E\u0D56\x03\x02\x02\x02\u0D5E\u0D5F\x03" +
		"\x02\x02\x02\u0D5F\u0D60\x03\x02\x02\x02\u0D60\u0D61\x07\u01FA\x02\x02" +
		"\u0D61\u01F3\x03\x02\x02\x02\u0D62\u0D78\x05\u0254\u012B\x02\u0D63\u0D78" +
		"\x05\u025C\u012F\x02\u0D64\u0D78\x05\u02E6\u0174\x02\u0D65\u0D78\x05\u02A8" +
		"\u0155\x02\u0D66\u0D78\x05\u02CA\u0166\x02\u0D67\u0D78\x05\u027A\u013E" +
		"\x02\u0D68\u0D78\x05\u02EE\u0178\x02\u0D69\u0D78\x05\u026E\u0138\x02\u0D6A" +
		"\u0D78\x05\u02D6\u016C\x02\u0D6B\u0D78\x05\u0268\u0135\x02\u0D6C\u0D78" +
		"\x05\u0298\u014D\x02\u0D6D\u0D78\x05\u02E2\u0172\x02\u0D6E\u0D78\x05\u031C" +
		"\u018F\x02\u0D6F\u0D78\x05\u0304\u0183\x02\u0D70\u0D78\x05\u02B2\u015A" +
		"\x02\u0D71\u0D78\x05\u028E\u0148\x02\u0D72\u0D78\x05\u0290\u0149\x02\u0D73" +
		"\u0D78\x05\u0276\u013C\x02\u0D74\u0D78\x05\u0270\u0139\x02\u0D75\u0D78" +
		"\x05\u02DC\u016F\x02\u0D76\u0D78\x05\u0272\u013A\x02\u0D77\u0D62\x03\x02" +
		"\x02\x02\u0D77\u0D63\x03\x02\x02\x02\u0D77\u0D64\x03\x02\x02\x02\u0D77" +
		"\u0D65\x03\x02\x02\x02\u0D77\u0D66\x03\x02\x02\x02\u0D77\u0D67\x03\x02" +
		"\x02\x02\u0D77\u0D68\x03\x02\x02\x02\u0D77\u0D69\x03\x02\x02\x02\u0D77" +
		"\u0D6A\x03\x02\x02\x02\u0D77\u0D6B\x03\x02\x02\x02\u0D77\u0D6C\x03\x02" +
		"\x02\x02\u0D77\u0D6D\x03\x02\x02\x02\u0D77\u0D6E\x03\x02\x02\x02\u0D77" +
		"\u0D6F\x03\x02\x02\x02\u0D77\u0D70\x03\x02\x02\x02\u0D77\u0D71\x03\x02" +
		"\x02\x02\u0D77\u0D72\x03\x02\x02\x02\u0D77\u0D73\x03\x02\x02\x02\u0D77" +
		"\u0D74\x03\x02\x02\x02\u0D77\u0D75\x03\x02\x02\x02\u0D77\u0D76\x03\x02" +
		"\x02\x02\u0D78\u01F5\x03\x02\x02\x02\u0D79\u0D7A\x07\t\x02\x02\u0D7A\u0D83" +
		"\x07\u01F9\x02\x02\u0D7B\u0D80\x05\u01F8\xFD\x02\u0D7C\u0D7D\x07\u01F2" +
		"\x02\x02\u0D7D\u0D7F\x05\u01F8\xFD\x02\u0D7E\u0D7C\x03\x02\x02\x02\u0D7F" +
		"\u0D82\x03\x02\x02\x02\u0D80\u0D7E\x03\x02\x02\x02\u0D80\u0D81\x03\x02" +
		"\x02\x02\u0D81\u0D84\x03\x02\x02\x02\u0D82\u0D80\x03\x02\x02\x02\u0D83" +
		"\u0D7B\x03\x02\x02\x02\u0D83\u0D84\x03\x02\x02\x02\u0D84\u0D85\x03\x02" +
		"\x02\x02\u0D85\u0D86\x07\u01FA\x02\x02\u0D86\u01F7\x03\x02\x02\x02\u0D87" +
		"\u0D95\x05\u0254\u012B\x02\u0D88\u0D95\x05\u025C\u012F\x02\u0D89\u0D95" +
		"\x05\u02E6\u0174\x02\u0D8A\u0D95\x05\u02A8\u0155\x02\u0D8B\u0D95\x05\u02CA" +
		"\u0166\x02\u0D8C\u0D95\x05\u027A\u013E\x02\u0D8D\u0D95\x05\u02EE\u0178" +
		"\x02\u0D8E\u0D95\x05\u026E\u0138\x02\u0D8F\u0D95\x05\u02D6\u016C\x02\u0D90" +
		"\u0D95\x05\u0268\u0135\x02\u0D91\u0D95\x05\u02A6\u0154\x02\u0D92\u0D95" +
		"\x05\u0294\u014B\x02\u0D93\u0D95\x05\u0272\u013A\x02\u0D94\u0D87\x03\x02" +
		"\x02\x02\u0D94\u0D88\x03\x02\x02\x02\u0D94\u0D89\x03\x02\x02\x02\u0D94" +
		"\u0D8A\x03\x02\x02\x02\u0D94\u0D8B\x03\x02\x02\x02\u0D94\u0D8C\x03\x02" +
		"\x02\x02\u0D94\u0D8D\x03\x02\x02\x02\u0D94\u0D8E\x03\x02\x02\x02\u0D94" +
		"\u0D8F\x03\x02\x02\x02\u0D94\u0D90\x03\x02\x02\x02\u0D94\u0D91\x03\x02" +
		"\x02\x02\u0D94\u0D92\x03\x02\x02\x02\u0D94\u0D93\x03\x02\x02\x02\u0D95" +
		"\u01F9\x03\x02\x02\x02\u0D96\u0D97\x07\n\x02\x02\u0D97\u0DA0\x07\u01F9" +
		"\x02\x02\u0D98\u0D9D\x05\u01FC\xFF\x02\u0D99\u0D9A\x07\u01F2\x02\x02\u0D9A" +
		"\u0D9C\x05\u01FC\xFF\x02\u0D9B\u0D99\x03\x02\x02\x02\u0D9C\u0D9F\x03\x02" +
		"\x02\x02\u0D9D\u0D9B\x03\x02\x02\x02\u0D9D\u0D9E\x03\x02\x02\x02\u0D9E" +
		"\u0DA1\x03\x02\x02\x02\u0D9F\u0D9D\x03\x02\x02\x02\u0DA0\u0D98\x03\x02" +
		"\x02\x02\u0DA0\u0DA1\x03\x02\x02\x02\u0DA1\u0DA2\x03\x02\x02\x02\u0DA2" +
		"\u0DA3\x07\u01FA\x02\x02\u0DA3\u01FB\x03\x02\x02\x02\u0DA4\u0DA8\x05\u025C" +
		"\u012F\x02\u0DA5\u0DA8\x05\u0312\u018A\x02\u0DA6\u0DA8\x05\u02C4\u0163" +
		"\x02\u0DA7\u0DA4\x03\x02\x02\x02\u0DA7\u0DA5\x03\x02\x02\x02\u0DA7\u0DA6" +
		"\x03\x02\x02\x02\u0DA8\u01FD\x03\x02\x02\x02\u0DA9\u0DAA\x07\v\x02\x02" +
		"\u0DAA\u0DB3\x07\u01F9\x02\x02\u0DAB\u0DB0\x05\u0200\u0101\x02\u0DAC\u0DAD" +
		"\x07\u01F2\x02\x02\u0DAD\u0DAF\x05\u0200\u0101\x02\u0DAE\u0DAC\x03\x02" +
		"\x02\x02\u0DAF\u0DB2\x03\x02\x02\x02\u0DB0\u0DAE\x03\x02\x02\x02\u0DB0" +
		"\u0DB1\x03\x02\x02\x02\u0DB1\u0DB4\x03\x02\x02\x02\u0DB2\u0DB0\x03\x02" +
		"\x02\x02\u0DB3\u0DAB\x03\x02\x02\x02\u0DB3\u0DB4\x03\x02\x02\x02\u0DB4" +
		"\u0DB5\x03\x02\x02\x02\u0DB5\u0DB6\x07\u01FA\x02\x02\u0DB6\u01FF\x03\x02" +
		"\x02\x02\u0DB7\u0DBD\x05\u02AA\u0156\x02\u0DB8\u0DBD\x05\u028C\u0147\x02" +
		"\u0DB9\u0DBD\x05\u027E\u0140\x02\u0DBA\u0DBD\x05\u027C\u013F\x02\u0DBB" +
		"\u0DBD\x05\u02F0\u0179\x02\u0DBC\u0DB7\x03\x02\x02\x02\u0DBC\u0DB8\x03" +
		"\x02\x02\x02\u0DBC\u0DB9\x03\x02\x02\x02\u0DBC\u0DBA\x03\x02\x02\x02\u0DBC" +
		"\u0DBB\x03\x02\x02\x02\u0DBD\u0201\x03\x02\x02\x02\u0DBE\u0DBF\x07\f\x02" +
		"\x02\u0DBF\u0DC8\x07\u01F9\x02\x02\u0DC0\u0DC5\x05\u0204\u0103\x02\u0DC1" +
		"\u0DC2\x07\u01F2\x02\x02\u0DC2\u0DC4\x05\u0204\u0103\x02\u0DC3\u0DC1\x03" +
		"\x02\x02\x02\u0DC4\u0DC7\x03\x02\x02\x02\u0DC5\u0DC3\x03\x02\x02\x02\u0DC5" +
		"\u0DC6\x03\x02\x02\x02\u0DC6\u0DC9\x03\x02\x02\x02\u0DC7\u0DC5\x03\x02" +
		"\x02\x02\u0DC8\u0DC0\x03\x02\x02\x02\u0DC8\u0DC9\x03\x02\x02\x02\u0DC9" +
		"\u0DCA\x03\x02\x02\x02\u0DCA\u0DCB\x07\u01FA\x02\x02\u0DCB\u0203\x03\x02" +
		"\x02\x02\u0DCC\u0DD9\x05\u025C\u012F\x02\u0DCD\u0DD9\x05\u02E6\u0174\x02" +
		"\u0DCE\u0DD9\x05\u02CC\u0167\x02\u0DCF\u0DD9\x05\u02A8\u0155\x02\u0DD0" +
		"\u0DD9\x05\u02CA\u0166\x02\u0DD1\u0DD9\x05\u025E\u0130\x02\u0DD2\u0DD9" +
		"\x05\u02C0\u0161\x02\u0DD3\u0DD9\x05\u02BC\u015F\x02\u0DD4\u0DD9\x05\u0304" +
		"\u0183\x02\u0DD5\u0DD9\x05\u028A\u0146\x02\u0DD6\u0DD9\x05\u026E\u0138" +
		"\x02\u0DD7\u0DD9\x05\u0272\u013A\x02\u0DD8\u0DCC\x03\x02\x02\x02\u0DD8" +
		"\u0DCD\x03\x02\x02\x02\u0DD8\u0DCE\x03\x02\x02\x02\u0DD8\u0DCF\x03\x02" +
		"\x02\x02\u0DD8\u0DD0\x03\x02\x02\x02\u0DD8\u0DD1\x03\x02\x02\x02\u0DD8" +
		"\u0DD2\x03\x02\x02\x02\u0DD8\u0DD3\x03\x02\x02\x02\u0DD8\u0DD4\x03\x02" +
		"\x02\x02\u0DD8\u0DD5\x03\x02\x02\x02\u0DD8\u0DD6\x03\x02\x02\x02\u0DD8" +
		"\u0DD7\x03\x02\x02\x02\u0DD9\u0205\x03\x02\x02\x02\u0DDA\u0DDB\x07\r\x02" +
		"\x02\u0DDB\u0DE4\x07\u01F9\x02\x02\u0DDC\u0DE1\x05\u0208\u0105\x02\u0DDD" +
		"\u0DDE\x07\u01F2\x02\x02\u0DDE\u0DE0\x05\u0208\u0105\x02\u0DDF\u0DDD\x03" +
		"\x02\x02\x02\u0DE0\u0DE3\x03\x02\x02\x02\u0DE1\u0DDF\x03\x02\x02\x02\u0DE1" +
		"\u0DE2\x03\x02\x02\x02\u0DE2\u0DE5\x03\x02\x02\x02\u0DE3\u0DE1\x03\x02" +
		"\x02\x02\u0DE4\u0DDC\x03\x02\x02\x02\u0DE4\u0DE5\x03\x02\x02\x02\u0DE5" +
		"\u0DE6\x03\x02\x02\x02\u0DE6\u0DE7\x07\u01FA\x02\x02\u0DE7\u0207\x03\x02" +
		"\x02\x02\u0DE8\u0DEB\x05\u0316\u018C\x02\u0DE9\u0DEB\x05\u02A4\u0153\x02" +
		"\u0DEA\u0DE8\x03\x02\x02\x02\u0DEA\u0DE9\x03\x02\x02\x02\u0DEB\u0209\x03" +
		"\x02\x02\x02\u0DEC\u0DED\x07\x0E\x02\x02\u0DED\u0DF6\x07\u01F9\x02\x02" +
		"\u0DEE\u0DF3\x05\u020C\u0107\x02\u0DEF\u0DF0\x07\u01F2\x02\x02\u0DF0\u0DF2" +
		"\x05\u020C\u0107\x02\u0DF1\u0DEF\x03\x02\x02\x02\u0DF2\u0DF5\x03\x02\x02" +
		"\x02\u0DF3\u0DF1\x03\x02\x02\x02\u0DF3\u0DF4\x03\x02\x02\x02\u0DF4\u0DF7" +
		"\x03\x02\x02\x02\u0DF5\u0DF3\x03\x02\x02\x02\u0DF6\u0DEE\x03\x02\x02\x02" +
		"\u0DF6\u0DF7\x03\x02\x02\x02\u0DF7\u0DF8\x03\x02\x02\x02\u0DF8\u0DF9\x07" +
		"\u01FA\x02\x02\u0DF9\u020B\x03\x02\x02\x02\u0DFA\u0E02\x05\u0254\u012B" +
		"\x02\u0DFB\u0E02\x05\u02E6\u0174\x02\u0DFC\u0E02\x05\u029E\u0150\x02\u0DFD" +
		"\u0E02\x05\u02A8\u0155\x02\u0DFE\u0E02\x05\u02CA\u0166\x02\u0DFF\u0E02" +
		"\x05\u025C\u012F\x02\u0E00\u0E02\x05\u0298\u014D\x02\u0E01\u0DFA\x03\x02" +
		"\x02\x02\u0E01\u0DFB\x03\x02\x02\x02\u0E01\u0DFC\x03\x02\x02\x02\u0E01" +
		"\u0DFD\x03\x02\x02\x02\u0E01\u0DFE\x03\x02\x02\x02\u0E01\u0DFF\x03\x02" +
		"\x02\x02\u0E01\u0E00\x03\x02\x02\x02\u0E02\u020D\x03\x02\x02\x02\u0E03" +
		"\u0E04\x07\x0F\x02\x02\u0E04\u0E0D\x07\u01F9\x02\x02\u0E05\u0E0A\x05\u0210" +
		"\u0109\x02\u0E06\u0E07\x07\u01F2\x02\x02\u0E07\u0E09\x05\u0210\u0109\x02" +
		"\u0E08\u0E06\x03\x02\x02\x02\u0E09\u0E0C\x03\x02\x02\x02\u0E0A\u0E08\x03" +
		"\x02\x02\x02\u0E0A\u0E0B\x03\x02\x02\x02\u0E0B\u0E0E\x03\x02\x02\x02\u0E0C" +
		"\u0E0A\x03\x02\x02\x02\u0E0D\u0E05\x03\x02\x02\x02\u0E0D\u0E0E\x03\x02" +
		"\x02\x02\u0E0E\u0E0F\x03\x02\x02\x02\u0E0F\u0E10\x07\u01FA\x02\x02\u0E10" +
		"\u020F\x03\x02\x02\x02\u0E11\u0E16\x05\u02E6\u0174\x02\u0E12\u0E16\x05" +
		"\u025C\u012F\x02\u0E13\u0E16\x05\u02A8\u0155\x02\u0E14\u0E16\x05\u02CA" +
		"\u0166\x02\u0E15\u0E11\x03\x02\x02\x02\u0E15\u0E12\x03\x02\x02\x02\u0E15" +
		"\u0E13\x03\x02\x02\x02\u0E15\u0E14\x03\x02\x02\x02\u0E16\u0211\x03\x02" +
		"\x02\x02\u0E17\u0E18\x07\x10\x02\x02\u0E18\u0E21\x07\u01F9\x02\x02\u0E19" +
		"\u0E1E\x05\u0214\u010B\x02\u0E1A\u0E1B\x07\u01F2\x02\x02\u0E1B\u0E1D\x05" +
		"\u0214\u010B\x02\u0E1C\u0E1A\x03\x02\x02\x02\u0E1D\u0E20\x03\x02\x02\x02" +
		"\u0E1E\u0E1C\x03\x02\x02\x02\u0E1E\u0E1F\x03\x02\x02\x02\u0E1F\u0E22\x03" +
		"\x02\x02\x02\u0E20\u0E1E\x03\x02\x02\x02\u0E21\u0E19\x03\x02\x02\x02\u0E21" +
		"\u0E22\x03\x02\x02\x02\u0E22\u0E23\x03\x02\x02\x02\u0E23\u0E24\x07\u01FA" +
		"\x02\x02\u0E24\u0213\x03\x02\x02\x02\u0E25\u0E2A\x05\u02E6\u0174\x02\u0E26" +
		"\u0E2A\x05\u02A8\u0155\x02\u0E27\u0E2A\x05\u02CA\u0166\x02\u0E28\u0E2A" +
		"\x05\u0280\u0141\x02\u0E29\u0E25\x03\x02\x02\x02\u0E29\u0E26\x03\x02\x02" +
		"\x02\u0E29\u0E27\x03\x02\x02\x02\u0E29\u0E28\x03\x02\x02\x02\u0E2A\u0215" +
		"\x03\x02\x02\x02\u0E2B\u0E2C\x07\x11\x02\x02\u0E2C\u0E35\x07\u01F9\x02" +
		"\x02\u0E2D\u0E32\x05\u0218\u010D\x02\u0E2E\u0E2F\x07\u01F2\x02\x02\u0E2F" +
		"\u0E31\x05\u0218\u010D\x02\u0E30\u0E2E\x03\x02\x02\x02\u0E31\u0E34\x03" +
		"\x02\x02\x02\u0E32\u0E30\x03\x02\x02\x02\u0E32\u0E33\x03\x02\x02\x02\u0E33" +
		"\u0E36\x03\x02\x02\x02\u0E34\u0E32\x03\x02\x02\x02\u0E35\u0E2D\x03\x02" +
		"\x02\x02\u0E35\u0E36\x03\x02\x02\x02\u0E36\u0E37\x03\x02\x02\x02\u0E37" +
		"\u0E38\x07\u01FA\x02\x02\u0E38\u0217\x03\x02\x02\x02\u0E39\u0E3D\x05\u02E6" +
		"\u0174\x02\u0E3A\u0E3D\x05\u02A8\u0155\x02\u0E3B\u0E3D\x05\u0292\u014A" +
		"\x02\u0E3C\u0E39\x03\x02\x02\x02\u0E3C\u0E3A\x03\x02\x02\x02\u0E3C\u0E3B" +
		"\x03\x02\x02\x02\u0E3D\u0219\x03\x02\x02\x02\u0E3E\u0E3F\x07\x12\x02\x02" +
		"\u0E3F\u0E48\x07\u01F9\x02\x02\u0E40\u0E45\x05\u021C\u010F\x02\u0E41\u0E42" +
		"\x07\u01F2\x02\x02\u0E42\u0E44\x05\u021C\u010F\x02\u0E43\u0E41\x03\x02" +
		"\x02\x02\u0E44\u0E47\x03\x02\x02\x02\u0E45\u0E43\x03\x02\x02\x02\u0E45" +
		"\u0E46\x03\x02\x02\x02\u0E46\u0E49\x03\x02\x02\x02\u0E47\u0E45\x03\x02" +
		"\x02\x02\u0E48\u0E40\x03\x02\x02\x02\u0E48\u0E49\x03\x02\x02\x02\u0E49" +
		"\u0E4A\x03\x02\x02\x02\u0E4A\u0E4B\x07\u01FA\x02\x02\u0E4B\u021B\x03\x02" +
		"\x02\x02\u0E4C\u0E56\x05\u02E6\u0174\x02\u0E4D\u0E56\x05\u025C\u012F\x02" +
		"\u0E4E\u0E56\x05\u0274\u013B\x02\u0E4F\u0E56\x05\u02A8\u0155\x02\u0E50" +
		"\u0E56\x05\u02CA\u0166\x02\u0E51\u0E56\x05\u025E\u0130\x02\u0E52\u0E56" +
		"\x05\u0268\u0135\x02\u0E53\u0E56\x05\u026E\u0138\x02\u0E54\u0E56\x05\u0272" +
		"\u013A\x02\u0E55\u0E4C\x03\x02\x02\x02\u0E55\u0E4D\x03\x02\x02\x02\u0E55" +
		"\u0E4E\x03\x02\x02\x02\u0E55\u0E4F\x03\x02\x02\x02\u0E55\u0E50\x03\x02" +
		"\x02\x02\u0E55\u0E51\x03\x02\x02\x02\u0E55\u0E52\x03\x02\x02\x02\u0E55" +
		"\u0E53\x03\x02\x02\x02\u0E55\u0E54\x03\x02\x02\x02\u0E56\u021D\x03\x02" +
		"\x02\x02\u0E57\u0E58\x07\x13\x02\x02\u0E58\u0E61\x07\u01F9\x02\x02\u0E59" +
		"\u0E5E\x05\u0220\u0111\x02\u0E5A\u0E5B\x07\u01F2\x02\x02\u0E5B\u0E5D\x05" +
		"\u0220\u0111\x02\u0E5C\u0E5A\x03\x02\x02\x02\u0E5D\u0E60\x03\x02\x02\x02" +
		"\u0E5E\u0E5C\x03\x02\x02\x02\u0E5E\u0E5F\x03\x02\x02\x02\u0E5F\u0E62\x03" +
		"\x02\x02\x02\u0E60\u0E5E\x03\x02\x02\x02\u0E61\u0E59\x03\x02\x02\x02\u0E61" +
		"\u0E62\x03\x02\x02\x02\u0E62\u0E63\x03\x02\x02\x02\u0E63\u0E64\x07\u01FA" +
		"\x02\x02\u0E64\u021F\x03\x02\x02\x02\u0E65\u0E6B\x05\u02CA\u0166\x02\u0E66" +
		"\u0E6B\x05\u0280\u0141\x02\u0E67\u0E6B\x05\u02E6\u0174\x02\u0E68\u0E6B" +
		"\x05\u02B8\u015D\x02\u0E69\u0E6B\x05\u02BE\u0160\x02\u0E6A\u0E65\x03\x02" +
		"\x02\x02\u0E6A\u0E66\x03\x02\x02\x02\u0E6A\u0E67\x03\x02\x02\x02\u0E6A" +
		"\u0E68\x03\x02\x02\x02\u0E6A\u0E69\x03\x02\x02\x02\u0E6B\u0221\x03\x02" +
		"\x02\x02\u0E6C\u0E6D\x07\x14\x02\x02\u0E6D\u0E76\x07\u01F9\x02\x02\u0E6E" +
		"\u0E73\x05\u0224\u0113\x02\u0E6F\u0E70\x07\u01F2\x02\x02\u0E70\u0E72\x05" +
		"\u0224\u0113\x02\u0E71\u0E6F\x03\x02\x02\x02\u0E72\u0E75\x03\x02\x02\x02" +
		"\u0E73\u0E71\x03\x02\x02\x02\u0E73\u0E74\x03\x02\x02\x02\u0E74\u0E77\x03" +
		"\x02\x02\x02\u0E75\u0E73\x03\x02\x02\x02\u0E76\u0E6E\x03\x02\x02\x02\u0E76" +
		"\u0E77\x03\x02\x02\x02\u0E77\u0E78\x03\x02\x02\x02\u0E78\u0E79\x07\u01FA" +
		"\x02\x02\u0E79\u0223\x03\x02\x02\x02\u0E7A\u0E7F\x05\u030A\u0186\x02\u0E7B" +
		"\u0E7F\x05\u02CA\u0166\x02\u0E7C\u0E7F\x05\u025C\u012F\x02\u0E7D\u0E7F" +
		"\x05\u0314\u018B\x02\u0E7E\u0E7A\x03\x02\x02\x02\u0E7E\u0E7B\x03\x02\x02" +
		"\x02\u0E7E\u0E7C\x03\x02\x02\x02\u0E7E\u0E7D\x03\x02\x02\x02\u0E7F\u0225" +
		"\x03\x02\x02\x02\u0E80\u0E81\x07\x15\x02\x02\u0E81\u0E8A\x07\u01F9\x02" +
		"\x02\u0E82\u0E87\x05\u0228\u0115\x02\u0E83\u0E84\x07\u01F2\x02\x02\u0E84" +
		"\u0E86\x05\u0228\u0115\x02\u0E85\u0E83\x03\x02\x02\x02\u0E86\u0E89\x03" +
		"\x02\x02\x02\u0E87\u0E85\x03\x02\x02\x02\u0E87\u0E88\x03\x02\x02\x02\u0E88" +
		"\u0E8B\x03\x02\x02\x02\u0E89\u0E87\x03\x02\x02\x02\u0E8A\u0E82\x03\x02" +
		"\x02\x02\u0E8A\u0E8B\x03\x02\x02\x02\u0E8B\u0E8C\x03\x02\x02\x02\u0E8C" +
		"\u0E8D\x07\u01FA\x02\x02\u0E8D\u0227\x03\x02\x02\x02\u0E8E\u0E93\x05\u030A" +
		"\u0186\x02\u0E8F\u0E93\x05\u02CA\u0166\x02\u0E90\u0E93\x05\u02A8\u0155" +
		"\x02\u0E91\u0E93\x05\u02D4\u016B\x02\u0E92\u0E8E\x03\x02\x02\x02\u0E92" +
		"\u0E8F\x03\x02\x02\x02\u0E92\u0E90\x03\x02\x02\x02\u0E92\u0E91\x03\x02" +
		"\x02\x02\u0E93\u0229\x03\x02\x02\x02\u0E94\u0E95\x07\x16\x02\x02\u0E95" +
		"\u0E9E\x07\u01F9\x02\x02\u0E96\u0E9B\x05\u022C\u0117\x02\u0E97\u0E98\x07" +
		"\u01F2\x02\x02\u0E98\u0E9A\x05\u022C\u0117\x02\u0E99\u0E97\x03\x02\x02" +
		"\x02\u0E9A\u0E9D\x03\x02\x02\x02\u0E9B\u0E99\x03\x02\x02\x02\u0E9B\u0E9C" +
		"\x03\x02\x02\x02\u0E9C\u0E9F\x03\x02\x02\x02\u0E9D\u0E9B\x03\x02\x02\x02" +
		"\u0E9E\u0E96\x03\x02\x02\x02\u0E9E\u0E9F\x03\x02\x02\x02\u0E9F\u0EA0\x03" +
		"\x02\x02\x02\u0EA0\u0EA1\x07\u01FA\x02\x02\u0EA1\u022B\x03\x02\x02\x02" +
		"\u0EA2\u0EAB\x05\u02E6\u0174\x02\u0EA3\u0EAB\x05\u025C\u012F\x02\u0EA4" +
		"\u0EAB\x05\u0282\u0142\x02\u0EA5\u0EAB\x05\u02B6\u015C\x02\u0EA6\u0EAB" +
		"\x05\u02C6\u0164\x02\u0EA7\u0EAB\x05\u02A8\u0155\x02\u0EA8\u0EAB\x05\u02CA" +
		"\u0166\x02\u0EA9\u0EAB\x05\u02BA\u015E\x02\u0EAA\u0EA2\x03\x02\x02\x02" +
		"\u0EAA\u0EA3\x03\x02\x02\x02\u0EAA\u0EA4\x03\x02\x02\x02\u0EAA\u0EA5\x03" +
		"\x02\x02\x02\u0EAA\u0EA6\x03\x02\x02\x02\u0EAA\u0EA7\x03\x02\x02\x02\u0EAA" +
		"\u0EA8\x03\x02\x02\x02\u0EAA\u0EA9\x03\x02\x02\x02\u0EAB\u022D\x03\x02" +
		"\x02\x02\u0EAC\u0EAD\x07\x17\x02\x02\u0EAD\u0EB6\x07\u01F9\x02\x02\u0EAE" +
		"\u0EB3\x05\u0230\u0119\x02\u0EAF\u0EB0\x07\u01F2\x02\x02\u0EB0\u0EB2\x05" +
		"\u0230\u0119\x02\u0EB1\u0EAF\x03\x02\x02\x02\u0EB2\u0EB5\x03\x02\x02\x02" +
		"\u0EB3\u0EB1\x03\x02\x02\x02\u0EB3\u0EB4\x03\x02\x02\x02\u0EB4\u0EB7\x03" +
		"\x02\x02\x02\u0EB5\u0EB3\x03\x02\x02\x02\u0EB6\u0EAE\x03\x02\x02\x02\u0EB6" +
		"\u0EB7\x03\x02\x02\x02\u0EB7\u0EB8\x03\x02\x02\x02\u0EB8\u0EB9\x07\u01FA" +
		"\x02\x02\u0EB9\u022F\x03\x02\x02\x02\u0EBA\u0EBE\x05\u02E6\u0174\x02\u0EBB" +
		"\u0EBE\x05\u025C\u012F\x02\u0EBC\u0EBE\x05\u02A2\u0152\x02\u0EBD\u0EBA" +
		"\x03\x02\x02\x02\u0EBD\u0EBB\x03\x02\x02\x02\u0EBD\u0EBC\x03\x02\x02\x02" +
		"\u0EBE\u0231\x03\x02\x02\x02\u0EBF\u0EC0\x07\x18\x02\x02\u0EC0\u0EC9\x07" +
		"\u01F9\x02\x02\u0EC1\u0EC6\x05\u0234\u011B\x02\u0EC2\u0EC3\x07\u01F2\x02" +
		"\x02\u0EC3\u0EC5\x05\u0234\u011B\x02\u0EC4\u0EC2\x03\x02\x02\x02\u0EC5" +
		"\u0EC8\x03\x02\x02\x02\u0EC6\u0EC4\x03\x02\x02\x02\u0EC6\u0EC7\x03\x02" +
		"\x02\x02\u0EC7\u0ECA\x03\x02\x02\x02\u0EC8\u0EC6\x03\x02\x02\x02\u0EC9" +
		"\u0EC1\x03\x02\x02\x02\u0EC9\u0ECA\x03\x02\x02\x02\u0ECA\u0ECB\x03\x02" +
		"\x02\x02\u0ECB\u0ECC\x07\u01FA\x02\x02\u0ECC\u0233\x03\x02\x02\x02\u0ECD" +
		"\u0ED5\x05\u025C\u012F\x02\u0ECE\u0ED5\x05\u02A8\u0155\x02\u0ECF\u0ED5" +
		"\x05\u02CA\u0166\x02\u0ED0\u0ED5\x05\u02EC\u0177\x02\u0ED1\u0ED5\x05\u02AE" +
		"\u0158\x02\u0ED2\u0ED5\x05\u0278\u013D\x02\u0ED3\u0ED5\x05\u025E\u0130" +
		"\x02\u0ED4\u0ECD\x03\x02\x02\x02\u0ED4\u0ECE\x03\x02\x02\x02\u0ED4\u0ECF" +
		"\x03\x02\x02\x02\u0ED4\u0ED0\x03\x02\x02\x02\u0ED4\u0ED1\x03\x02\x02\x02" +
		"\u0ED4\u0ED2\x03\x02\x02\x02\u0ED4\u0ED3\x03\x02\x02\x02\u0ED5\u0235\x03" +
		"\x02\x02\x02\u0ED6\u0ED7\x07\x19\x02\x02\u0ED7\u0EE0\x07\u01F9\x02\x02" +
		"\u0ED8\u0EDD\x05\u0238\u011D\x02\u0ED9\u0EDA\x07\u01F2\x02\x02\u0EDA\u0EDC" +
		"\x05\u0238\u011D\x02\u0EDB\u0ED9\x03\x02\x02\x02\u0EDC\u0EDF\x03\x02\x02" +
		"\x02\u0EDD\u0EDB\x03\x02\x02\x02\u0EDD\u0EDE\x03\x02\x02\x02\u0EDE\u0EE1" +
		"\x03\x02\x02\x02\u0EDF\u0EDD\x03\x02\x02\x02\u0EE0\u0ED8\x03\x02\x02\x02" +
		"\u0EE0\u0EE1\x03\x02\x02\x02\u0EE1\u0EE2\x03\x02\x02\x02\u0EE2\u0EE3\x07" +
		"\u01FA\x02\x02\u0EE3\u0237\x03\x02\x02\x02\u0EE4\u0EED\x05\u0254\u012B" +
		"\x02\u0EE5\u0EED\x05\u025C\u012F\x02\u0EE6\u0EED\x05\u02FA\u017E\x02\u0EE7" +
		"\u0EED\x05\u02FC\u017F\x02\u0EE8\u0EED\x05\u02FE\u0180\x02\u0EE9\u0EED" +
		"\x05\u02EE\u0178\x02\u0EEA\u0EED\x05\u026E\u0138\x02\u0EEB\u0EED\x05\u029C" +
		"\u014F\x02\u0EEC\u0EE4\x03\x02\x02\x02\u0EEC\u0EE5\x03\x02\x02\x02\u0EEC" +
		"\u0EE6\x03\x02\x02\x02\u0EEC\u0EE7\x03\x02\x02\x02\u0EEC\u0EE8\x03\x02" +
		"\x02\x02\u0EEC\u0EE9\x03\x02\x02\x02\u0EEC\u0EEA\x03\x02\x02\x02\u0EEC" +
		"\u0EEB\x03\x02\x02\x02\u0EED\u0239\x03\x02\x02\x02\u0EEE\u0EEF\x07\x1A" +
		"\x02\x02\u0EEF\u0EF8\x07\u01F9\x02\x02\u0EF0\u0EF5\x05\u023C\u011F\x02" +
		"\u0EF1\u0EF2\x07\u01F2\x02\x02\u0EF2\u0EF4\x05\u023C\u011F\x02\u0EF3\u0EF1" +
		"\x03\x02\x02\x02\u0EF4\u0EF7\x03\x02\x02\x02\u0EF5\u0EF3\x03\x02\x02\x02" +
		"\u0EF5\u0EF6\x03\x02\x02\x02\u0EF6\u0EF9\x03\x02\x02\x02\u0EF7\u0EF5\x03" +
		"\x02\x02\x02\u0EF8\u0EF0\x03\x02\x02\x02\u0EF8\u0EF9\x03\x02\x02\x02\u0EF9" +
		"\u0EFA\x03\x02\x02\x02\u0EFA\u0EFB\x07\u01FA\x02\x02\u0EFB\u023B\x03\x02" +
		"\x02\x02\u0EFC\u0F14\x05\u02E6\u0174\x02\u0EFD\u0F14\x05\u025C\u012F\x02" +
		"\u0EFE\u0F14\x05\u02CC\u0167\x02\u0EFF\u0F14\x05\u02A8\u0155\x02\u0F00" +
		"\u0F14\x05\u02CA\u0166\x02\u0F01\u0F14\x05\u025E\u0130\x02\u0F02\u0F14" +
		"\x05\u02C0\u0161\x02\u0F03\u0F14\x05\u02BC\u015F\x02\u0F04\u0F14\x05\u02E8" +
		"\u0175\x02\u0F05\u0F14\x05\u0284\u0143\x02\u0F06\u0F14\x05\u031A\u018E" +
		"\x02\u0F07\u0F14\x05\u0318\u018D\x02\u0F08\u0F14\x05\u0306\u0184\x02\u0F09" +
		"\u0F14\x05\u0268\u0135\x02\u0F0A\u0F14\x05\u02F2\u017A\x02\u0F0B\u0F14" +
		"\x05\u02C2\u0162\x02\u0F0C\u0F14\x05\u030E\u0188\x02\u0F0D\u0F14\x05\u0304" +
		"\u0183\x02\u0F0E\u0F14\x05\u028A\u0146\x02\u0F0F\u0F14\x05\u02DE\u0170" +
		"\x02\u0F10\u0F14\x05\u0308\u0185\x02\u0F11\u0F14\x05\u0272\u013A\x02\u0F12" +
		"\u0F14\x05\u0302\u0182\x02\u0F13\u0EFC\x03\x02\x02\x02\u0F13\u0EFD\x03" +
		"\x02\x02\x02\u0F13\u0EFE\x03\x02\x02\x02\u0F13\u0EFF\x03\x02\x02\x02\u0F13" +
		"\u0F00\x03\x02\x02\x02\u0F13\u0F01\x03\x02\x02\x02\u0F13\u0F02\x03\x02" +
		"\x02\x02\u0F13\u0F03\x03\x02\x02\x02\u0F13\u0F04\x03\x02\x02\x02\u0F13" +
		"\u0F05\x03\x02\x02\x02\u0F13\u0F06\x03\x02\x02\x02\u0F13\u0F07\x03\x02" +
		"\x02\x02\u0F13\u0F08\x03\x02\x02\x02\u0F13\u0F09\x03\x02\x02\x02\u0F13" +
		"\u0F0A\x03\x02\x02\x02\u0F13\u0F0B\x03\x02\x02\x02\u0F13\u0F0C\x03\x02" +
		"\x02\x02\u0F13\u0F0D\x03\x02\x02\x02\u0F13\u0F0E\x03\x02\x02\x02\u0F13" +
		"\u0F0F\x03\x02\x02\x02\u0F13\u0F10\x03\x02\x02\x02\u0F13\u0F11\x03\x02" +
		"\x02\x02\u0F13\u0F12\x03\x02\x02\x02\u0F14\u023D\x03\x02\x02\x02\u0F15" +
		"\u0F16\x07\x07\x02\x02\u0F16\u0F1F\x07\u01F9\x02\x02\u0F17\u0F1C\x05\u0240" +
		"\u0121\x02\u0F18\u0F19\x07\u01F2\x02\x02\u0F19\u0F1B\x05\u0240\u0121\x02" +
		"\u0F1A\u0F18\x03\x02\x02\x02\u0F1B\u0F1E\x03\x02\x02\x02\u0F1C\u0F1A\x03" +
		"\x02\x02\x02\u0F1C\u0F1D\x03\x02\x02\x02\u0F1D\u0F20\x03\x02\x02\x02\u0F1E" +
		"\u0F1C\x03\x02\x02\x02\u0F1F\u0F17\x03\x02\x02\x02\u0F1F\u0F20\x03\x02" +
		"\x02\x02\u0F20\u0F21\x03\x02\x02\x02\u0F21\u0F22\x07\u01FA\x02\x02\u0F22" +
		"\u023F\x03\x02\x02\x02\u0F23\u0F28\x05\u0286\u0144\x02\u0F24\u0F28\x05" +
		"\u02CE\u0168\x02\u0F25\u0F28\x05\u0310\u0189\x02\u0F26\u0F28\x05\u02F8";
	private static readonly _serializedATNSegment7: string =
		"\u017D\x02\u0F27\u0F23\x03\x02\x02\x02\u0F27\u0F24\x03\x02\x02\x02\u0F27" +
		"\u0F25\x03\x02\x02\x02\u0F27\u0F26\x03\x02\x02\x02\u0F28\u0241\x03\x02" +
		"\x02\x02\u0F29\u0F2A\x07\x1B\x02\x02\u0F2A\u0F33\x07\u01F9\x02\x02\u0F2B" +
		"\u0F30\x05\u0266\u0134\x02\u0F2C\u0F2D\x07\u01F2\x02\x02\u0F2D\u0F2F\x05" +
		"\u0266\u0134\x02\u0F2E\u0F2C\x03\x02\x02\x02\u0F2F\u0F32\x03\x02\x02\x02" +
		"\u0F30\u0F2E\x03\x02\x02\x02\u0F30\u0F31\x03\x02\x02\x02\u0F31\u0F34\x03" +
		"\x02\x02\x02\u0F32\u0F30\x03\x02\x02\x02\u0F33\u0F2B\x03\x02\x02\x02\u0F33" +
		"\u0F34\x03\x02\x02\x02\u0F34\u0F35\x03\x02\x02\x02\u0F35\u0F36\x07\u01FA" +
		"\x02\x02\u0F36\u0243\x03\x02\x02\x02\u0F37\u0F38\x07\x1C\x02\x02\u0F38" +
		"\u0F41\x07\u01F9\x02\x02\u0F39\u0F3E\x05\u024A\u0126\x02\u0F3A\u0F3B\x07" +
		"\u01F2\x02\x02\u0F3B\u0F3D\x05\u024A\u0126\x02\u0F3C\u0F3A\x03\x02\x02" +
		"\x02\u0F3D\u0F40\x03\x02\x02\x02\u0F3E\u0F3C\x03\x02\x02\x02\u0F3E\u0F3F" +
		"\x03\x02\x02\x02\u0F3F\u0F42\x03\x02\x02\x02\u0F40\u0F3E\x03\x02\x02\x02" +
		"\u0F41\u0F39\x03\x02\x02\x02\u0F41\u0F42\x03\x02\x02\x02\u0F42\u0F43\x03" +
		"\x02\x02\x02\u0F43\u0F44\x07\u01FA\x02\x02\u0F44\u0245\x03\x02\x02\x02" +
		"\u0F45\u0F46\x07\x1D\x02\x02\u0F46\u0F4B\x07\u01F9\x02\x02\u0F47\u0F48" +
		"\x05\u025A\u012E\x02\u0F48\u0F49\x07\u01F2\x02\x02\u0F49\u0F4A\x05\u025A" +
		"\u012E\x02\u0F4A\u0F4C\x03\x02\x02\x02\u0F4B\u0F47\x03\x02\x02\x02\u0F4B" +
		"\u0F4C\x03\x02\x02\x02\u0F4C\u0F4D\x03\x02\x02\x02\u0F4D\u0F4E\x07\u01FA" +
		"\x02\x02\u0F4E\u0247\x03\x02\x02\x02\u0F4F\u0F50\x07\x1E\x02\x02\u0F50" +
		"\u0F59\x07\u01F9\x02\x02\u0F51\u0F56\x05\u0252\u012A\x02\u0F52\u0F53\x07" +
		"\u01F2\x02\x02\u0F53\u0F55\x05\u0252\u012A\x02\u0F54\u0F52\x03\x02\x02" +
		"\x02\u0F55\u0F58\x03\x02\x02\x02\u0F56\u0F54\x03\x02\x02\x02\u0F56\u0F57" +
		"\x03\x02\x02\x02\u0F57\u0F5A\x03\x02\x02\x02\u0F58\u0F56\x03\x02\x02\x02" +
		"\u0F59\u0F51\x03\x02\x02\x02\u0F59\u0F5A\x03\x02\x02\x02\u0F5A\u0F5B\x03" +
		"\x02\x02\x02\u0F5B\u0F5C\x07\u01FA\x02\x02\u0F5C\u0249\x03\x02\x02\x02" +
		"\u0F5D\u0F61\x05\u025C\u012F\x02\u0F5E\u0F61\x05\u025E\u0130\x02\u0F5F" +
		"\u0F61\x05\u0260\u0131\x02\u0F60\u0F5D\x03\x02\x02\x02\u0F60\u0F5E\x03" +
		"\x02\x02\x02\u0F60\u0F5F\x03\x02\x02\x02\u0F61\u024B\x03\x02\x02\x02\u0F62" +
		"\u0F77\x05\u02C8\u0165\x02\u0F63\u0F77\x05\u02A8\u0155\x02\u0F64\u0F77" +
		"\x05\u02D8\u016D\x02\u0F65\u0F77\x05\u02C2\u0162\x02\u0F66\u0F77\x05\u02AC" +
		"\u0157\x02\u0F67\u0F77\x05\u02E4\u0173\x02\u0F68\u0F77\x05\u02F4\u017B" +
		"\x02\u0F69\u0F77\x05\u029A\u014E\x02\u0F6A\u0F77\x05\u02A0\u0151\x02\u0F6B" +
		"\u0F77\x05\u02E0\u0171\x02\u0F6C\u0F77\x05\u02B0\u0159\x02\u0F6D\u0F77" +
		"\x05\u02B4\u015B\x02\u0F6E\u0F77\x05\u02D0\u0169\x02\u0F6F\u0F77\x05\u0296" +
		"\u014C\x02\u0F70\u0F77\x05\u02F6\u017C\x02\u0F71\u0F77\x05\u0288\u0145" +
		"\x02\u0F72\u0F77\x05\u02D2\u016A\x02\u0F73\u0F77\x05\u02DA\u016E\x02\u0F74" +
		"\u0F77\x05\u0300\u0181\x02\u0F75\u0F77\x05\u02EA\u0176\x02\u0F76\u0F62" +
		"\x03\x02\x02\x02\u0F76\u0F63\x03\x02\x02\x02\u0F76\u0F64\x03\x02\x02\x02" +
		"\u0F76\u0F65\x03\x02\x02\x02\u0F76\u0F66\x03\x02\x02\x02\u0F76\u0F67\x03" +
		"\x02\x02\x02\u0F76\u0F68\x03\x02\x02\x02\u0F76\u0F69\x03\x02\x02\x02\u0F76" +
		"\u0F6A\x03\x02\x02\x02\u0F76\u0F6B\x03\x02\x02\x02\u0F76\u0F6C\x03\x02" +
		"\x02\x02\u0F76\u0F6D\x03\x02\x02\x02\u0F76\u0F6E\x03\x02\x02\x02\u0F76" +
		"\u0F6F\x03\x02\x02\x02\u0F76\u0F70\x03\x02\x02\x02\u0F76\u0F71\x03\x02" +
		"\x02\x02\u0F76\u0F72\x03\x02\x02\x02\u0F76\u0F73\x03\x02\x02\x02\u0F76" +
		"\u0F74\x03\x02\x02\x02\u0F76\u0F75\x03\x02\x02\x02\u0F77\u024D\x03\x02" +
		"\x02\x02\u0F78\u0F7E\x05\u02E6\u0174\x02\u0F79\u0F7E\x05\u028A\u0146\x02" +
		"\u0F7A\u0F7E\x05\u025C\u012F\x02\u0F7B\u0F7E\x05\u02A8\u0155\x02\u0F7C" +
		"\u0F7E\x05\u02CA\u0166\x02\u0F7D\u0F78\x03\x02\x02\x02\u0F7D\u0F79\x03" +
		"\x02\x02\x02\u0F7D\u0F7A\x03\x02\x02\x02\u0F7D\u0F7B\x03\x02\x02\x02\u0F7D" +
		"\u0F7C\x03\x02\x02\x02\u0F7E\u024F\x03\x02\x02\x02\u0F7F\u0F86\x05\u0254" +
		"\u012B\x02\u0F80\u0F86\x05\u025C\u012F\x02\u0F81\u0F86\x05\u02EE\u0178" +
		"\x02\u0F82\u0F86\x05\u026E\u0138\x02\u0F83\u0F86\x05\u029C\u014F\x02\u0F84" +
		"\u0F86\x05\u0268\u0135\x02\u0F85\u0F7F\x03\x02\x02\x02\u0F85\u0F80\x03" +
		"\x02\x02\x02\u0F85\u0F81\x03\x02\x02\x02\u0F85\u0F82\x03\x02\x02\x02\u0F85" +
		"\u0F83\x03\x02\x02\x02\u0F85\u0F84\x03\x02\x02\x02\u0F86\u0251\x03\x02" +
		"\x02\x02\u0F87\u0F8B\x05\u0254\u012B\x02\u0F88\u0F8B\x05\u0256\u012C\x02" +
		"\u0F89\u0F8B\x05\u0258\u012D\x02\u0F8A\u0F87\x03\x02\x02\x02\u0F8A\u0F88" +
		"\x03\x02\x02\x02\u0F8A\u0F89\x03\x02\x02\x02\u0F8B\u0253\x03\x02\x02\x02" +
		"\u0F8C\u0F8D\x07\u018F\x02\x02\u0F8D\u0F8E\x07,\x02\x02\u0F8E\u0255\x03" +
		"\x02\x02\x02\u0F8F\u0F90\x07\u0190\x02\x02\u0F90\u0F91\x07#\x02\x02\u0F91" +
		"\u0257\x03\x02\x02\x02\u0F92\u0F93\x07\u0191\x02\x02\u0F93\u0F9C\x07\u01F5" +
		"\x02\x02\u0F94\u0F99\x05\u0264\u0133\x02\u0F95\u0F96\x07\u01F2\x02\x02" +
		"\u0F96\u0F98\x05\u0264\u0133\x02\u0F97\u0F95\x03\x02\x02\x02\u0F98\u0F9B" +
		"\x03\x02\x02\x02\u0F99\u0F97\x03\x02\x02\x02\u0F99\u0F9A\x03\x02\x02\x02" +
		"\u0F9A\u0F9D\x03\x02\x02\x02\u0F9B\u0F99\x03\x02\x02\x02\u0F9C\u0F94\x03" +
		"\x02\x02\x02\u0F9C\u0F9D\x03\x02\x02\x02\u0F9D\u0F9E\x03\x02\x02\x02\u0F9E" +
		"\u0F9F\x07\u01F6\x02\x02\u0F9F\u0259\x03\x02\x02\x02\u0FA0\u0FA6\x05\u0254" +
		"\u012B\x02\u0FA1\u0FA6\x05\u025C\u012F\x02\u0FA2\u0FA6\x05\u025E\u0130" +
		"\x02\u0FA3\u0FA6\x05\u0260\u0131\x02\u0FA4\u0FA6\x05\u0262\u0132\x02\u0FA5" +
		"\u0FA0\x03\x02\x02\x02\u0FA5\u0FA1\x03\x02\x02\x02\u0FA5\u0FA2\x03\x02" +
		"\x02\x02\u0FA5\u0FA3\x03\x02\x02\x02\u0FA5\u0FA4\x03\x02\x02\x02\u0FA6" +
		"\u025B\x03\x02\x02\x02\u0FA7\u0FA8\x07\u0192\x02\x02\u0FA8\u0FA9\x07#" +
		"\x02\x02\u0FA9\u025D\x03\x02\x02\x02\u0FAA\u0FAB\x07\u0193\x02\x02\u0FAB" +
		"\u0FAC\x05\u0264\u0133\x02\u0FAC\u025F\x03\x02\x02\x02\u0FAD\u0FAE\x07" +
		"\u0194\x02\x02\u0FAE\u0FAF\x05x=\x02\u0FAF\u0261\x03\x02\x02\x02\u0FB0" +
		"\u0FB1\x07\u0195\x02\x02\u0FB1\u0FB2\x05\u0264\u0133\x02\u0FB2\u0263\x03" +
		"\x02\x02\x02\u0FB3\u0FB6\x05~@\x02\u0FB4\u0FB6\x05\x9EP\x02\u0FB5\u0FB3" +
		"\x03\x02\x02\x02\u0FB5\u0FB4\x03\x02\x02\x02\u0FB6\u0265\x03\x02\x02\x02" +
		"\u0FB7\u0FBB\x05\u0268\u0135\x02\u0FB8\u0FBB\x05\u026C\u0137\x02\u0FB9" +
		"\u0FBB\x05\u030C\u0187\x02\u0FBA\u0FB7\x03\x02\x02\x02\u0FBA\u0FB8\x03" +
		"\x02\x02\x02\u0FBA\u0FB9\x03\x02\x02\x02\u0FBB\u0267\x03\x02\x02\x02\u0FBC" +
		"\u0FBD\x07\u0196\x02\x02\u0FBD\u0FBE\x05\u026A\u0136\x02\u0FBE\u0269\x03" +
		"\x02\x02\x02\u0FBF\u0FC4\x07.\x02\x02\u0FC0\u0FC1\x07\u01F7\x02\x02\u0FC1" +
		"\u0FC3\x07.\x02\x02\u0FC2\u0FC0\x03\x02\x02\x02\u0FC3\u0FC6\x03\x02\x02" +
		"\x02\u0FC4\u0FC2\x03\x02\x02\x02\u0FC4\u0FC5\x03\x02\x02\x02\u0FC5\u026B" +
		"\x03\x02\x02\x02\u0FC6\u0FC4\x03\x02\x02\x02\u0FC7\u0FC8\x07\u0197\x02" +
		"\x02\u0FC8\u0FCB\x071\x02\x02\u0FC9\u0FCB\x07!\x02\x02\u0FCA\u0FC7\x03" +
		"\x02\x02\x02\u0FCA\u0FC9\x03\x02\x02\x02\u0FCB\u026D\x03\x02\x02\x02\u0FCC" +
		"\u0FCD\x07\u0198\x02\x02\u0FCD\u0FCE\x07!\x02\x02\u0FCE\u026F\x03\x02" +
		"\x02\x02\u0FCF\u0FD0\x07\u0199\x02\x02\u0FD0\u0FD1\x05\u0264\u0133\x02" +
		"\u0FD1\u0271\x03\x02\x02\x02\u0FD2\u0FD3\x07\u019A\x02\x02\u0FD3\u0FD4" +
		"\x05\u0264\u0133\x02\u0FD4\u0273\x03\x02\x02\x02\u0FD5\u0FD6\x07\u019B" +
		"\x02\x02\u0FD6\u0FD7\x07!\x02\x02\u0FD7\u0275\x03\x02\x02\x02\u0FD8\u0FD9" +
		"\x07\u019C\x02\x02\u0FD9\u0FDA\x05\u0264\u0133\x02\u0FDA\u0277\x03\x02" +
		"\x02\x02\u0FDB\u0FDC\x07\u019D\x02\x02\u0FDC\u0FDD\x07!\x02\x02\u0FDD" +
		"\u0279\x03\x02\x02\x02\u0FDE\u0FDF\x07\u019E\x02\x02\u0FDF\u0FE0\x05\u0264" +
		"\u0133\x02\u0FE0\u027B\x03\x02\x02\x02\u0FE1\u0FE2\x07\u019F\x02\x02\u0FE2" +
		"\u0FE3\x07#\x02\x02\u0FE3\u027D\x03\x02\x02\x02\u0FE4\u0FE5\x07\u01A0" +
		"\x02\x02\u0FE5\u0FE6\x072\x02\x02\u0FE6\u027F\x03\x02\x02\x02\u0FE7\u0FE8" +
		"\x07\u01A1\x02\x02\u0FE8\u0FE9\x07!\x02\x02\u0FE9\u0281\x03\x02\x02\x02" +
		"\u0FEA\u0FEB\x07\u01A2\x02\x02\u0FEB\u0FEC\x07#\x02\x02\u0FEC\u0283\x03" +
		"\x02\x02\x02\u0FED\u0FEE\x07\u01A3\x02\x02\u0FEE\u0FEF\x05\u0264\u0133" +
		"\x02\u0FEF\u0285\x03\x02\x02\x02\u0FF0\u0FF1\x07\u01A4\x02\x02\u0FF1\u0FF2" +
		"\x05\xAAV\x02\u0FF2\u0287\x03\x02\x02\x02\u0FF3\u0FF4\x07\u01A5\x02\x02" +
		"\u0FF4\u0FF5\x05x=\x02\u0FF5\u0289\x03\x02\x02\x02\u0FF6\u0FF7\x07\u01A6" +
		"\x02\x02\u0FF7\u0FF8\x05\u0264\u0133\x02\u0FF8\u028B\x03\x02\x02\x02\u0FF9" +
		"\u0FFA\x07\u01A7\x02\x02\u0FFA\u0FFB\x07#\x02\x02\u0FFB\u028D\x03\x02" +
		"\x02\x02\u0FFC\u0FFD\x07\u01A8\x02\x02\u0FFD\u0FFE\x05\u0264\u0133\x02" +
		"\u0FFE\u028F\x03\x02\x02\x02\u0FFF\u1000\x07\u01A9\x02\x02\u1000\u1001" +
		"\x05\u0264\u0133\x02\u1001\u0291\x03\x02\x02\x02\u1002\u1003\x07\u01A8" +
		"\x02\x02\u1003\u1004\x07!\x02\x02\u1004\u0293\x03\x02\x02\x02\u1005\u1006" +
		"\x07\u01AA\x02\x02\u1006\u1007\x07!\x02\x02\u1007\u0295\x03\x02\x02\x02" +
		"\u1008\u1009\x07\u01AB\x02\x02\u1009\u100A\x07!\x02\x02\u100A\u0297\x03" +
		"\x02\x02\x02\u100B\u100C\x07\u01AC\x02\x02\u100C\u100D\x05\u0264\u0133" +
		"\x02\u100D\u0299\x03\x02\x02\x02\u100E\u100F\x07\u01AD\x02\x02\u100F\u1010" +
		"\t\x1E\x02\x02\u1010\u029B\x03\x02\x02\x02\u1011\u1012\x07\u01B2\x02\x02" +
		"\u1012\u1013\t\x1F\x02\x02\u1013\u029D\x03\x02\x02\x02\u1014\u1015\x07" +
		"\u01B3\x02\x02\u1015\u1016\x05\u0264\u0133\x02\u1016\u029F\x03\x02\x02" +
		"\x02\u1017\u1018\x07\u01B4\x02\x02\u1018\u1019\x05\u0264\u0133\x02\u1019" +
		"\u02A1\x03\x02\x02\x02\u101A\u101B\x07\u01B5\x02\x02\u101B\u101C\x05x" +
		"=\x02\u101C\u02A3\x03\x02\x02\x02\u101D\u101E\x07\u01B6\x02\x02\u101E" +
		"\u101F\x05\u0264\u0133\x02\u101F\u02A5\x03\x02\x02\x02\u1020\u1021\x07" +
		"\u01B7\x02\x02\u1021\u1022\x05\u0264\u0133\x02\u1022\u02A7\x03\x02\x02" +
		"\x02\u1023\u1024\x07\u01B8\x02\x02\u1024\u1025\x05\u0264\u0133\x02\u1025" +
		"\u02A9\x03\x02\x02\x02\u1026\u1027\x07\u01B9\x02\x02\u1027\u1028\x07#" +
		"\x02\x02\u1028\u02AB\x03\x02\x02\x02\u1029\u102A\x07\u0196\x02\x02\u102A" +
		"\u102B\x07#\x02\x02\u102B\u02AD\x03\x02\x02\x02\u102C\u102D\x07\u01BA" +
		"\x02\x02\u102D\u102E\x07#\x02\x02\u102E\u02AF\x03\x02\x02\x02\u102F\u1030" +
		"\x07\u01BB\x02\x02\u1030\u1031\x05\u0264\u0133\x02\u1031\u02B1\x03\x02" +
		"\x02\x02\u1032\u1033\x07\u01BC\x02\x02\u1033\u1034\x07#\x02\x02\u1034" +
		"\u02B3\x03\x02\x02\x02\u1035\u1036\x07\u01BD\x02\x02\u1036\u1037\x05\u0264" +
		"\u0133\x02\u1037\u02B5\x03\x02\x02\x02\u1038\u1039\x07\u01BE\x02\x02\u1039" +
		"\u103A\x07#\x02\x02\u103A\u02B7\x03\x02\x02\x02\u103B\u103C\x07\u01BF" +
		"\x02\x02\u103C\u103D\x05\u0264\u0133\x02\u103D\u02B9\x03\x02\x02\x02\u103E" +
		"\u103F\x07\u01C0\x02\x02\u103F\u1040\x05x=\x02\u1040\u02BB\x03\x02\x02" +
		"\x02\u1041\u1042\x07\u01C1\x02\x02\u1042\u1043\x05x=\x02\u1043\u02BD\x03" +
		"\x02\x02\x02\u1044\u1045\x07\u01C2\x02\x02\u1045\u1046\x05x=\x02\u1046" +
		"\u02BF\x03\x02\x02\x02\u1047\u1048\x07\u01C3\x02\x02\u1048\u1049\x05x" +
		"=\x02\u1049\u02C1\x03\x02\x02\x02\u104A\u104B\x07\u01C4\x02\x02\u104B" +
		"\u104C\x05x=\x02\u104C\u02C3\x03\x02\x02\x02\u104D\u104E\x07\u01C5\x02" +
		"\x02\u104E\u104F\x05x=\x02\u104F\u02C5\x03\x02\x02\x02\u1050\u1051\x07" +
		"\u01C6\x02\x02\u1051\u1052\x07#\x02\x02\u1052\u02C7\x03\x02\x02\x02\u1053" +
		"\u1054\x07\u01C7\x02\x02\u1054\u1055\x070\x02\x02\u1055\u02C9\x03\x02" +
		"\x02\x02\u1056\u1057\x07\u01C8\x02\x02\u1057\u1058\x07!\x02\x02\u1058" +
		"\u02CB\x03\x02\x02\x02\u1059\u105A\x07\u01C9\x02\x02\u105A\u105B\x07#" +
		"\x02\x02\u105B\u02CD\x03\x02\x02\x02\u105C\u105D\x07\u01CA\x02\x02\u105D" +
		"\u105E\x05\xAAV\x02\u105E\u02CF\x03\x02\x02\x02\u105F\u1060\x07\u01CB" +
		"\x02\x02\u1060\u1061\x05\u0264\u0133\x02\u1061\u02D1\x03\x02\x02\x02\u1062" +
		"\u1063\x07\u01CC\x02\x02\u1063\u1064\t \x02\x02\u1064\u02D3\x03\x02\x02" +
		"\x02\u1065\u1066\x07\u01D0\x02\x02\u1066\u1067\x05\u0264\u0133\x02\u1067" +
		"\u02D5\x03\x02\x02\x02\u1068\u1069\x07\u01D1\x02\x02\u1069\u106A\x07!" +
		"\x02\x02\u106A\u02D7\x03\x02\x02\x02\u106B\u106C\x07\u01D2\x02\x02\u106C" +
		"\u106D\x07#\x02\x02\u106D\u02D9\x03\x02\x02\x02\u106E\u106F\x07\u01D3" +
		"\x02\x02\u106F\u1070\x05x=\x02\u1070\u02DB\x03\x02\x02\x02\u1071\u1072" +
		"\x07\u01D4\x02\x02\u1072\u1073\x05\xAAV\x02\u1073\u02DD\x03\x02\x02\x02" +
		"\u1074\u1075\x07\u01D5\x02\x02\u1075\u1076\x05\u0264\u0133\x02\u1076\u02DF" +
		"\x03\x02\x02\x02\u1077\u1078\x07\u01D6\x02\x02\u1078\u1079\x05\u0264\u0133" +
		"\x02\u1079\u02E1\x03\x02\x02\x02\u107A\u107B\x07\u01D7\x02\x02\u107B\u107C" +
		"\x070\x02\x02\u107C\u02E3\x03\x02\x02\x02\u107D\u107E\x07\u01D8\x02\x02" +
		"\u107E\u107F\x07!\x02\x02\u107F\u02E5\x03\x02\x02\x02\u1080\u1081\x07" +
		"\u01D9\x02\x02\u1081\u1082\x05\u0264\u0133\x02\u1082\u02E7\x03\x02\x02" +
		"\x02\u1083\u1084\x07\u01DA\x02\x02\u1084\u1085\x07!\x02\x02\u1085\u02E9" +
		"\x03\x02\x02\x02\u1086\u1087\x07\u01DB\x02\x02\u1087\u1088\x07#\x02\x02" +
		"\u1088\u02EB\x03\x02\x02\x02\u1089\u108A\x07\u01DC\x02\x02\u108A\u108B" +
		"\x07#\x02\x02\u108B\u02ED\x03\x02\x02\x02\u108C\u108D\x07\u01DD\x02\x02" +
		"\u108D\u108E\x07!\x02\x02\u108E\u02EF\x03\x02\x02\x02\u108F\u1090\x07" +
		"\u01DE\x02\x02\u1090\u1091\x07#\x02\x02\u1091\u02F1\x03\x02\x02\x02\u1092" +
		"\u1093\x07\u01DF\x02\x02\u1093\u1098\x05\xACW\x02\u1094\u1095\x07\u01F7" +
		"\x02\x02\u1095\u1097\x05\xACW\x02\u1096\u1094\x03\x02\x02\x02\u1097\u109A" +
		"\x03\x02\x02\x02\u1098\u1096\x03\x02\x02\x02\u1098\u1099\x03\x02\x02\x02" +
		"\u1099\u02F3\x03\x02\x02\x02\u109A\u1098\x03\x02\x02\x02\u109B\u109C\x07" +
		"\u01E0\x02\x02\u109C\u109D\x07#\x02\x02\u109D\u02F5\x03\x02\x02\x02\u109E" +
		"\u109F\x07\u01E1\x02\x02\u109F\u10A0\x05x=\x02\u10A0\u02F7\x03\x02\x02" +
		"\x02\u10A1\u10A2\x07\u01E2\x02\x02\u10A2\u10A3\x05\xAAV\x02\u10A3\u02F9" +
		"\x03\x02\x02\x02\u10A4\u10A5\x07\u01E3\x02\x02\u10A5\u10A6\x05\u0264\u0133" +
		"\x02\u10A6\u02FB\x03\x02\x02\x02\u10A7\u10A8\x07\u01E4\x02\x02\u10A8\u10A9" +
		"\x05\u0264\u0133\x02\u10A9\u02FD\x03\x02\x02\x02\u10AA\u10AB\x07\u01E5" +
		"\x02\x02\u10AB\u10AC\x05\u0264\u0133\x02\u10AC\u02FF\x03\x02\x02\x02\u10AD" +
		"\u10AE\x07\u01E6\x02\x02\u10AE\u10AF\x07#\x02\x02\u10AF\u0301\x03\x02" +
		"\x02\x02\u10B0\u10B1\x07\u01E7\x02\x02\u10B1\u10B2\x07#\x02\x02\u10B2" +
		"\u0303\x03\x02\x02\x02\u10B3\u10B4\x07\u01E8\x02\x02\u10B4\u10B5\x05\u0264" +
		"\u0133\x02\u10B5\u0305\x03\x02\x02\x02\u10B6\u10B7\x07\u01E9\x02\x02\u10B7" +
		"\u10B8\x07!\x02\x02\u10B8\u0307\x03\x02\x02\x02\u10B9\u10BA\x07\u01EA" +
		"\x02\x02\u10BA\u10BB\x05\u0264\u0133\x02\u10BB\u0309\x03\x02\x02\x02\u10BC" +
		"\u10BD\x07\u0193\x02\x02\u10BD\u10BE\x074\x02\x02\u10BE\u030B\x03\x02" +
		"\x02\x02\u10BF\u10C0\x07\u01EB\x02\x02\u10C0\u10C1\x05\u0264\u0133\x02" +
		"\u10C1\u030D\x03\x02\x02\x02\u10C2\u10C3\x07\u01EC\x02\x02\u10C3\u10C4" +
		"\x05\u0264\u0133\x02\u10C4\u030F\x03\x02\x02\x02\u10C5\u10C6\x07\u01ED" +
		"\x02\x02\u10C6\u10C7\x05\xAAV\x02\u10C7\u0311\x03\x02\x02\x02\u10C8\u10C9" +
		"\x07\u0195\x02\x02\u10C9\u10CA\x07!\x02\x02\u10CA\u0313\x03\x02\x02\x02" +
		"\u10CB\u10CC\x07\u0195\x02\x02\u10CC\u10CD\x07#\x02\x02\u10CD\u0315\x03" +
		"\x02\x02\x02\u10CE\u10CF\x07\u01EE\x02\x02\u10CF\u10D0\x05\u0264\u0133" +
		"\x02\u10D0\u0317\x03\x02\x02\x02\u10D1\u10D2\x07\u01EF\x02\x02\u10D2\u10D3" +
		"\x07!\x02\x02\u10D3\u0319\x03\x02\x02\x02\u10D4\u10D5\x07\u01F0\x02\x02" +
		"\u10D5\u10D6\x073\x02\x02\u10D6\u031B\x03\x02\x02\x02\u10D7\u10D8\x07" +
		"\u01F1\x02\x02\u10D8\u10D9\x05\u0264\u0133\x02\u10D9\u031D\x03\x02\x02" +
		"\x02\u017B\u0321\u0328\u0347\u035B\u035E\u0361\u0364\u0367\u036A\u036D" +
		"\u0375\u037C\u0382\u0388\u038B\u038E\u0391\u0394\u0397\u039A\u039D\u03A6" +
		"\u03AD\u03B3\u03B9\u03BC\u03BF\u03C2\u03C5\u03C8\u03D2\u03D9\u03E3\u03EF" +
		"\u03FD\u0400\u0407\u040B\u0416\u0426\u042C\u042F\u0432\u0435\u0438\u043D" +
		"\u0446\u0449\u044E\u0456\u045A\u0468\u0478\u047E\u0483\u0489\u048E\u0497" +
		"\u04A4\u04AD\u04B5\u04BF\u04C2\u04CA\u04D8\u04E3\u04EB\u04F5\u04F7\u04FE" +
		"\u0507\u0513\u051F\u0527\u052C\u0531\u0535\u053F\u0548\u054C\u0556\u055B" +
		"\u0560\u0564\u056E\u0577\u057B\u0585\u0588\u058F\u059E\u05AB\u05B2\u05B7" +
		"\u05C0\u05C3\u05CE\u05D7\u05EC\u05FE\u0601\u060B\u060E\u0612\u061C\u061F" +
		"\u0622\u062A\u062D\u0662\u066D\u0676\u0679\u0683\u068C\u068F\u0699\u069D" +
		"\u06A0\u06A3\u06A6\u06B1\u06C1\u06D1\u06DA\u06DD\u06DF\u06E7\u06EE\u06F3" +
		"\u06F5\u06FB\u06FF\u070D\u071B\u0734\u073D\u0745\u0748\u0754\u075E\u0778" +
		"\u0784\u078C\u0791\u07A1\u07B1\u07B4\u07BE\u07C1\u07C5\u07CF\u07DB\u07E8" +
		"\u07F2\u07F8\u0886\u0891\u089B\u08BC\u08C9\u08D6\u091C\u0920\u0927\u092D" +
		"\u0933\u0939\u093E\u0944\u0947\u0950\u0957\u095E\u0966\u096D\u0977\u097E" +
		"\u0988\u098F\u0999\u09A0\u09AA\u09B1\u09BB\u09C2\u09CC\u09D1\u09DA\u09DF" +
		"\u09E8\u09EF\u09F9\u0A04\u0A0F\u0A16\u0A20\u0A27\u0A31\u0A36\u0A3F\u0A44" +
		"\u0A4D\u0A58\u0A63\u0A6E\u0A79\u0A86\u0A93\u0A9C\u0AA2\u0AAD\u0AB3\u0AB8" +
		"\u0ABB\u0AC0\u0AC4\u0AC8\u0ACE\u0AD3\u0ADA\u0AE0\u0AE6\u0AEC\u0AF1\u0AF7" +
		"\u0AFA\u0AFE\u0B01\u0B09\u0B0F\u0B15\u0B1A\u0B21\u0B26\u0B2C\u0B31\u0B3A" +
		"\u0B41\u0B4C\u0B57\u0B62\u0B6D\u0B78\u0B83\u0B8E\u0B99\u0BA4\u0BAF\u0BBA" +
		"\u0BC5\u0BD0\u0BDC\u0BE3\u0BEE\u0BF5\u0BFE\u0C05\u0C0C\u0C18\u0C1F\u0C25" +
		"\u0C29\u0C2E\u0C32\u0C3C\u0C45\u0C4A\u0C50\u0C5B\u0C61\u0C66\u0C6D\u0C79" +
		"\u0C7C\u0C83\u0C8F\u0C92\u0C99\u0CA9\u0CAC\u0CB4\u0CBB\u0CC0\u0CC2\u0CC8" +
		"\u0CD0\u0CD8\u0CDC\u0CE4\u0D28\u0D31\u0D34\u0D3F\u0D42\u0D4D\u0D50\u0D5B" +
		"\u0D5E\u0D77\u0D80\u0D83\u0D94\u0D9D\u0DA0\u0DA7\u0DB0\u0DB3\u0DBC\u0DC5" +
		"\u0DC8\u0DD8\u0DE1\u0DE4\u0DEA\u0DF3\u0DF6\u0E01\u0E0A\u0E0D\u0E15\u0E1E" +
		"\u0E21\u0E29\u0E32\u0E35\u0E3C\u0E45\u0E48\u0E55\u0E5E\u0E61\u0E6A\u0E73" +
		"\u0E76\u0E7E\u0E87\u0E8A\u0E92\u0E9B\u0E9E\u0EAA\u0EB3\u0EB6\u0EBD\u0EC6" +
		"\u0EC9\u0ED4\u0EDD\u0EE0\u0EEC\u0EF5\u0EF8\u0F13\u0F1C\u0F1F\u0F27\u0F30" +
		"\u0F33\u0F3E\u0F41\u0F4B\u0F56\u0F59\u0F60\u0F76\u0F7D\u0F85\u0F8A\u0F99" +
		"\u0F9C\u0FA5\u0FB5\u0FBA\u0FC4\u0FCA\u1098";
	public static readonly _serializedATN: string = Utils.join(
		[
			LLVMIRParser._serializedATNSegment0,
			LLVMIRParser._serializedATNSegment1,
			LLVMIRParser._serializedATNSegment2,
			LLVMIRParser._serializedATNSegment3,
			LLVMIRParser._serializedATNSegment4,
			LLVMIRParser._serializedATNSegment5,
			LLVMIRParser._serializedATNSegment6,
			LLVMIRParser._serializedATNSegment7,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LLVMIRParser.__ATN) {
			LLVMIRParser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(LLVMIRParser._serializedATN));
		}

		return LLVMIRParser.__ATN;
	}

}

export class CompilationUnitContext extends ParserRuleContext {
	public EOF(): TerminalNode { return this.getToken(LLVMIRParser.EOF, 0); }
	public topLevelEntity(): TopLevelEntityContext[];
	public topLevelEntity(i: number): TopLevelEntityContext;
	public topLevelEntity(i?: number): TopLevelEntityContext | TopLevelEntityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TopLevelEntityContext);
		} else {
			return this.getRuleContext(i, TopLevelEntityContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_compilationUnit; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCompilationUnit) {
			listener.enterCompilationUnit(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCompilationUnit) {
			listener.exitCompilationUnit(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCompilationUnit) {
			return visitor.visitCompilationUnit(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TargetDefContext extends ParserRuleContext {
	public targetDataLayout(): TargetDataLayoutContext | undefined {
		return this.tryGetRuleContext(0, TargetDataLayoutContext);
	}
	public targetTriple(): TargetTripleContext | undefined {
		return this.tryGetRuleContext(0, TargetTripleContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_targetDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTargetDef) {
			listener.enterTargetDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTargetDef) {
			listener.exitTargetDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTargetDef) {
			return visitor.visitTargetDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SourceFilenameContext extends ParserRuleContext {
	public KwSourceFilename(): TerminalNode { return this.getToken(LLVMIRParser.KwSourceFilename, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sourceFilename; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSourceFilename) {
			listener.enterSourceFilename(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSourceFilename) {
			listener.exitSourceFilename(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSourceFilename) {
			return visitor.visitSourceFilename(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TargetDataLayoutContext extends ParserRuleContext {
	public KwTarget(): TerminalNode { return this.getToken(LLVMIRParser.KwTarget, 0); }
	public KwDatalayout(): TerminalNode { return this.getToken(LLVMIRParser.KwDatalayout, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_targetDataLayout; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTargetDataLayout) {
			listener.enterTargetDataLayout(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTargetDataLayout) {
			listener.exitTargetDataLayout(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTargetDataLayout) {
			return visitor.visitTargetDataLayout(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TargetTripleContext extends ParserRuleContext {
	public KwTarget(): TerminalNode { return this.getToken(LLVMIRParser.KwTarget, 0); }
	public KwTriple(): TerminalNode { return this.getToken(LLVMIRParser.KwTriple, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_targetTriple; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTargetTriple) {
			listener.enterTargetTriple(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTargetTriple) {
			listener.exitTargetTriple(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTargetTriple) {
			return visitor.visitTargetTriple(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TopLevelEntityContext extends ParserRuleContext {
	public sourceFilename(): SourceFilenameContext | undefined {
		return this.tryGetRuleContext(0, SourceFilenameContext);
	}
	public targetDef(): TargetDefContext | undefined {
		return this.tryGetRuleContext(0, TargetDefContext);
	}
	public moduleAsm(): ModuleAsmContext | undefined {
		return this.tryGetRuleContext(0, ModuleAsmContext);
	}
	public typeDef(): TypeDefContext | undefined {
		return this.tryGetRuleContext(0, TypeDefContext);
	}
	public comdatDef(): ComdatDefContext | undefined {
		return this.tryGetRuleContext(0, ComdatDefContext);
	}
	public globalDecl(): GlobalDeclContext | undefined {
		return this.tryGetRuleContext(0, GlobalDeclContext);
	}
	public globalDef(): GlobalDefContext | undefined {
		return this.tryGetRuleContext(0, GlobalDefContext);
	}
	public indirectSymbolDef(): IndirectSymbolDefContext | undefined {
		return this.tryGetRuleContext(0, IndirectSymbolDefContext);
	}
	public funcDecl(): FuncDeclContext | undefined {
		return this.tryGetRuleContext(0, FuncDeclContext);
	}
	public funcDef(): FuncDefContext | undefined {
		return this.tryGetRuleContext(0, FuncDefContext);
	}
	public attrGroupDef(): AttrGroupDefContext | undefined {
		return this.tryGetRuleContext(0, AttrGroupDefContext);
	}
	public namedMetadataDef(): NamedMetadataDefContext | undefined {
		return this.tryGetRuleContext(0, NamedMetadataDefContext);
	}
	public metadataDef(): MetadataDefContext | undefined {
		return this.tryGetRuleContext(0, MetadataDefContext);
	}
	public useListOrder(): UseListOrderContext | undefined {
		return this.tryGetRuleContext(0, UseListOrderContext);
	}
	public useListOrderBB(): UseListOrderBBContext | undefined {
		return this.tryGetRuleContext(0, UseListOrderBBContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_topLevelEntity; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTopLevelEntity) {
			listener.enterTopLevelEntity(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTopLevelEntity) {
			listener.exitTopLevelEntity(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTopLevelEntity) {
			return visitor.visitTopLevelEntity(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ModuleAsmContext extends ParserRuleContext {
	public KwModule(): TerminalNode { return this.getToken(LLVMIRParser.KwModule, 0); }
	public KwAsm(): TerminalNode { return this.getToken(LLVMIRParser.KwAsm, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_moduleAsm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterModuleAsm) {
			listener.enterModuleAsm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitModuleAsm) {
			listener.exitModuleAsm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitModuleAsm) {
			return visitor.visitModuleAsm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeDefContext extends ParserRuleContext {
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public KwType(): TerminalNode { return this.getToken(LLVMIRParser.KwType, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typeDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypeDef) {
			listener.enterTypeDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypeDef) {
			listener.exitTypeDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypeDef) {
			return visitor.visitTypeDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ComdatDefContext extends ParserRuleContext {
	public _selectionKind!: Token;
	public ComdatName(): TerminalNode { return this.getToken(LLVMIRParser.ComdatName, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public KwComdat(): TerminalNode { return this.getToken(LLVMIRParser.KwComdat, 0); }
	public KwAny(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAny, 0); }
	public KwExactmatch(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExactmatch, 0); }
	public KwLargest(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLargest, 0); }
	public KwNodeduplicate(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNodeduplicate, 0); }
	public KwSamesize(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSamesize, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_comdatDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterComdatDef) {
			listener.enterComdatDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitComdatDef) {
			listener.exitComdatDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitComdatDef) {
			return visitor.visitComdatDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GlobalDeclContext extends ParserRuleContext {
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public externalLinkage(): ExternalLinkageContext {
		return this.getRuleContext(0, ExternalLinkageContext);
	}
	public immutable(): ImmutableContext {
		return this.getRuleContext(0, ImmutableContext);
	}
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public preemption(): PreemptionContext | undefined {
		return this.tryGetRuleContext(0, PreemptionContext);
	}
	public visibility(): VisibilityContext | undefined {
		return this.tryGetRuleContext(0, VisibilityContext);
	}
	public dllStorageClass(): DllStorageClassContext | undefined {
		return this.tryGetRuleContext(0, DllStorageClassContext);
	}
	public threadLocal(): ThreadLocalContext | undefined {
		return this.tryGetRuleContext(0, ThreadLocalContext);
	}
	public unnamedAddr(): UnnamedAddrContext | undefined {
		return this.tryGetRuleContext(0, UnnamedAddrContext);
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public externallyInitialized(): ExternallyInitializedContext | undefined {
		return this.tryGetRuleContext(0, ExternallyInitializedContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public globalField(): GlobalFieldContext[];
	public globalField(i: number): GlobalFieldContext;
	public globalField(i?: number): GlobalFieldContext | GlobalFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalFieldContext);
		} else {
			return this.getRuleContext(i, GlobalFieldContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_globalDecl; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGlobalDecl) {
			listener.enterGlobalDecl(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGlobalDecl) {
			listener.exitGlobalDecl(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGlobalDecl) {
			return visitor.visitGlobalDecl(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GlobalDefContext extends ParserRuleContext {
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public immutable(): ImmutableContext {
		return this.getRuleContext(0, ImmutableContext);
	}
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public constant(): ConstantContext {
		return this.getRuleContext(0, ConstantContext);
	}
	public internalLinkage(): InternalLinkageContext | undefined {
		return this.tryGetRuleContext(0, InternalLinkageContext);
	}
	public preemption(): PreemptionContext | undefined {
		return this.tryGetRuleContext(0, PreemptionContext);
	}
	public visibility(): VisibilityContext | undefined {
		return this.tryGetRuleContext(0, VisibilityContext);
	}
	public dllStorageClass(): DllStorageClassContext | undefined {
		return this.tryGetRuleContext(0, DllStorageClassContext);
	}
	public threadLocal(): ThreadLocalContext | undefined {
		return this.tryGetRuleContext(0, ThreadLocalContext);
	}
	public unnamedAddr(): UnnamedAddrContext | undefined {
		return this.tryGetRuleContext(0, UnnamedAddrContext);
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public externallyInitialized(): ExternallyInitializedContext | undefined {
		return this.tryGetRuleContext(0, ExternallyInitializedContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public globalField(): GlobalFieldContext[];
	public globalField(i: number): GlobalFieldContext;
	public globalField(i?: number): GlobalFieldContext | GlobalFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalFieldContext);
		} else {
			return this.getRuleContext(i, GlobalFieldContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_globalDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGlobalDef) {
			listener.enterGlobalDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGlobalDef) {
			listener.exitGlobalDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGlobalDef) {
			return visitor.visitGlobalDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IndirectSymbolDefContext extends ParserRuleContext {
	public _indirectSymbolKind!: Token;
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public indirectSymbol(): IndirectSymbolContext {
		return this.getRuleContext(0, IndirectSymbolContext);
	}
	public KwAlias(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAlias, 0); }
	public KwIfunc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwIfunc, 0); }
	public linkage(): LinkageContext | undefined {
		return this.tryGetRuleContext(0, LinkageContext);
	}
	public preemption(): PreemptionContext | undefined {
		return this.tryGetRuleContext(0, PreemptionContext);
	}
	public visibility(): VisibilityContext | undefined {
		return this.tryGetRuleContext(0, VisibilityContext);
	}
	public dllStorageClass(): DllStorageClassContext | undefined {
		return this.tryGetRuleContext(0, DllStorageClassContext);
	}
	public threadLocal(): ThreadLocalContext | undefined {
		return this.tryGetRuleContext(0, ThreadLocalContext);
	}
	public unnamedAddr(): UnnamedAddrContext | undefined {
		return this.tryGetRuleContext(0, UnnamedAddrContext);
	}
	public partition(): PartitionContext[];
	public partition(i: number): PartitionContext;
	public partition(i?: number): PartitionContext | PartitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PartitionContext);
		} else {
			return this.getRuleContext(i, PartitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_indirectSymbolDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIndirectSymbolDef) {
			listener.enterIndirectSymbolDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIndirectSymbolDef) {
			listener.exitIndirectSymbolDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIndirectSymbolDef) {
			return visitor.visitIndirectSymbolDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncDeclContext extends ParserRuleContext {
	public KwDeclare(): TerminalNode { return this.getToken(LLVMIRParser.KwDeclare, 0); }
	public funcHeader(): FuncHeaderContext {
		return this.getRuleContext(0, FuncHeaderContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcDecl; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncDecl) {
			listener.enterFuncDecl(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncDecl) {
			listener.exitFuncDecl(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncDecl) {
			return visitor.visitFuncDecl(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncDefContext extends ParserRuleContext {
	public KwDefine(): TerminalNode { return this.getToken(LLVMIRParser.KwDefine, 0); }
	public funcHeader(): FuncHeaderContext {
		return this.getRuleContext(0, FuncHeaderContext);
	}
	public funcBody(): FuncBodyContext {
		return this.getRuleContext(0, FuncBodyContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncDef) {
			listener.enterFuncDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncDef) {
			listener.exitFuncDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncDef) {
			return visitor.visitFuncDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AttrGroupDefContext extends ParserRuleContext {
	public KwAttributes(): TerminalNode { return this.getToken(LLVMIRParser.KwAttributes, 0); }
	public AttrGroupId(): TerminalNode { return this.getToken(LLVMIRParser.AttrGroupId, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_attrGroupDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAttrGroupDef) {
			listener.enterAttrGroupDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAttrGroupDef) {
			listener.exitAttrGroupDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAttrGroupDef) {
			return visitor.visitAttrGroupDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NamedMetadataDefContext extends ParserRuleContext {
	public MetadataName(): TerminalNode { return this.getToken(LLVMIRParser.MetadataName, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public Exclamation(): TerminalNode { return this.getToken(LLVMIRParser.Exclamation, 0); }
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public metadataNode(): MetadataNodeContext[];
	public metadataNode(i: number): MetadataNodeContext;
	public metadataNode(i?: number): MetadataNodeContext | MetadataNodeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataNodeContext);
		} else {
			return this.getRuleContext(i, MetadataNodeContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_namedMetadataDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNamedMetadataDef) {
			listener.enterNamedMetadataDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNamedMetadataDef) {
			listener.exitNamedMetadataDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNamedMetadataDef) {
			return visitor.visitNamedMetadataDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MetadataDefContext extends ParserRuleContext {
	public MetadataId(): TerminalNode { return this.getToken(LLVMIRParser.MetadataId, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public mdTuple(): MdTupleContext | undefined {
		return this.tryGetRuleContext(0, MdTupleContext);
	}
	public specializedMDNode(): SpecializedMDNodeContext | undefined {
		return this.tryGetRuleContext(0, SpecializedMDNodeContext);
	}
	public distinct(): DistinctContext | undefined {
		return this.tryGetRuleContext(0, DistinctContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_metadataDef; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMetadataDef) {
			listener.enterMetadataDef(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMetadataDef) {
			listener.exitMetadataDef(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMetadataDef) {
			return visitor.visitMetadataDef(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UseListOrderContext extends ParserRuleContext {
	public KwUselistorder(): TerminalNode { return this.getToken(LLVMIRParser.KwUselistorder, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_useListOrder; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUseListOrder) {
			listener.enterUseListOrder(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUseListOrder) {
			listener.exitUseListOrder(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUseListOrder) {
			return visitor.visitUseListOrder(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UseListOrderBBContext extends ParserRuleContext {
	public KwUselistorderBb(): TerminalNode { return this.getToken(LLVMIRParser.KwUselistorderBb, 0); }
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_useListOrderBB; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUseListOrderBB) {
			listener.enterUseListOrderBB(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUseListOrderBB) {
			listener.exitUseListOrderBB(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUseListOrderBB) {
			return visitor.visitUseListOrderBB(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncHeaderContext extends ParserRuleContext {
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public params(): ParamsContext {
		return this.getRuleContext(0, ParamsContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public linkage(): LinkageContext | undefined {
		return this.tryGetRuleContext(0, LinkageContext);
	}
	public preemption(): PreemptionContext | undefined {
		return this.tryGetRuleContext(0, PreemptionContext);
	}
	public visibility(): VisibilityContext | undefined {
		return this.tryGetRuleContext(0, VisibilityContext);
	}
	public dllStorageClass(): DllStorageClassContext | undefined {
		return this.tryGetRuleContext(0, DllStorageClassContext);
	}
	public callingConv(): CallingConvContext | undefined {
		return this.tryGetRuleContext(0, CallingConvContext);
	}
	public returnAttribute(): ReturnAttributeContext[];
	public returnAttribute(i: number): ReturnAttributeContext;
	public returnAttribute(i?: number): ReturnAttributeContext | ReturnAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ReturnAttributeContext);
		} else {
			return this.getRuleContext(i, ReturnAttributeContext);
		}
	}
	public unnamedAddr(): UnnamedAddrContext | undefined {
		return this.tryGetRuleContext(0, UnnamedAddrContext);
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public funcHdrField(): FuncHdrFieldContext[];
	public funcHdrField(i: number): FuncHdrFieldContext;
	public funcHdrField(i?: number): FuncHdrFieldContext | FuncHdrFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncHdrFieldContext);
		} else {
			return this.getRuleContext(i, FuncHdrFieldContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcHeader; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncHeader) {
			listener.enterFuncHeader(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncHeader) {
			listener.exitFuncHeader(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncHeader) {
			return visitor.visitFuncHeader(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IndirectSymbolContext extends ParserRuleContext {
	public typeConst(): TypeConstContext | undefined {
		return this.tryGetRuleContext(0, TypeConstContext);
	}
	public bitCastExpr(): BitCastExprContext | undefined {
		return this.tryGetRuleContext(0, BitCastExprContext);
	}
	public getElementPtrExpr(): GetElementPtrExprContext | undefined {
		return this.tryGetRuleContext(0, GetElementPtrExprContext);
	}
	public addrSpaceCastExpr(): AddrSpaceCastExprContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceCastExprContext);
	}
	public intToPtrExpr(): IntToPtrExprContext | undefined {
		return this.tryGetRuleContext(0, IntToPtrExprContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_indirectSymbol; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIndirectSymbol) {
			listener.enterIndirectSymbol(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIndirectSymbol) {
			listener.exitIndirectSymbol(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIndirectSymbol) {
			return visitor.visitIndirectSymbol(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CallingConvContext extends ParserRuleContext {
	public callingConvEnum(): CallingConvEnumContext | undefined {
		return this.tryGetRuleContext(0, CallingConvEnumContext);
	}
	public callingConvInt(): CallingConvIntContext | undefined {
		return this.tryGetRuleContext(0, CallingConvIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_callingConv; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCallingConv) {
			listener.enterCallingConv(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCallingConv) {
			listener.exitCallingConv(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCallingConv) {
			return visitor.visitCallingConv(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CallingConvIntContext extends ParserRuleContext {
	public KwCc(): TerminalNode { return this.getToken(LLVMIRParser.KwCc, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_callingConvInt; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCallingConvInt) {
			listener.enterCallingConvInt(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCallingConvInt) {
			listener.exitCallingConvInt(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCallingConvInt) {
			return visitor.visitCallingConvInt(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncHdrFieldContext extends ParserRuleContext {
	public funcAttribute(): FuncAttributeContext | undefined {
		return this.tryGetRuleContext(0, FuncAttributeContext);
	}
	public section(): SectionContext | undefined {
		return this.tryGetRuleContext(0, SectionContext);
	}
	public partition(): PartitionContext | undefined {
		return this.tryGetRuleContext(0, PartitionContext);
	}
	public comdat(): ComdatContext | undefined {
		return this.tryGetRuleContext(0, ComdatContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public gc(): GcContext | undefined {
		return this.tryGetRuleContext(0, GcContext);
	}
	public prefix(): PrefixContext | undefined {
		return this.tryGetRuleContext(0, PrefixContext);
	}
	public prologue(): PrologueContext | undefined {
		return this.tryGetRuleContext(0, PrologueContext);
	}
	public personality(): PersonalityContext | undefined {
		return this.tryGetRuleContext(0, PersonalityContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcHdrField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncHdrField) {
			listener.enterFuncHdrField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncHdrField) {
			listener.exitFuncHdrField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncHdrField) {
			return visitor.visitFuncHdrField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GcContext extends ParserRuleContext {
	public KwGc(): TerminalNode { return this.getToken(LLVMIRParser.KwGc, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_gc; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGc) {
			listener.enterGc(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGc) {
			listener.exitGc(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGc) {
			return visitor.visitGc(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PrefixContext extends ParserRuleContext {
	public KwPrefix(): TerminalNode { return this.getToken(LLVMIRParser.KwPrefix, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_prefix; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPrefix) {
			listener.enterPrefix(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPrefix) {
			listener.exitPrefix(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPrefix) {
			return visitor.visitPrefix(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PrologueContext extends ParserRuleContext {
	public KwPrologue(): TerminalNode { return this.getToken(LLVMIRParser.KwPrologue, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_prologue; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPrologue) {
			listener.enterPrologue(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPrologue) {
			listener.exitPrologue(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPrologue) {
			return visitor.visitPrologue(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PersonalityContext extends ParserRuleContext {
	public KwPersonality(): TerminalNode { return this.getToken(LLVMIRParser.KwPersonality, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_personality; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPersonality) {
			listener.enterPersonality(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPersonality) {
			listener.exitPersonality(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPersonality) {
			return visitor.visitPersonality(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ReturnAttributeContext extends ParserRuleContext {
	public returnAttr(): ReturnAttrContext | undefined {
		return this.tryGetRuleContext(0, ReturnAttrContext);
	}
	public dereferenceable(): DereferenceableContext | undefined {
		return this.tryGetRuleContext(0, DereferenceableContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_returnAttribute; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterReturnAttribute) {
			listener.enterReturnAttribute(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitReturnAttribute) {
			listener.exitReturnAttribute(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitReturnAttribute) {
			return visitor.visitReturnAttribute(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncBodyContext extends ParserRuleContext {
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public basicBlock(): BasicBlockContext[];
	public basicBlock(i: number): BasicBlockContext;
	public basicBlock(i?: number): BasicBlockContext | BasicBlockContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BasicBlockContext);
		} else {
			return this.getRuleContext(i, BasicBlockContext);
		}
	}
	public useListOrder(): UseListOrderContext[];
	public useListOrder(i: number): UseListOrderContext;
	public useListOrder(i?: number): UseListOrderContext | UseListOrderContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UseListOrderContext);
		} else {
			return this.getRuleContext(i, UseListOrderContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcBody; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncBody) {
			listener.enterFuncBody(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncBody) {
			listener.exitFuncBody(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncBody) {
			return visitor.visitFuncBody(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BasicBlockContext extends ParserRuleContext {
	public terminator(): TerminatorContext {
		return this.getRuleContext(0, TerminatorContext);
	}
	public LabelIdent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LabelIdent, 0); }
	public instruction(): InstructionContext[];
	public instruction(i: number): InstructionContext;
	public instruction(i?: number): InstructionContext | InstructionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstructionContext);
		} else {
			return this.getRuleContext(i, InstructionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_basicBlock; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBasicBlock) {
			listener.enterBasicBlock(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBasicBlock) {
			listener.exitBasicBlock(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBasicBlock) {
			return visitor.visitBasicBlock(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InstructionContext extends ParserRuleContext {
	public localDefInst(): LocalDefInstContext | undefined {
		return this.tryGetRuleContext(0, LocalDefInstContext);
	}
	public valueInstruction(): ValueInstructionContext | undefined {
		return this.tryGetRuleContext(0, ValueInstructionContext);
	}
	public storeInst(): StoreInstContext | undefined {
		return this.tryGetRuleContext(0, StoreInstContext);
	}
	public fenceInst(): FenceInstContext | undefined {
		return this.tryGetRuleContext(0, FenceInstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_instruction; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInstruction) {
			listener.enterInstruction(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInstruction) {
			listener.exitInstruction(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInstruction) {
			return visitor.visitInstruction(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TerminatorContext extends ParserRuleContext {
	public localDefTerm(): LocalDefTermContext | undefined {
		return this.tryGetRuleContext(0, LocalDefTermContext);
	}
	public valueTerminator(): ValueTerminatorContext | undefined {
		return this.tryGetRuleContext(0, ValueTerminatorContext);
	}
	public retTerm(): RetTermContext | undefined {
		return this.tryGetRuleContext(0, RetTermContext);
	}
	public brTerm(): BrTermContext | undefined {
		return this.tryGetRuleContext(0, BrTermContext);
	}
	public condBrTerm(): CondBrTermContext | undefined {
		return this.tryGetRuleContext(0, CondBrTermContext);
	}
	public switchTerm(): SwitchTermContext | undefined {
		return this.tryGetRuleContext(0, SwitchTermContext);
	}
	public indirectBrTerm(): IndirectBrTermContext | undefined {
		return this.tryGetRuleContext(0, IndirectBrTermContext);
	}
	public resumeTerm(): ResumeTermContext | undefined {
		return this.tryGetRuleContext(0, ResumeTermContext);
	}
	public catchRetTerm(): CatchRetTermContext | undefined {
		return this.tryGetRuleContext(0, CatchRetTermContext);
	}
	public cleanupRetTerm(): CleanupRetTermContext | undefined {
		return this.tryGetRuleContext(0, CleanupRetTermContext);
	}
	public unreachableTerm(): UnreachableTermContext | undefined {
		return this.tryGetRuleContext(0, UnreachableTermContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_terminator; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTerminator) {
			listener.enterTerminator(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTerminator) {
			listener.exitTerminator(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTerminator) {
			return visitor.visitTerminator(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LocalDefTermContext extends ParserRuleContext {
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public valueTerminator(): ValueTerminatorContext {
		return this.getRuleContext(0, ValueTerminatorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_localDefTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLocalDefTerm) {
			listener.enterLocalDefTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLocalDefTerm) {
			listener.exitLocalDefTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLocalDefTerm) {
			return visitor.visitLocalDefTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueTerminatorContext extends ParserRuleContext {
	public invokeTerm(): InvokeTermContext | undefined {
		return this.tryGetRuleContext(0, InvokeTermContext);
	}
	public callBrTerm(): CallBrTermContext | undefined {
		return this.tryGetRuleContext(0, CallBrTermContext);
	}
	public catchSwitchTerm(): CatchSwitchTermContext | undefined {
		return this.tryGetRuleContext(0, CatchSwitchTermContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_valueTerminator; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValueTerminator) {
			listener.enterValueTerminator(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValueTerminator) {
			listener.exitValueTerminator(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValueTerminator) {
			return visitor.visitValueTerminator(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RetTermContext extends ParserRuleContext {
	public OpRet(): TerminalNode { return this.getToken(LLVMIRParser.OpRet, 0); }
	public voidType(): VoidTypeContext | undefined {
		return this.tryGetRuleContext(0, VoidTypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public concreteType(): ConcreteTypeContext | undefined {
		return this.tryGetRuleContext(0, ConcreteTypeContext);
	}
	public value(): ValueContext | undefined {
		return this.tryGetRuleContext(0, ValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_retTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRetTerm) {
			listener.enterRetTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRetTerm) {
			listener.exitRetTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRetTerm) {
			return visitor.visitRetTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BrTermContext extends ParserRuleContext {
	public OpBr(): TerminalNode { return this.getToken(LLVMIRParser.OpBr, 0); }
	public label(): LabelContext {
		return this.getRuleContext(0, LabelContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_brTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBrTerm) {
			listener.enterBrTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBrTerm) {
			listener.exitBrTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBrTerm) {
			return visitor.visitBrTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CondBrTermContext extends ParserRuleContext {
	public OpBr(): TerminalNode { return this.getToken(LLVMIRParser.OpBr, 0); }
	public IntType(): TerminalNode { return this.getToken(LLVMIRParser.IntType, 0); }
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public label(): LabelContext[];
	public label(i: number): LabelContext;
	public label(i?: number): LabelContext | LabelContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LabelContext);
		} else {
			return this.getRuleContext(i, LabelContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_condBrTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCondBrTerm) {
			listener.enterCondBrTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCondBrTerm) {
			listener.exitCondBrTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCondBrTerm) {
			return visitor.visitCondBrTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SwitchTermContext extends ParserRuleContext {
	public OpSwitch(): TerminalNode { return this.getToken(LLVMIRParser.OpSwitch, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public label(): LabelContext {
		return this.getRuleContext(0, LabelContext);
	}
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	public case(): CaseContext[];
	public case(i: number): CaseContext;
	public case(i?: number): CaseContext | CaseContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CaseContext);
		} else {
			return this.getRuleContext(i, CaseContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_switchTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSwitchTerm) {
			listener.enterSwitchTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSwitchTerm) {
			listener.exitSwitchTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSwitchTerm) {
			return visitor.visitSwitchTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IndirectBrTermContext extends ParserRuleContext {
	public OpIndirectbr(): TerminalNode { return this.getToken(LLVMIRParser.OpIndirectbr, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	public label(): LabelContext[];
	public label(i: number): LabelContext;
	public label(i?: number): LabelContext | LabelContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LabelContext);
		} else {
			return this.getRuleContext(i, LabelContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_indirectBrTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIndirectBrTerm) {
			listener.enterIndirectBrTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIndirectBrTerm) {
			listener.exitIndirectBrTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIndirectBrTerm) {
			return visitor.visitIndirectBrTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ResumeTermContext extends ParserRuleContext {
	public OpResume(): TerminalNode { return this.getToken(LLVMIRParser.OpResume, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_resumeTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterResumeTerm) {
			listener.enterResumeTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitResumeTerm) {
			listener.exitResumeTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitResumeTerm) {
			return visitor.visitResumeTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CatchRetTermContext extends ParserRuleContext {
	public OpCatchret(): TerminalNode { return this.getToken(LLVMIRParser.OpCatchret, 0); }
	public KwFrom(): TerminalNode { return this.getToken(LLVMIRParser.KwFrom, 0); }
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public label(): LabelContext {
		return this.getRuleContext(0, LabelContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_catchRetTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCatchRetTerm) {
			listener.enterCatchRetTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCatchRetTerm) {
			listener.exitCatchRetTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCatchRetTerm) {
			return visitor.visitCatchRetTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CleanupRetTermContext extends ParserRuleContext {
	public OpCleanupret(): TerminalNode { return this.getToken(LLVMIRParser.OpCleanupret, 0); }
	public KwFrom(): TerminalNode { return this.getToken(LLVMIRParser.KwFrom, 0); }
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public KwUnwind(): TerminalNode { return this.getToken(LLVMIRParser.KwUnwind, 0); }
	public unwindTarget(): UnwindTargetContext {
		return this.getRuleContext(0, UnwindTargetContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_cleanupRetTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCleanupRetTerm) {
			listener.enterCleanupRetTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCleanupRetTerm) {
			listener.exitCleanupRetTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCleanupRetTerm) {
			return visitor.visitCleanupRetTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UnreachableTermContext extends ParserRuleContext {
	public OpUnreachable(): TerminalNode { return this.getToken(LLVMIRParser.OpUnreachable, 0); }
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_unreachableTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUnreachableTerm) {
			listener.enterUnreachableTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUnreachableTerm) {
			listener.exitUnreachableTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUnreachableTerm) {
			return visitor.visitUnreachableTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InvokeTermContext extends ParserRuleContext {
	public OpInvoke(): TerminalNode { return this.getToken(LLVMIRParser.OpInvoke, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public args(): ArgsContext {
		return this.getRuleContext(0, ArgsContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public label(): LabelContext[];
	public label(i: number): LabelContext;
	public label(i?: number): LabelContext | LabelContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LabelContext);
		} else {
			return this.getRuleContext(i, LabelContext);
		}
	}
	public KwUnwind(): TerminalNode { return this.getToken(LLVMIRParser.KwUnwind, 0); }
	public callingConv(): CallingConvContext | undefined {
		return this.tryGetRuleContext(0, CallingConvContext);
	}
	public returnAttribute(): ReturnAttributeContext[];
	public returnAttribute(i: number): ReturnAttributeContext;
	public returnAttribute(i?: number): ReturnAttributeContext | ReturnAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ReturnAttributeContext);
		} else {
			return this.getRuleContext(i, ReturnAttributeContext);
		}
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	public LBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RBracket, 0); }
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public operandBundle(): OperandBundleContext[];
	public operandBundle(i: number): OperandBundleContext;
	public operandBundle(i?: number): OperandBundleContext | OperandBundleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OperandBundleContext);
		} else {
			return this.getRuleContext(i, OperandBundleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_invokeTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInvokeTerm) {
			listener.enterInvokeTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInvokeTerm) {
			listener.exitInvokeTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInvokeTerm) {
			return visitor.visitInvokeTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CallBrTermContext extends ParserRuleContext {
	public OpCallbr(): TerminalNode { return this.getToken(LLVMIRParser.OpCallbr, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public args(): ArgsContext {
		return this.getRuleContext(0, ArgsContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public label(): LabelContext[];
	public label(i: number): LabelContext;
	public label(i?: number): LabelContext | LabelContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LabelContext);
		} else {
			return this.getRuleContext(i, LabelContext);
		}
	}
	public LBracket(): TerminalNode[];
	public LBracket(i: number): TerminalNode;
	public LBracket(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.LBracket);
		} else {
			return this.getToken(LLVMIRParser.LBracket, i);
		}
	}
	public RBracket(): TerminalNode[];
	public RBracket(i: number): TerminalNode;
	public RBracket(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.RBracket);
		} else {
			return this.getToken(LLVMIRParser.RBracket, i);
		}
	}
	public callingConv(): CallingConvContext | undefined {
		return this.tryGetRuleContext(0, CallingConvContext);
	}
	public returnAttribute(): ReturnAttributeContext[];
	public returnAttribute(i: number): ReturnAttributeContext;
	public returnAttribute(i?: number): ReturnAttributeContext | ReturnAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ReturnAttributeContext);
		} else {
			return this.getRuleContext(i, ReturnAttributeContext);
		}
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public operandBundle(): OperandBundleContext[];
	public operandBundle(i: number): OperandBundleContext;
	public operandBundle(i?: number): OperandBundleContext | OperandBundleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OperandBundleContext);
		} else {
			return this.getRuleContext(i, OperandBundleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_callBrTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCallBrTerm) {
			listener.enterCallBrTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCallBrTerm) {
			listener.exitCallBrTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCallBrTerm) {
			return visitor.visitCallBrTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CatchSwitchTermContext extends ParserRuleContext {
	public OpCatchswitch(): TerminalNode { return this.getToken(LLVMIRParser.OpCatchswitch, 0); }
	public KwWithin(): TerminalNode { return this.getToken(LLVMIRParser.KwWithin, 0); }
	public exceptionPad(): ExceptionPadContext {
		return this.getRuleContext(0, ExceptionPadContext);
	}
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public handlers(): HandlersContext {
		return this.getRuleContext(0, HandlersContext);
	}
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	public KwUnwind(): TerminalNode { return this.getToken(LLVMIRParser.KwUnwind, 0); }
	public unwindTarget(): UnwindTargetContext {
		return this.getRuleContext(0, UnwindTargetContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_catchSwitchTerm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCatchSwitchTerm) {
			listener.enterCatchSwitchTerm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCatchSwitchTerm) {
			listener.exitCatchSwitchTerm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCatchSwitchTerm) {
			return visitor.visitCatchSwitchTerm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LabelContext extends ParserRuleContext {
	public KwLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLabel, 0); }
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_label; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLabel) {
			listener.enterLabel(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLabel) {
			listener.exitLabel(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLabel) {
			return visitor.visitLabel(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CaseContext extends ParserRuleContext {
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public label(): LabelContext {
		return this.getRuleContext(0, LabelContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_case; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCase) {
			listener.enterCase(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCase) {
			listener.exitCase(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCase) {
			return visitor.visitCase(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UnwindTargetContext extends ParserRuleContext {
	public KwTo(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwTo, 0); }
	public KwCaller(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCaller, 0); }
	public label(): LabelContext | undefined {
		return this.tryGetRuleContext(0, LabelContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_unwindTarget; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUnwindTarget) {
			listener.enterUnwindTarget(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUnwindTarget) {
			listener.exitUnwindTarget(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUnwindTarget) {
			return visitor.visitUnwindTarget(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class HandlersContext extends ParserRuleContext {
	public label(): LabelContext[];
	public label(i: number): LabelContext;
	public label(i?: number): LabelContext | LabelContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LabelContext);
		} else {
			return this.getRuleContext(i, LabelContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_handlers; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterHandlers) {
			listener.enterHandlers(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitHandlers) {
			listener.exitHandlers(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitHandlers) {
			return visitor.visitHandlers(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MetadataNodeContext extends ParserRuleContext {
	public MetadataId(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.MetadataId, 0); }
	public diExpression(): DiExpressionContext | undefined {
		return this.tryGetRuleContext(0, DiExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_metadataNode; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMetadataNode) {
			listener.enterMetadataNode(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMetadataNode) {
			listener.exitMetadataNode(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMetadataNode) {
			return visitor.visitMetadataNode(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiExpressionContext extends ParserRuleContext {
	public DIExpression(): TerminalNode { return this.getToken(LLVMIRParser.DIExpression, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diExpressionField(): DiExpressionFieldContext[];
	public diExpressionField(i: number): DiExpressionFieldContext;
	public diExpressionField(i?: number): DiExpressionFieldContext | DiExpressionFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiExpressionFieldContext);
		} else {
			return this.getRuleContext(i, DiExpressionFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diExpression; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiExpression) {
			listener.enterDiExpression(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiExpression) {
			listener.exitDiExpression(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiExpression) {
			return visitor.visitDiExpression(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiExpressionFieldContext extends ParserRuleContext {
	public IntLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.IntLit, 0); }
	public DwarfAttEncoding(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.DwarfAttEncoding, 0); }
	public DwarfOp(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.DwarfOp, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diExpressionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiExpressionField) {
			listener.enterDiExpressionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiExpressionField) {
			listener.exitDiExpressionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiExpressionField) {
			return visitor.visitDiExpressionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GlobalFieldContext extends ParserRuleContext {
	public _sanitizerKind!: Token;
	public section(): SectionContext | undefined {
		return this.tryGetRuleContext(0, SectionContext);
	}
	public partition(): PartitionContext | undefined {
		return this.tryGetRuleContext(0, PartitionContext);
	}
	public comdat(): ComdatContext | undefined {
		return this.tryGetRuleContext(0, ComdatContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public KwNoSanitizeAddress(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoSanitizeAddress, 0); }
	public KwNoSanitizeHwaddress(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoSanitizeHwaddress, 0); }
	public KwSanitizeAddressDyninit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeAddressDyninit, 0); }
	public KwSanitizeMemtag(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeMemtag, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_globalField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGlobalField) {
			listener.enterGlobalField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGlobalField) {
			listener.exitGlobalField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGlobalField) {
			return visitor.visitGlobalField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SectionContext extends ParserRuleContext {
	public KwSection(): TerminalNode { return this.getToken(LLVMIRParser.KwSection, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_section; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSection) {
			listener.enterSection(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSection) {
			listener.exitSection(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSection) {
			return visitor.visitSection(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ComdatContext extends ParserRuleContext {
	public KwComdat(): TerminalNode { return this.getToken(LLVMIRParser.KwComdat, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public ComdatName(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.ComdatName, 0); }
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_comdat; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterComdat) {
			listener.enterComdat(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitComdat) {
			listener.exitComdat(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitComdat) {
			return visitor.visitComdat(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PartitionContext extends ParserRuleContext {
	public KwPartition(): TerminalNode { return this.getToken(LLVMIRParser.KwPartition, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_partition; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPartition) {
			listener.enterPartition(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPartition) {
			listener.exitPartition(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPartition) {
			return visitor.visitPartition(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ConstantContext extends ParserRuleContext {
	public boolConst(): BoolConstContext | undefined {
		return this.tryGetRuleContext(0, BoolConstContext);
	}
	public intConst(): IntConstContext | undefined {
		return this.tryGetRuleContext(0, IntConstContext);
	}
	public floatConst(): FloatConstContext | undefined {
		return this.tryGetRuleContext(0, FloatConstContext);
	}
	public nullConst(): NullConstContext | undefined {
		return this.tryGetRuleContext(0, NullConstContext);
	}
	public noneConst(): NoneConstContext | undefined {
		return this.tryGetRuleContext(0, NoneConstContext);
	}
	public structConst(): StructConstContext | undefined {
		return this.tryGetRuleContext(0, StructConstContext);
	}
	public arrayConst(): ArrayConstContext | undefined {
		return this.tryGetRuleContext(0, ArrayConstContext);
	}
	public vectorConst(): VectorConstContext | undefined {
		return this.tryGetRuleContext(0, VectorConstContext);
	}
	public zeroInitializerConst(): ZeroInitializerConstContext | undefined {
		return this.tryGetRuleContext(0, ZeroInitializerConstContext);
	}
	public GlobalIdent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.GlobalIdent, 0); }
	public undefConst(): UndefConstContext | undefined {
		return this.tryGetRuleContext(0, UndefConstContext);
	}
	public poisonConst(): PoisonConstContext | undefined {
		return this.tryGetRuleContext(0, PoisonConstContext);
	}
	public blockAddressConst(): BlockAddressConstContext | undefined {
		return this.tryGetRuleContext(0, BlockAddressConstContext);
	}
	public dsoLocalEquivalentConst(): DsoLocalEquivalentConstContext | undefined {
		return this.tryGetRuleContext(0, DsoLocalEquivalentConstContext);
	}
	public noCFIConst(): NoCFIConstContext | undefined {
		return this.tryGetRuleContext(0, NoCFIConstContext);
	}
	public constantExpr(): ConstantExprContext | undefined {
		return this.tryGetRuleContext(0, ConstantExprContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_constant; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterConstant) {
			listener.enterConstant(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitConstant) {
			listener.exitConstant(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitConstant) {
			return visitor.visitConstant(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BoolConstContext extends ParserRuleContext {
	public KwTrue(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwTrue, 0); }
	public KwFalse(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFalse, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_boolConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBoolConst) {
			listener.enterBoolConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBoolConst) {
			listener.exitBoolConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBoolConst) {
			return visitor.visitBoolConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IntConstContext extends ParserRuleContext {
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_intConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIntConst) {
			listener.enterIntConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIntConst) {
			listener.exitIntConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIntConst) {
			return visitor.visitIntConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FloatConstContext extends ParserRuleContext {
	public FloatLit(): TerminalNode { return this.getToken(LLVMIRParser.FloatLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_floatConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFloatConst) {
			listener.enterFloatConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFloatConst) {
			listener.exitFloatConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFloatConst) {
			return visitor.visitFloatConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NullConstContext extends ParserRuleContext {
	public KwNull(): TerminalNode { return this.getToken(LLVMIRParser.KwNull, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_nullConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNullConst) {
			listener.enterNullConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNullConst) {
			listener.exitNullConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNullConst) {
			return visitor.visitNullConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NoneConstContext extends ParserRuleContext {
	public Kwnone(): TerminalNode { return this.getToken(LLVMIRParser.Kwnone, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_noneConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNoneConst) {
			listener.enterNoneConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNoneConst) {
			listener.exitNoneConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNoneConst) {
			return visitor.visitNoneConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StructConstContext extends ParserRuleContext {
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public LAngleBrackets(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LAngleBrackets, 0); }
	public RAngleBrackets(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RAngleBrackets, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_structConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStructConst) {
			listener.enterStructConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStructConst) {
			listener.exitStructConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStructConst) {
			return visitor.visitStructConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ArrayConstContext extends ParserRuleContext {
	public KwC(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwC, 0); }
	public StringLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.StringLit, 0); }
	public LBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RBracket, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_arrayConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterArrayConst) {
			listener.enterArrayConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitArrayConst) {
			listener.exitArrayConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitArrayConst) {
			return visitor.visitArrayConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VectorConstContext extends ParserRuleContext {
	public LAngleBrackets(): TerminalNode { return this.getToken(LLVMIRParser.LAngleBrackets, 0); }
	public RAngleBrackets(): TerminalNode { return this.getToken(LLVMIRParser.RAngleBrackets, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_vectorConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVectorConst) {
			listener.enterVectorConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVectorConst) {
			listener.exitVectorConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVectorConst) {
			return visitor.visitVectorConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ZeroInitializerConstContext extends ParserRuleContext {
	public KwZeroinitializer(): TerminalNode { return this.getToken(LLVMIRParser.KwZeroinitializer, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_zeroInitializerConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterZeroInitializerConst) {
			listener.enterZeroInitializerConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitZeroInitializerConst) {
			listener.exitZeroInitializerConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitZeroInitializerConst) {
			return visitor.visitZeroInitializerConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UndefConstContext extends ParserRuleContext {
	public KwUndef(): TerminalNode { return this.getToken(LLVMIRParser.KwUndef, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_undefConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUndefConst) {
			listener.enterUndefConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUndefConst) {
			listener.exitUndefConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUndefConst) {
			return visitor.visitUndefConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PoisonConstContext extends ParserRuleContext {
	public KwPoison(): TerminalNode { return this.getToken(LLVMIRParser.KwPoison, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_poisonConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPoisonConst) {
			listener.enterPoisonConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPoisonConst) {
			listener.exitPoisonConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPoisonConst) {
			return visitor.visitPoisonConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BlockAddressConstContext extends ParserRuleContext {
	public KwBlockaddress(): TerminalNode { return this.getToken(LLVMIRParser.KwBlockaddress, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_blockAddressConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBlockAddressConst) {
			listener.enterBlockAddressConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBlockAddressConst) {
			listener.exitBlockAddressConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBlockAddressConst) {
			return visitor.visitBlockAddressConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DsoLocalEquivalentConstContext extends ParserRuleContext {
	public KwDsoLocalEquivalent(): TerminalNode { return this.getToken(LLVMIRParser.KwDsoLocalEquivalent, 0); }
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dsoLocalEquivalentConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDsoLocalEquivalentConst) {
			listener.enterDsoLocalEquivalentConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDsoLocalEquivalentConst) {
			listener.exitDsoLocalEquivalentConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDsoLocalEquivalentConst) {
			return visitor.visitDsoLocalEquivalentConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NoCFIConstContext extends ParserRuleContext {
	public KwNoCfi(): TerminalNode { return this.getToken(LLVMIRParser.KwNoCfi, 0); }
	public GlobalIdent(): TerminalNode { return this.getToken(LLVMIRParser.GlobalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_noCFIConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNoCFIConst) {
			listener.enterNoCFIConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNoCFIConst) {
			listener.exitNoCFIConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNoCFIConst) {
			return visitor.visitNoCFIConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ConstantExprContext extends ParserRuleContext {
	public fNegExpr(): FNegExprContext | undefined {
		return this.tryGetRuleContext(0, FNegExprContext);
	}
	public addExpr(): AddExprContext | undefined {
		return this.tryGetRuleContext(0, AddExprContext);
	}
	public subExpr(): SubExprContext | undefined {
		return this.tryGetRuleContext(0, SubExprContext);
	}
	public mulExpr(): MulExprContext | undefined {
		return this.tryGetRuleContext(0, MulExprContext);
	}
	public shlExpr(): ShlExprContext | undefined {
		return this.tryGetRuleContext(0, ShlExprContext);
	}
	public lShrExpr(): LShrExprContext | undefined {
		return this.tryGetRuleContext(0, LShrExprContext);
	}
	public aShrExpr(): AShrExprContext | undefined {
		return this.tryGetRuleContext(0, AShrExprContext);
	}
	public andExpr(): AndExprContext | undefined {
		return this.tryGetRuleContext(0, AndExprContext);
	}
	public orExpr(): OrExprContext | undefined {
		return this.tryGetRuleContext(0, OrExprContext);
	}
	public xorExpr(): XorExprContext | undefined {
		return this.tryGetRuleContext(0, XorExprContext);
	}
	public extractElementExpr(): ExtractElementExprContext | undefined {
		return this.tryGetRuleContext(0, ExtractElementExprContext);
	}
	public insertElementExpr(): InsertElementExprContext | undefined {
		return this.tryGetRuleContext(0, InsertElementExprContext);
	}
	public shuffleVectorExpr(): ShuffleVectorExprContext | undefined {
		return this.tryGetRuleContext(0, ShuffleVectorExprContext);
	}
	public getElementPtrExpr(): GetElementPtrExprContext | undefined {
		return this.tryGetRuleContext(0, GetElementPtrExprContext);
	}
	public truncExpr(): TruncExprContext | undefined {
		return this.tryGetRuleContext(0, TruncExprContext);
	}
	public zExtExpr(): ZExtExprContext | undefined {
		return this.tryGetRuleContext(0, ZExtExprContext);
	}
	public sExtExpr(): SExtExprContext | undefined {
		return this.tryGetRuleContext(0, SExtExprContext);
	}
	public fpTruncExpr(): FpTruncExprContext | undefined {
		return this.tryGetRuleContext(0, FpTruncExprContext);
	}
	public fpExtExpr(): FpExtExprContext | undefined {
		return this.tryGetRuleContext(0, FpExtExprContext);
	}
	public fpToUiExpr(): FpToUiExprContext | undefined {
		return this.tryGetRuleContext(0, FpToUiExprContext);
	}
	public fpToSiExpr(): FpToSiExprContext | undefined {
		return this.tryGetRuleContext(0, FpToSiExprContext);
	}
	public uiToFpExpr(): UiToFpExprContext | undefined {
		return this.tryGetRuleContext(0, UiToFpExprContext);
	}
	public siToFpExpr(): SiToFpExprContext | undefined {
		return this.tryGetRuleContext(0, SiToFpExprContext);
	}
	public ptrToIntExpr(): PtrToIntExprContext | undefined {
		return this.tryGetRuleContext(0, PtrToIntExprContext);
	}
	public intToPtrExpr(): IntToPtrExprContext | undefined {
		return this.tryGetRuleContext(0, IntToPtrExprContext);
	}
	public bitCastExpr(): BitCastExprContext | undefined {
		return this.tryGetRuleContext(0, BitCastExprContext);
	}
	public addrSpaceCastExpr(): AddrSpaceCastExprContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceCastExprContext);
	}
	public iCmpExpr(): ICmpExprContext | undefined {
		return this.tryGetRuleContext(0, ICmpExprContext);
	}
	public fCmpExpr(): FCmpExprContext | undefined {
		return this.tryGetRuleContext(0, FCmpExprContext);
	}
	public selectExpr(): SelectExprContext | undefined {
		return this.tryGetRuleContext(0, SelectExprContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_constantExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterConstantExpr) {
			listener.enterConstantExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitConstantExpr) {
			listener.exitConstantExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitConstantExpr) {
			return visitor.visitConstantExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeConstContext extends ParserRuleContext {
	public firstClassType(): FirstClassTypeContext {
		return this.getRuleContext(0, FirstClassTypeContext);
	}
	public constant(): ConstantContext {
		return this.getRuleContext(0, ConstantContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typeConst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypeConst) {
			listener.enterTypeConst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypeConst) {
			listener.exitTypeConst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypeConst) {
			return visitor.visitTypeConst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MetadataAttachmentContext extends ParserRuleContext {
	public MetadataName(): TerminalNode { return this.getToken(LLVMIRParser.MetadataName, 0); }
	public mdNode(): MdNodeContext {
		return this.getRuleContext(0, MdNodeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_metadataAttachment; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMetadataAttachment) {
			listener.enterMetadataAttachment(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMetadataAttachment) {
			listener.exitMetadataAttachment(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMetadataAttachment) {
			return visitor.visitMetadataAttachment(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MdNodeContext extends ParserRuleContext {
	public mdTuple(): MdTupleContext | undefined {
		return this.tryGetRuleContext(0, MdTupleContext);
	}
	public MetadataId(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.MetadataId, 0); }
	public specializedMDNode(): SpecializedMDNodeContext | undefined {
		return this.tryGetRuleContext(0, SpecializedMDNodeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mdNode; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMdNode) {
			listener.enterMdNode(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMdNode) {
			listener.exitMdNode(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMdNode) {
			return visitor.visitMdNode(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MdTupleContext extends ParserRuleContext {
	public Exclamation(): TerminalNode { return this.getToken(LLVMIRParser.Exclamation, 0); }
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public mdField(): MdFieldContext[];
	public mdField(i: number): MdFieldContext;
	public mdField(i?: number): MdFieldContext | MdFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MdFieldContext);
		} else {
			return this.getRuleContext(i, MdFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mdTuple; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMdTuple) {
			listener.enterMdTuple(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMdTuple) {
			listener.exitMdTuple(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMdTuple) {
			return visitor.visitMdTuple(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MetadataContext extends ParserRuleContext {
	public typeValue(): TypeValueContext | undefined {
		return this.tryGetRuleContext(0, TypeValueContext);
	}
	public mdString(): MdStringContext | undefined {
		return this.tryGetRuleContext(0, MdStringContext);
	}
	public mdTuple(): MdTupleContext | undefined {
		return this.tryGetRuleContext(0, MdTupleContext);
	}
	public MetadataId(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.MetadataId, 0); }
	public diArgList(): DiArgListContext | undefined {
		return this.tryGetRuleContext(0, DiArgListContext);
	}
	public specializedMDNode(): SpecializedMDNodeContext | undefined {
		return this.tryGetRuleContext(0, SpecializedMDNodeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_metadata; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMetadata) {
			listener.enterMetadata(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMetadata) {
			listener.exitMetadata(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMetadata) {
			return visitor.visitMetadata(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiArgListContext extends ParserRuleContext {
	public DIArgList(): TerminalNode { return this.getToken(LLVMIRParser.DIArgList, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diArgList; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiArgList) {
			listener.enterDiArgList(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiArgList) {
			listener.exitDiArgList(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiArgList) {
			return visitor.visitDiArgList(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeValueContext extends ParserRuleContext {
	public firstClassType(): FirstClassTypeContext {
		return this.getRuleContext(0, FirstClassTypeContext);
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typeValue; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypeValue) {
			listener.enterTypeValue(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypeValue) {
			listener.exitTypeValue(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypeValue) {
			return visitor.visitTypeValue(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueContext extends ParserRuleContext {
	public constant(): ConstantContext | undefined {
		return this.tryGetRuleContext(0, ConstantContext);
	}
	public LocalIdent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LocalIdent, 0); }
	public inlineAsm(): InlineAsmContext | undefined {
		return this.tryGetRuleContext(0, InlineAsmContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_value; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValue) {
			listener.enterValue(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValue) {
			listener.exitValue(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValue) {
			return visitor.visitValue(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InlineAsmContext extends ParserRuleContext {
	public _sideEffect!: Token;
	public _alignStackTok!: Token;
	public _intelDialect!: Token;
	public _unwind!: Token;
	public KwAsm(): TerminalNode { return this.getToken(LLVMIRParser.KwAsm, 0); }
	public StringLit(): TerminalNode[];
	public StringLit(i: number): TerminalNode;
	public StringLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.StringLit);
		} else {
			return this.getToken(LLVMIRParser.StringLit, i);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public KwSideeffect(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSideeffect, 0); }
	public KwAlignstack(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAlignstack, 0); }
	public KwInteldialect(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInteldialect, 0); }
	public KwUnwind(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUnwind, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_inlineAsm; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInlineAsm) {
			listener.enterInlineAsm(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInlineAsm) {
			listener.exitInlineAsm(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInlineAsm) {
			return visitor.visitInlineAsm(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MdStringContext extends ParserRuleContext {
	public Exclamation(): TerminalNode { return this.getToken(LLVMIRParser.Exclamation, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mdString; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMdString) {
			listener.enterMdString(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMdString) {
			listener.exitMdString(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMdString) {
			return visitor.visitMdString(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MdFieldOrIntContext extends ParserRuleContext {
	public IntLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.IntLit, 0); }
	public mdField(): MdFieldContext | undefined {
		return this.tryGetRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mdFieldOrInt; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMdFieldOrInt) {
			listener.enterMdFieldOrInt(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMdFieldOrInt) {
			listener.exitMdFieldOrInt(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMdFieldOrInt) {
			return visitor.visitMdFieldOrInt(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSPFlagContext extends ParserRuleContext {
	public IntLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.IntLit, 0); }
	public DispFlag(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.DispFlag, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSPFlag; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSPFlag) {
			listener.enterDiSPFlag(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSPFlag) {
			listener.exitDiSPFlag(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSPFlag) {
			return visitor.visitDiSPFlag(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncAttributeContext extends ParserRuleContext {
	public attrString(): AttrStringContext | undefined {
		return this.tryGetRuleContext(0, AttrStringContext);
	}
	public attrPair(): AttrPairContext | undefined {
		return this.tryGetRuleContext(0, AttrPairContext);
	}
	public AttrGroupId(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.AttrGroupId, 0); }
	public alignPair(): AlignPairContext | undefined {
		return this.tryGetRuleContext(0, AlignPairContext);
	}
	public alignStack(): AlignStackContext | undefined {
		return this.tryGetRuleContext(0, AlignStackContext);
	}
	public alignStackPair(): AlignStackPairContext | undefined {
		return this.tryGetRuleContext(0, AlignStackPairContext);
	}
	public allocKind(): AllocKindContext | undefined {
		return this.tryGetRuleContext(0, AllocKindContext);
	}
	public allocSize(): AllocSizeContext | undefined {
		return this.tryGetRuleContext(0, AllocSizeContext);
	}
	public funcAttr(): FuncAttrContext | undefined {
		return this.tryGetRuleContext(0, FuncAttrContext);
	}
	public preallocated(): PreallocatedContext | undefined {
		return this.tryGetRuleContext(0, PreallocatedContext);
	}
	public unwindTable(): UnwindTableContext | undefined {
		return this.tryGetRuleContext(0, UnwindTableContext);
	}
	public vectorScaleRange(): VectorScaleRangeContext | undefined {
		return this.tryGetRuleContext(0, VectorScaleRangeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcAttribute; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncAttribute) {
			listener.enterFuncAttribute(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncAttribute) {
			listener.exitFuncAttribute(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncAttribute) {
			return visitor.visitFuncAttribute(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeContext extends ParserRuleContext {
	public voidType(): VoidTypeContext | undefined {
		return this.tryGetRuleContext(0, VoidTypeContext);
	}
	public opaqueType(): OpaqueTypeContext | undefined {
		return this.tryGetRuleContext(0, OpaqueTypeContext);
	}
	public type(): TypeContext | undefined {
		return this.tryGetRuleContext(0, TypeContext);
	}
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public params(): ParamsContext | undefined {
		return this.tryGetRuleContext(0, ParamsContext);
	}
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	public intType(): IntTypeContext | undefined {
		return this.tryGetRuleContext(0, IntTypeContext);
	}
	public floatType(): FloatTypeContext | undefined {
		return this.tryGetRuleContext(0, FloatTypeContext);
	}
	public Asterisk(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Asterisk, 0); }
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public opaquePointerType(): OpaquePointerTypeContext | undefined {
		return this.tryGetRuleContext(0, OpaquePointerTypeContext);
	}
	public vectorType(): VectorTypeContext | undefined {
		return this.tryGetRuleContext(0, VectorTypeContext);
	}
	public labelType(): LabelTypeContext | undefined {
		return this.tryGetRuleContext(0, LabelTypeContext);
	}
	public arrayType(): ArrayTypeContext | undefined {
		return this.tryGetRuleContext(0, ArrayTypeContext);
	}
	public structType(): StructTypeContext | undefined {
		return this.tryGetRuleContext(0, StructTypeContext);
	}
	public namedType(): NamedTypeContext | undefined {
		return this.tryGetRuleContext(0, NamedTypeContext);
	}
	public mmxType(): MmxTypeContext | undefined {
		return this.tryGetRuleContext(0, MmxTypeContext);
	}
	public tokenType(): TokenTypeContext | undefined {
		return this.tryGetRuleContext(0, TokenTypeContext);
	}
	public metadataType(): MetadataTypeContext | undefined {
		return this.tryGetRuleContext(0, MetadataTypeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_type; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterType) {
			listener.enterType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitType) {
			listener.exitType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitType) {
			return visitor.visitType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VoidTypeContext extends ParserRuleContext {
	public _symbol!: Token;
	public KwVoid(): TerminalNode { return this.getToken(LLVMIRParser.KwVoid, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_voidType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVoidType) {
			listener.enterVoidType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVoidType) {
			listener.exitVoidType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVoidType) {
			return visitor.visitVoidType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OpaqueTypeContext extends ParserRuleContext {
	public _symbol!: Token;
	public KwOpaque(): TerminalNode { return this.getToken(LLVMIRParser.KwOpaque, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_opaqueType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOpaqueType) {
			listener.enterOpaqueType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOpaqueType) {
			listener.exitOpaqueType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOpaqueType) {
			return visitor.visitOpaqueType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ParamsContext extends ParserRuleContext {
	public _ellipsis!: Token;
	public Ellipsis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Ellipsis, 0); }
	public param(): ParamContext[];
	public param(i: number): ParamContext;
	public param(i?: number): ParamContext | ParamContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParamContext);
		} else {
			return this.getRuleContext(i, ParamContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_params; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterParams) {
			listener.enterParams(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitParams) {
			listener.exitParams(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitParams) {
			return visitor.visitParams(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ParamContext extends ParserRuleContext {
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public paramAttribute(): ParamAttributeContext[];
	public paramAttribute(i: number): ParamAttributeContext;
	public paramAttribute(i?: number): ParamAttributeContext | ParamAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParamAttributeContext);
		} else {
			return this.getRuleContext(i, ParamAttributeContext);
		}
	}
	public LocalIdent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LocalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_param; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterParam) {
			listener.enterParam(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitParam) {
			listener.exitParam(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitParam) {
			return visitor.visitParam(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ParamAttributeContext extends ParserRuleContext {
	public attrString(): AttrStringContext | undefined {
		return this.tryGetRuleContext(0, AttrStringContext);
	}
	public attrPair(): AttrPairContext | undefined {
		return this.tryGetRuleContext(0, AttrPairContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public alignStack(): AlignStackContext | undefined {
		return this.tryGetRuleContext(0, AlignStackContext);
	}
	public byRefAttr(): ByRefAttrContext | undefined {
		return this.tryGetRuleContext(0, ByRefAttrContext);
	}
	public byval(): ByvalContext | undefined {
		return this.tryGetRuleContext(0, ByvalContext);
	}
	public dereferenceable(): DereferenceableContext | undefined {
		return this.tryGetRuleContext(0, DereferenceableContext);
	}
	public elementType(): ElementTypeContext | undefined {
		return this.tryGetRuleContext(0, ElementTypeContext);
	}
	public inAlloca(): InAllocaContext | undefined {
		return this.tryGetRuleContext(0, InAllocaContext);
	}
	public paramAttr(): ParamAttrContext | undefined {
		return this.tryGetRuleContext(0, ParamAttrContext);
	}
	public preallocated(): PreallocatedContext | undefined {
		return this.tryGetRuleContext(0, PreallocatedContext);
	}
	public structRetAttr(): StructRetAttrContext | undefined {
		return this.tryGetRuleContext(0, StructRetAttrContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_paramAttribute; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterParamAttribute) {
			listener.enterParamAttribute(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitParamAttribute) {
			listener.exitParamAttribute(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitParamAttribute) {
			return visitor.visitParamAttribute(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AttrStringContext extends ParserRuleContext {
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_attrString; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAttrString) {
			listener.enterAttrString(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAttrString) {
			listener.exitAttrString(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAttrString) {
			return visitor.visitAttrString(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AttrPairContext extends ParserRuleContext {
	public StringLit(): TerminalNode[];
	public StringLit(i: number): TerminalNode;
	public StringLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.StringLit);
		} else {
			return this.getToken(LLVMIRParser.StringLit, i);
		}
	}
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_attrPair; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAttrPair) {
			listener.enterAttrPair(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAttrPair) {
			listener.exitAttrPair(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAttrPair) {
			return visitor.visitAttrPair(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AlignContext extends ParserRuleContext {
	public KwAlign(): TerminalNode { return this.getToken(LLVMIRParser.KwAlign, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_align; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAlign) {
			listener.enterAlign(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAlign) {
			listener.exitAlign(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAlign) {
			return visitor.visitAlign(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AlignPairContext extends ParserRuleContext {
	public KwAlign(): TerminalNode { return this.getToken(LLVMIRParser.KwAlign, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_alignPair; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAlignPair) {
			listener.enterAlignPair(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAlignPair) {
			listener.exitAlignPair(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAlignPair) {
			return visitor.visitAlignPair(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AlignStackContext extends ParserRuleContext {
	public KwAlignstack(): TerminalNode { return this.getToken(LLVMIRParser.KwAlignstack, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_alignStack; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAlignStack) {
			listener.enterAlignStack(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAlignStack) {
			listener.exitAlignStack(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAlignStack) {
			return visitor.visitAlignStack(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AlignStackPairContext extends ParserRuleContext {
	public KwAlignstack(): TerminalNode { return this.getToken(LLVMIRParser.KwAlignstack, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_alignStackPair; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAlignStackPair) {
			listener.enterAlignStackPair(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAlignStackPair) {
			listener.exitAlignStackPair(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAlignStackPair) {
			return visitor.visitAlignStackPair(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AllocKindContext extends ParserRuleContext {
	public KwAllockind(): TerminalNode { return this.getToken(LLVMIRParser.KwAllockind, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_allocKind; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAllocKind) {
			listener.enterAllocKind(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAllocKind) {
			listener.exitAllocKind(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAllocKind) {
			return visitor.visitAllocKind(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AllocSizeContext extends ParserRuleContext {
	public KwAllocsize(): TerminalNode { return this.getToken(LLVMIRParser.KwAllocsize, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public Comma(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Comma, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_allocSize; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAllocSize) {
			listener.enterAllocSize(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAllocSize) {
			listener.exitAllocSize(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAllocSize) {
			return visitor.visitAllocSize(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UnwindTableContext extends ParserRuleContext {
	public _unwindTableKind!: Token;
	public KwUwtable(): TerminalNode { return this.getToken(LLVMIRParser.KwUwtable, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	public KwAsync(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAsync, 0); }
	public KwSync(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSync, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_unwindTable; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUnwindTable) {
			listener.enterUnwindTable(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUnwindTable) {
			listener.exitUnwindTable(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUnwindTable) {
			return visitor.visitUnwindTable(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VectorScaleRangeContext extends ParserRuleContext {
	public KwVscaleRange(): TerminalNode { return this.getToken(LLVMIRParser.KwVscaleRange, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public Comma(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Comma, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_vectorScaleRange; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVectorScaleRange) {
			listener.enterVectorScaleRange(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVectorScaleRange) {
			listener.exitVectorScaleRange(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVectorScaleRange) {
			return visitor.visitVectorScaleRange(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ByRefAttrContext extends ParserRuleContext {
	public KwByref(): TerminalNode { return this.getToken(LLVMIRParser.KwByref, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_byRefAttr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterByRefAttr) {
			listener.enterByRefAttr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitByRefAttr) {
			listener.exitByRefAttr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitByRefAttr) {
			return visitor.visitByRefAttr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ByvalContext extends ParserRuleContext {
	public KwByval(): TerminalNode { return this.getToken(LLVMIRParser.KwByval, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext | undefined {
		return this.tryGetRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_byval; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterByval) {
			listener.enterByval(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitByval) {
			listener.exitByval(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitByval) {
			return visitor.visitByval(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DereferenceableContext extends ParserRuleContext {
	public KwDereferenceable(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDereferenceable, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public KwDereferenceableOrNull(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDereferenceableOrNull, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dereferenceable; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDereferenceable) {
			listener.enterDereferenceable(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDereferenceable) {
			listener.exitDereferenceable(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDereferenceable) {
			return visitor.visitDereferenceable(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ElementTypeContext extends ParserRuleContext {
	public KwElementtype(): TerminalNode { return this.getToken(LLVMIRParser.KwElementtype, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_elementType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterElementType) {
			listener.enterElementType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitElementType) {
			listener.exitElementType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitElementType) {
			return visitor.visitElementType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InAllocaContext extends ParserRuleContext {
	public KwInalloca(): TerminalNode { return this.getToken(LLVMIRParser.KwInalloca, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_inAlloca; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInAlloca) {
			listener.enterInAlloca(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInAlloca) {
			listener.exitInAlloca(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInAlloca) {
			return visitor.visitInAlloca(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ParamAttrContext extends ParserRuleContext {
	public KwAllocalign(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAllocalign, 0); }
	public KwAllocptr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAllocptr, 0); }
	public KwImmarg(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwImmarg, 0); }
	public KwInreg(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInreg, 0); }
	public KwNest(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNest, 0); }
	public KwNoalias(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoalias, 0); }
	public KwNocapture(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNocapture, 0); }
	public KwNofree(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNofree, 0); }
	public KwNonnull(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNonnull, 0); }
	public KwNoundef(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoundef, 0); }
	public KwReadnone(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReadnone, 0); }
	public KwReadonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReadonly, 0); }
	public KwReturned(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReturned, 0); }
	public KwSignext(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSignext, 0); }
	public KwSwiftasync(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwiftasync, 0); }
	public KwSwifterror(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwifterror, 0); }
	public KwSwiftself(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwiftself, 0); }
	public KwWriteonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWriteonly, 0); }
	public KwZeroext(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwZeroext, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_paramAttr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterParamAttr) {
			listener.enterParamAttr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitParamAttr) {
			listener.exitParamAttr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitParamAttr) {
			return visitor.visitParamAttr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PreallocatedContext extends ParserRuleContext {
	public KwPreallocated(): TerminalNode { return this.getToken(LLVMIRParser.KwPreallocated, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_preallocated; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPreallocated) {
			listener.enterPreallocated(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPreallocated) {
			listener.exitPreallocated(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPreallocated) {
			return visitor.visitPreallocated(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StructRetAttrContext extends ParserRuleContext {
	public KwSret(): TerminalNode { return this.getToken(LLVMIRParser.KwSret, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_structRetAttr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStructRetAttr) {
			listener.enterStructRetAttr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStructRetAttr) {
			listener.exitStructRetAttr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStructRetAttr) {
			return visitor.visitStructRetAttr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FirstClassTypeContext extends ParserRuleContext {
	public concreteType(): ConcreteTypeContext | undefined {
		return this.tryGetRuleContext(0, ConcreteTypeContext);
	}
	public metadataType(): MetadataTypeContext | undefined {
		return this.tryGetRuleContext(0, MetadataTypeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_firstClassType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFirstClassType) {
			listener.enterFirstClassType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFirstClassType) {
			listener.exitFirstClassType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFirstClassType) {
			return visitor.visitFirstClassType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ConcreteTypeContext extends ParserRuleContext {
	public intType(): IntTypeContext | undefined {
		return this.tryGetRuleContext(0, IntTypeContext);
	}
	public floatType(): FloatTypeContext | undefined {
		return this.tryGetRuleContext(0, FloatTypeContext);
	}
	public pointerType(): PointerTypeContext | undefined {
		return this.tryGetRuleContext(0, PointerTypeContext);
	}
	public vectorType(): VectorTypeContext | undefined {
		return this.tryGetRuleContext(0, VectorTypeContext);
	}
	public labelType(): LabelTypeContext | undefined {
		return this.tryGetRuleContext(0, LabelTypeContext);
	}
	public arrayType(): ArrayTypeContext | undefined {
		return this.tryGetRuleContext(0, ArrayTypeContext);
	}
	public structType(): StructTypeContext | undefined {
		return this.tryGetRuleContext(0, StructTypeContext);
	}
	public namedType(): NamedTypeContext | undefined {
		return this.tryGetRuleContext(0, NamedTypeContext);
	}
	public mmxType(): MmxTypeContext | undefined {
		return this.tryGetRuleContext(0, MmxTypeContext);
	}
	public tokenType(): TokenTypeContext | undefined {
		return this.tryGetRuleContext(0, TokenTypeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_concreteType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterConcreteType) {
			listener.enterConcreteType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitConcreteType) {
			listener.exitConcreteType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitConcreteType) {
			return visitor.visitConcreteType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IntTypeContext extends ParserRuleContext {
	public IntType(): TerminalNode { return this.getToken(LLVMIRParser.IntType, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_intType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIntType) {
			listener.enterIntType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIntType) {
			listener.exitIntType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIntType) {
			return visitor.visitIntType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FloatTypeContext extends ParserRuleContext {
	public floatKind(): FloatKindContext {
		return this.getRuleContext(0, FloatKindContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_floatType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFloatType) {
			listener.enterFloatType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFloatType) {
			listener.exitFloatType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFloatType) {
			return visitor.visitFloatType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PointerTypeContext extends ParserRuleContext {
	public type(): TypeContext | undefined {
		return this.tryGetRuleContext(0, TypeContext);
	}
	public Asterisk(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Asterisk, 0); }
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public opaquePointerType(): OpaquePointerTypeContext | undefined {
		return this.tryGetRuleContext(0, OpaquePointerTypeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_pointerType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPointerType) {
			listener.enterPointerType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPointerType) {
			listener.exitPointerType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPointerType) {
			return visitor.visitPointerType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VectorTypeContext extends ParserRuleContext {
	public LAngleBrackets(): TerminalNode { return this.getToken(LLVMIRParser.LAngleBrackets, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public KwX(): TerminalNode[];
	public KwX(i: number): TerminalNode;
	public KwX(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.KwX);
		} else {
			return this.getToken(LLVMIRParser.KwX, i);
		}
	}
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RAngleBrackets(): TerminalNode { return this.getToken(LLVMIRParser.RAngleBrackets, 0); }
	public KwVscale(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwVscale, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_vectorType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVectorType) {
			listener.enterVectorType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVectorType) {
			listener.exitVectorType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVectorType) {
			return visitor.visitVectorType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LabelTypeContext extends ParserRuleContext {
	public KwLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLabel, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_labelType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLabelType) {
			listener.enterLabelType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLabelType) {
			listener.exitLabelType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLabelType) {
			return visitor.visitLabelType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ArrayTypeContext extends ParserRuleContext {
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public KwX(): TerminalNode { return this.getToken(LLVMIRParser.KwX, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_arrayType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterArrayType) {
			listener.enterArrayType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitArrayType) {
			listener.exitArrayType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitArrayType) {
			return visitor.visitArrayType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StructTypeContext extends ParserRuleContext {
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public type(): TypeContext[];
	public type(i: number): TypeContext;
	public type(i?: number): TypeContext | TypeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeContext);
		} else {
			return this.getRuleContext(i, TypeContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public LAngleBrackets(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LAngleBrackets, 0); }
	public RAngleBrackets(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RAngleBrackets, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_structType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStructType) {
			listener.enterStructType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStructType) {
			listener.exitStructType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStructType) {
			return visitor.visitStructType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NamedTypeContext extends ParserRuleContext {
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_namedType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNamedType) {
			listener.enterNamedType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNamedType) {
			listener.exitNamedType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNamedType) {
			return visitor.visitNamedType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MmxTypeContext extends ParserRuleContext {
	public KwX86Mmx(): TerminalNode { return this.getToken(LLVMIRParser.KwX86Mmx, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mmxType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMmxType) {
			listener.enterMmxType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMmxType) {
			listener.exitMmxType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMmxType) {
			return visitor.visitMmxType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TokenTypeContext extends ParserRuleContext {
	public KwToken(): TerminalNode { return this.getToken(LLVMIRParser.KwToken, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_tokenType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTokenType) {
			listener.enterTokenType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTokenType) {
			listener.exitTokenType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTokenType) {
			return visitor.visitTokenType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OpaquePointerTypeContext extends ParserRuleContext {
	public KwPtr(): TerminalNode { return this.getToken(LLVMIRParser.KwPtr, 0); }
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_opaquePointerType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOpaquePointerType) {
			listener.enterOpaquePointerType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOpaquePointerType) {
			listener.exitOpaquePointerType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOpaquePointerType) {
			return visitor.visitOpaquePointerType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AddrSpaceContext extends ParserRuleContext {
	public KwAddrspace(): TerminalNode { return this.getToken(LLVMIRParser.KwAddrspace, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_addrSpace; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAddrSpace) {
			listener.enterAddrSpace(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAddrSpace) {
			listener.exitAddrSpace(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAddrSpace) {
			return visitor.visitAddrSpace(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ThreadLocalContext extends ParserRuleContext {
	public KwThreadLocal(): TerminalNode { return this.getToken(LLVMIRParser.KwThreadLocal, 0); }
	public LParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LParenthesis, 0); }
	public tlsModel(): TlsModelContext | undefined {
		return this.tryGetRuleContext(0, TlsModelContext);
	}
	public RParenthesis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_threadLocal; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterThreadLocal) {
			listener.enterThreadLocal(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitThreadLocal) {
			listener.exitThreadLocal(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitThreadLocal) {
			return visitor.visitThreadLocal(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MetadataTypeContext extends ParserRuleContext {
	public KwMetadata(): TerminalNode { return this.getToken(LLVMIRParser.KwMetadata, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_metadataType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMetadataType) {
			listener.enterMetadataType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMetadataType) {
			listener.exitMetadataType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMetadataType) {
			return visitor.visitMetadataType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BitCastExprContext extends ParserRuleContext {
	public OpBitcast(): TerminalNode { return this.getToken(LLVMIRParser.OpBitcast, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_bitCastExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBitCastExpr) {
			listener.enterBitCastExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBitCastExpr) {
			listener.exitBitCastExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBitCastExpr) {
			return visitor.visitBitCastExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GetElementPtrExprContext extends ParserRuleContext {
	public KwGetelementptr(): TerminalNode { return this.getToken(LLVMIRParser.KwGetelementptr, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public inBounds(): InBoundsContext | undefined {
		return this.tryGetRuleContext(0, InBoundsContext);
	}
	public gepIndex(): GepIndexContext[];
	public gepIndex(i: number): GepIndexContext;
	public gepIndex(i?: number): GepIndexContext | GepIndexContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GepIndexContext);
		} else {
			return this.getRuleContext(i, GepIndexContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_getElementPtrExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGetElementPtrExpr) {
			listener.enterGetElementPtrExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGetElementPtrExpr) {
			listener.exitGetElementPtrExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGetElementPtrExpr) {
			return visitor.visitGetElementPtrExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GepIndexContext extends ParserRuleContext {
	public _inRange!: Token;
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwInrange(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInrange, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_gepIndex; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGepIndex) {
			listener.enterGepIndex(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGepIndex) {
			listener.exitGepIndex(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGepIndex) {
			return visitor.visitGepIndex(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AddrSpaceCastExprContext extends ParserRuleContext {
	public OpAddrspacecast(): TerminalNode { return this.getToken(LLVMIRParser.OpAddrspacecast, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_addrSpaceCastExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAddrSpaceCastExpr) {
			listener.enterAddrSpaceCastExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAddrSpaceCastExpr) {
			listener.exitAddrSpaceCastExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAddrSpaceCastExpr) {
			return visitor.visitAddrSpaceCastExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IntToPtrExprContext extends ParserRuleContext {
	public OpInttoptr(): TerminalNode { return this.getToken(LLVMIRParser.OpInttoptr, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_intToPtrExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIntToPtrExpr) {
			listener.enterIntToPtrExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIntToPtrExpr) {
			listener.exitIntToPtrExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIntToPtrExpr) {
			return visitor.visitIntToPtrExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ICmpExprContext extends ParserRuleContext {
	public OpIcmp(): TerminalNode { return this.getToken(LLVMIRParser.OpIcmp, 0); }
	public iPred(): IPredContext {
		return this.getRuleContext(0, IPredContext);
	}
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_iCmpExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterICmpExpr) {
			listener.enterICmpExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitICmpExpr) {
			listener.exitICmpExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitICmpExpr) {
			return visitor.visitICmpExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FCmpExprContext extends ParserRuleContext {
	public OpFcmp(): TerminalNode { return this.getToken(LLVMIRParser.OpFcmp, 0); }
	public fPred(): FPredContext {
		return this.getRuleContext(0, FPredContext);
	}
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fCmpExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFCmpExpr) {
			listener.enterFCmpExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFCmpExpr) {
			listener.exitFCmpExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFCmpExpr) {
			return visitor.visitFCmpExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SelectExprContext extends ParserRuleContext {
	public OpSelect(): TerminalNode { return this.getToken(LLVMIRParser.OpSelect, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_selectExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSelectExpr) {
			listener.enterSelectExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSelectExpr) {
			listener.exitSelectExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSelectExpr) {
			return visitor.visitSelectExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TruncExprContext extends ParserRuleContext {
	public OpTrunc(): TerminalNode { return this.getToken(LLVMIRParser.OpTrunc, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_truncExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTruncExpr) {
			listener.enterTruncExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTruncExpr) {
			listener.exitTruncExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTruncExpr) {
			return visitor.visitTruncExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ZExtExprContext extends ParserRuleContext {
	public OpZext(): TerminalNode { return this.getToken(LLVMIRParser.OpZext, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_zExtExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterZExtExpr) {
			listener.enterZExtExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitZExtExpr) {
			listener.exitZExtExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitZExtExpr) {
			return visitor.visitZExtExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SExtExprContext extends ParserRuleContext {
	public OpSext(): TerminalNode { return this.getToken(LLVMIRParser.OpSext, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sExtExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSExtExpr) {
			listener.enterSExtExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSExtExpr) {
			listener.exitSExtExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSExtExpr) {
			return visitor.visitSExtExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpTruncExprContext extends ParserRuleContext {
	public OpFptrunc(): TerminalNode { return this.getToken(LLVMIRParser.OpFptrunc, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpTruncExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpTruncExpr) {
			listener.enterFpTruncExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpTruncExpr) {
			listener.exitFpTruncExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpTruncExpr) {
			return visitor.visitFpTruncExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpExtExprContext extends ParserRuleContext {
	public OpFpext(): TerminalNode { return this.getToken(LLVMIRParser.OpFpext, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpExtExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpExtExpr) {
			listener.enterFpExtExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpExtExpr) {
			listener.exitFpExtExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpExtExpr) {
			return visitor.visitFpExtExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpToUiExprContext extends ParserRuleContext {
	public OpFptoui(): TerminalNode { return this.getToken(LLVMIRParser.OpFptoui, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpToUiExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpToUiExpr) {
			listener.enterFpToUiExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpToUiExpr) {
			listener.exitFpToUiExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpToUiExpr) {
			return visitor.visitFpToUiExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpToSiExprContext extends ParserRuleContext {
	public OpFptosi(): TerminalNode { return this.getToken(LLVMIRParser.OpFptosi, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpToSiExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpToSiExpr) {
			listener.enterFpToSiExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpToSiExpr) {
			listener.exitFpToSiExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpToSiExpr) {
			return visitor.visitFpToSiExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UiToFpExprContext extends ParserRuleContext {
	public OpUitofp(): TerminalNode { return this.getToken(LLVMIRParser.OpUitofp, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_uiToFpExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUiToFpExpr) {
			listener.enterUiToFpExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUiToFpExpr) {
			listener.exitUiToFpExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUiToFpExpr) {
			return visitor.visitUiToFpExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SiToFpExprContext extends ParserRuleContext {
	public OpSitofp(): TerminalNode { return this.getToken(LLVMIRParser.OpSitofp, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_siToFpExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSiToFpExpr) {
			listener.enterSiToFpExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSiToFpExpr) {
			listener.exitSiToFpExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSiToFpExpr) {
			return visitor.visitSiToFpExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PtrToIntExprContext extends ParserRuleContext {
	public OpPtrtoint(): TerminalNode { return this.getToken(LLVMIRParser.OpPtrtoint, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_ptrToIntExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPtrToIntExpr) {
			listener.enterPtrToIntExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPtrToIntExpr) {
			listener.exitPtrToIntExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPtrToIntExpr) {
			return visitor.visitPtrToIntExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExtractElementExprContext extends ParserRuleContext {
	public OpExtractelement(): TerminalNode { return this.getToken(LLVMIRParser.OpExtractelement, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_extractElementExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExtractElementExpr) {
			listener.enterExtractElementExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExtractElementExpr) {
			listener.exitExtractElementExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExtractElementExpr) {
			return visitor.visitExtractElementExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InsertElementExprContext extends ParserRuleContext {
	public OpInsertelement(): TerminalNode { return this.getToken(LLVMIRParser.OpInsertelement, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_insertElementExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInsertElementExpr) {
			listener.enterInsertElementExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInsertElementExpr) {
			listener.exitInsertElementExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInsertElementExpr) {
			return visitor.visitInsertElementExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ShuffleVectorExprContext extends ParserRuleContext {
	public OpShufflevector(): TerminalNode { return this.getToken(LLVMIRParser.OpShufflevector, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_shuffleVectorExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterShuffleVectorExpr) {
			listener.enterShuffleVectorExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitShuffleVectorExpr) {
			listener.exitShuffleVectorExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitShuffleVectorExpr) {
			return visitor.visitShuffleVectorExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ShlExprContext extends ParserRuleContext {
	public OpShl(): TerminalNode { return this.getToken(LLVMIRParser.OpShl, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_shlExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterShlExpr) {
			listener.enterShlExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitShlExpr) {
			listener.exitShlExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitShlExpr) {
			return visitor.visitShlExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LShrExprContext extends ParserRuleContext {
	public _exact!: Token;
	public OpLshr(): TerminalNode { return this.getToken(LLVMIRParser.OpLshr, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_lShrExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLShrExpr) {
			listener.enterLShrExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLShrExpr) {
			listener.exitLShrExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLShrExpr) {
			return visitor.visitLShrExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AShrExprContext extends ParserRuleContext {
	public _exact!: Token;
	public OpAshr(): TerminalNode { return this.getToken(LLVMIRParser.OpAshr, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_aShrExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAShrExpr) {
			listener.enterAShrExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAShrExpr) {
			listener.exitAShrExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAShrExpr) {
			return visitor.visitAShrExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AndExprContext extends ParserRuleContext {
	public OpAnd(): TerminalNode { return this.getToken(LLVMIRParser.OpAnd, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_andExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAndExpr) {
			listener.enterAndExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAndExpr) {
			listener.exitAndExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAndExpr) {
			return visitor.visitAndExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OrExprContext extends ParserRuleContext {
	public OpOr(): TerminalNode { return this.getToken(LLVMIRParser.OpOr, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_orExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOrExpr) {
			listener.enterOrExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOrExpr) {
			listener.exitOrExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOrExpr) {
			return visitor.visitOrExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class XorExprContext extends ParserRuleContext {
	public OpXor(): TerminalNode { return this.getToken(LLVMIRParser.OpXor, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_xorExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterXorExpr) {
			listener.enterXorExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitXorExpr) {
			listener.exitXorExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitXorExpr) {
			return visitor.visitXorExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AddExprContext extends ParserRuleContext {
	public OpAdd(): TerminalNode { return this.getToken(LLVMIRParser.OpAdd, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_addExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAddExpr) {
			listener.enterAddExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAddExpr) {
			listener.exitAddExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAddExpr) {
			return visitor.visitAddExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SubExprContext extends ParserRuleContext {
	public OpSub(): TerminalNode { return this.getToken(LLVMIRParser.OpSub, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_subExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSubExpr) {
			listener.enterSubExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSubExpr) {
			listener.exitSubExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSubExpr) {
			return visitor.visitSubExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MulExprContext extends ParserRuleContext {
	public OpMul(): TerminalNode { return this.getToken(LLVMIRParser.OpMul, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext[];
	public typeConst(i: number): TypeConstContext;
	public typeConst(i?: number): TypeConstContext | TypeConstContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeConstContext);
		} else {
			return this.getRuleContext(i, TypeConstContext);
		}
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mulExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMulExpr) {
			listener.enterMulExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMulExpr) {
			listener.exitMulExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMulExpr) {
			return visitor.visitMulExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FNegExprContext extends ParserRuleContext {
	public OpFneg(): TerminalNode { return this.getToken(LLVMIRParser.OpFneg, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public typeConst(): TypeConstContext {
		return this.getRuleContext(0, TypeConstContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fNegExpr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFNegExpr) {
			listener.enterFNegExpr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFNegExpr) {
			listener.exitFNegExpr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFNegExpr) {
			return visitor.visitFNegExpr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LocalDefInstContext extends ParserRuleContext {
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public Equal(): TerminalNode { return this.getToken(LLVMIRParser.Equal, 0); }
	public valueInstruction(): ValueInstructionContext {
		return this.getRuleContext(0, ValueInstructionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_localDefInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLocalDefInst) {
			listener.enterLocalDefInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLocalDefInst) {
			listener.exitLocalDefInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLocalDefInst) {
			return visitor.visitLocalDefInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueInstructionContext extends ParserRuleContext {
	public fNegInst(): FNegInstContext | undefined {
		return this.tryGetRuleContext(0, FNegInstContext);
	}
	public addInst(): AddInstContext | undefined {
		return this.tryGetRuleContext(0, AddInstContext);
	}
	public fAddInst(): FAddInstContext | undefined {
		return this.tryGetRuleContext(0, FAddInstContext);
	}
	public subInst(): SubInstContext | undefined {
		return this.tryGetRuleContext(0, SubInstContext);
	}
	public fSubInst(): FSubInstContext | undefined {
		return this.tryGetRuleContext(0, FSubInstContext);
	}
	public mulInst(): MulInstContext | undefined {
		return this.tryGetRuleContext(0, MulInstContext);
	}
	public fMulInst(): FMulInstContext | undefined {
		return this.tryGetRuleContext(0, FMulInstContext);
	}
	public uDivInst(): UDivInstContext | undefined {
		return this.tryGetRuleContext(0, UDivInstContext);
	}
	public sDivInst(): SDivInstContext | undefined {
		return this.tryGetRuleContext(0, SDivInstContext);
	}
	public fDivInst(): FDivInstContext | undefined {
		return this.tryGetRuleContext(0, FDivInstContext);
	}
	public uRemInst(): URemInstContext | undefined {
		return this.tryGetRuleContext(0, URemInstContext);
	}
	public sRemInst(): SRemInstContext | undefined {
		return this.tryGetRuleContext(0, SRemInstContext);
	}
	public fRemInst(): FRemInstContext | undefined {
		return this.tryGetRuleContext(0, FRemInstContext);
	}
	public shlInst(): ShlInstContext | undefined {
		return this.tryGetRuleContext(0, ShlInstContext);
	}
	public lShrInst(): LShrInstContext | undefined {
		return this.tryGetRuleContext(0, LShrInstContext);
	}
	public aShrInst(): AShrInstContext | undefined {
		return this.tryGetRuleContext(0, AShrInstContext);
	}
	public andInst(): AndInstContext | undefined {
		return this.tryGetRuleContext(0, AndInstContext);
	}
	public orInst(): OrInstContext | undefined {
		return this.tryGetRuleContext(0, OrInstContext);
	}
	public xorInst(): XorInstContext | undefined {
		return this.tryGetRuleContext(0, XorInstContext);
	}
	public extractElementInst(): ExtractElementInstContext | undefined {
		return this.tryGetRuleContext(0, ExtractElementInstContext);
	}
	public insertElementInst(): InsertElementInstContext | undefined {
		return this.tryGetRuleContext(0, InsertElementInstContext);
	}
	public shuffleVectorInst(): ShuffleVectorInstContext | undefined {
		return this.tryGetRuleContext(0, ShuffleVectorInstContext);
	}
	public extractValueInst(): ExtractValueInstContext | undefined {
		return this.tryGetRuleContext(0, ExtractValueInstContext);
	}
	public insertValueInst(): InsertValueInstContext | undefined {
		return this.tryGetRuleContext(0, InsertValueInstContext);
	}
	public allocaInst(): AllocaInstContext | undefined {
		return this.tryGetRuleContext(0, AllocaInstContext);
	}
	public loadInst(): LoadInstContext | undefined {
		return this.tryGetRuleContext(0, LoadInstContext);
	}
	public cmpXchgInst(): CmpXchgInstContext | undefined {
		return this.tryGetRuleContext(0, CmpXchgInstContext);
	}
	public atomicRMWInst(): AtomicRMWInstContext | undefined {
		return this.tryGetRuleContext(0, AtomicRMWInstContext);
	}
	public getElementPtrInst(): GetElementPtrInstContext | undefined {
		return this.tryGetRuleContext(0, GetElementPtrInstContext);
	}
	public truncInst(): TruncInstContext | undefined {
		return this.tryGetRuleContext(0, TruncInstContext);
	}
	public zExtInst(): ZExtInstContext | undefined {
		return this.tryGetRuleContext(0, ZExtInstContext);
	}
	public sExtInst(): SExtInstContext | undefined {
		return this.tryGetRuleContext(0, SExtInstContext);
	}
	public fpTruncInst(): FpTruncInstContext | undefined {
		return this.tryGetRuleContext(0, FpTruncInstContext);
	}
	public fpExtInst(): FpExtInstContext | undefined {
		return this.tryGetRuleContext(0, FpExtInstContext);
	}
	public fpToUiInst(): FpToUiInstContext | undefined {
		return this.tryGetRuleContext(0, FpToUiInstContext);
	}
	public fpToSiInst(): FpToSiInstContext | undefined {
		return this.tryGetRuleContext(0, FpToSiInstContext);
	}
	public uiToFpInst(): UiToFpInstContext | undefined {
		return this.tryGetRuleContext(0, UiToFpInstContext);
	}
	public siToFpInst(): SiToFpInstContext | undefined {
		return this.tryGetRuleContext(0, SiToFpInstContext);
	}
	public ptrToIntInst(): PtrToIntInstContext | undefined {
		return this.tryGetRuleContext(0, PtrToIntInstContext);
	}
	public intToPtrInst(): IntToPtrInstContext | undefined {
		return this.tryGetRuleContext(0, IntToPtrInstContext);
	}
	public bitCastInst(): BitCastInstContext | undefined {
		return this.tryGetRuleContext(0, BitCastInstContext);
	}
	public addrSpaceCastInst(): AddrSpaceCastInstContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceCastInstContext);
	}
	public iCmpInst(): ICmpInstContext | undefined {
		return this.tryGetRuleContext(0, ICmpInstContext);
	}
	public fCmpInst(): FCmpInstContext | undefined {
		return this.tryGetRuleContext(0, FCmpInstContext);
	}
	public phiInst(): PhiInstContext | undefined {
		return this.tryGetRuleContext(0, PhiInstContext);
	}
	public selectInst(): SelectInstContext | undefined {
		return this.tryGetRuleContext(0, SelectInstContext);
	}
	public freezeInst(): FreezeInstContext | undefined {
		return this.tryGetRuleContext(0, FreezeInstContext);
	}
	public callInst(): CallInstContext | undefined {
		return this.tryGetRuleContext(0, CallInstContext);
	}
	public vaargInst(): VaargInstContext | undefined {
		return this.tryGetRuleContext(0, VaargInstContext);
	}
	public landingPadInst(): LandingPadInstContext | undefined {
		return this.tryGetRuleContext(0, LandingPadInstContext);
	}
	public catchPadInst(): CatchPadInstContext | undefined {
		return this.tryGetRuleContext(0, CatchPadInstContext);
	}
	public cleanupPadInst(): CleanupPadInstContext | undefined {
		return this.tryGetRuleContext(0, CleanupPadInstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_valueInstruction; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValueInstruction) {
			listener.enterValueInstruction(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValueInstruction) {
			listener.exitValueInstruction(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValueInstruction) {
			return visitor.visitValueInstruction(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StoreInstContext extends ParserRuleContext {
	public _volatile!: Token;
	public _atomic!: Token;
	public OpStore(): TerminalNode { return this.getToken(LLVMIRParser.OpStore, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwVolatile(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwVolatile, 0); }
	public atomicOrdering(): AtomicOrderingContext | undefined {
		return this.tryGetRuleContext(0, AtomicOrderingContext);
	}
	public KwAtomic(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAtomic, 0); }
	public syncScope(): SyncScopeContext | undefined {
		return this.tryGetRuleContext(0, SyncScopeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_storeInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStoreInst) {
			listener.enterStoreInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStoreInst) {
			listener.exitStoreInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStoreInst) {
			return visitor.visitStoreInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SyncScopeContext extends ParserRuleContext {
	public KwSyncscope(): TerminalNode { return this.getToken(LLVMIRParser.KwSyncscope, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_syncScope; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSyncScope) {
			listener.enterSyncScope(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSyncScope) {
			listener.exitSyncScope(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSyncScope) {
			return visitor.visitSyncScope(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FenceInstContext extends ParserRuleContext {
	public OpFence(): TerminalNode { return this.getToken(LLVMIRParser.OpFence, 0); }
	public atomicOrdering(): AtomicOrderingContext {
		return this.getRuleContext(0, AtomicOrderingContext);
	}
	public syncScope(): SyncScopeContext | undefined {
		return this.tryGetRuleContext(0, SyncScopeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fenceInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFenceInst) {
			listener.enterFenceInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFenceInst) {
			listener.exitFenceInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFenceInst) {
			return visitor.visitFenceInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FNegInstContext extends ParserRuleContext {
	public OpFneg(): TerminalNode { return this.getToken(LLVMIRParser.OpFneg, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fNegInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFNegInst) {
			listener.enterFNegInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFNegInst) {
			listener.exitFNegInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFNegInst) {
			return visitor.visitFNegInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AddInstContext extends ParserRuleContext {
	public OpAdd(): TerminalNode { return this.getToken(LLVMIRParser.OpAdd, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_addInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAddInst) {
			listener.enterAddInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAddInst) {
			listener.exitAddInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAddInst) {
			return visitor.visitAddInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FAddInstContext extends ParserRuleContext {
	public OpFadd(): TerminalNode { return this.getToken(LLVMIRParser.OpFadd, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fAddInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFAddInst) {
			listener.enterFAddInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFAddInst) {
			listener.exitFAddInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFAddInst) {
			return visitor.visitFAddInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SubInstContext extends ParserRuleContext {
	public OpSub(): TerminalNode { return this.getToken(LLVMIRParser.OpSub, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_subInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSubInst) {
			listener.enterSubInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSubInst) {
			listener.exitSubInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSubInst) {
			return visitor.visitSubInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FSubInstContext extends ParserRuleContext {
	public OpFsub(): TerminalNode { return this.getToken(LLVMIRParser.OpFsub, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fSubInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFSubInst) {
			listener.enterFSubInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFSubInst) {
			listener.exitFSubInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFSubInst) {
			return visitor.visitFSubInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MulInstContext extends ParserRuleContext {
	public OpMul(): TerminalNode { return this.getToken(LLVMIRParser.OpMul, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mulInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMulInst) {
			listener.enterMulInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMulInst) {
			listener.exitMulInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMulInst) {
			return visitor.visitMulInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FMulInstContext extends ParserRuleContext {
	public OpFmul(): TerminalNode { return this.getToken(LLVMIRParser.OpFmul, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fMulInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFMulInst) {
			listener.enterFMulInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFMulInst) {
			listener.exitFMulInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFMulInst) {
			return visitor.visitFMulInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UDivInstContext extends ParserRuleContext {
	public _exact!: Token;
	public OpUdiv(): TerminalNode { return this.getToken(LLVMIRParser.OpUdiv, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_uDivInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUDivInst) {
			listener.enterUDivInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUDivInst) {
			listener.exitUDivInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUDivInst) {
			return visitor.visitUDivInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SDivInstContext extends ParserRuleContext {
	public _exact!: Token;
	public OpSdiv(): TerminalNode { return this.getToken(LLVMIRParser.OpSdiv, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sDivInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSDivInst) {
			listener.enterSDivInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSDivInst) {
			listener.exitSDivInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSDivInst) {
			return visitor.visitSDivInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FDivInstContext extends ParserRuleContext {
	public OpFdiv(): TerminalNode { return this.getToken(LLVMIRParser.OpFdiv, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fDivInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFDivInst) {
			listener.enterFDivInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFDivInst) {
			listener.exitFDivInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFDivInst) {
			return visitor.visitFDivInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class URemInstContext extends ParserRuleContext {
	public OpUrem(): TerminalNode { return this.getToken(LLVMIRParser.OpUrem, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_uRemInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterURemInst) {
			listener.enterURemInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitURemInst) {
			listener.exitURemInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitURemInst) {
			return visitor.visitURemInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SRemInstContext extends ParserRuleContext {
	public OpSrem(): TerminalNode { return this.getToken(LLVMIRParser.OpSrem, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sRemInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSRemInst) {
			listener.enterSRemInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSRemInst) {
			listener.exitSRemInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSRemInst) {
			return visitor.visitSRemInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FRemInstContext extends ParserRuleContext {
	public OpFrem(): TerminalNode { return this.getToken(LLVMIRParser.OpFrem, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fRemInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFRemInst) {
			listener.enterFRemInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFRemInst) {
			listener.exitFRemInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFRemInst) {
			return visitor.visitFRemInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ShlInstContext extends ParserRuleContext {
	public OpShl(): TerminalNode { return this.getToken(LLVMIRParser.OpShl, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public overflowFlag(): OverflowFlagContext[];
	public overflowFlag(i: number): OverflowFlagContext;
	public overflowFlag(i?: number): OverflowFlagContext | OverflowFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OverflowFlagContext);
		} else {
			return this.getRuleContext(i, OverflowFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_shlInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterShlInst) {
			listener.enterShlInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitShlInst) {
			listener.exitShlInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitShlInst) {
			return visitor.visitShlInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LShrInstContext extends ParserRuleContext {
	public _exact!: Token;
	public OpLshr(): TerminalNode { return this.getToken(LLVMIRParser.OpLshr, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_lShrInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLShrInst) {
			listener.enterLShrInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLShrInst) {
			listener.exitLShrInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLShrInst) {
			return visitor.visitLShrInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AShrInstContext extends ParserRuleContext {
	public _exact!: Token;
	public OpAshr(): TerminalNode { return this.getToken(LLVMIRParser.OpAshr, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwExact(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExact, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_aShrInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAShrInst) {
			listener.enterAShrInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAShrInst) {
			listener.exitAShrInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAShrInst) {
			return visitor.visitAShrInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AndInstContext extends ParserRuleContext {
	public OpAnd(): TerminalNode { return this.getToken(LLVMIRParser.OpAnd, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_andInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAndInst) {
			listener.enterAndInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAndInst) {
			listener.exitAndInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAndInst) {
			return visitor.visitAndInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OrInstContext extends ParserRuleContext {
	public OpOr(): TerminalNode { return this.getToken(LLVMIRParser.OpOr, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_orInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOrInst) {
			listener.enterOrInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOrInst) {
			listener.exitOrInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOrInst) {
			return visitor.visitOrInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class XorInstContext extends ParserRuleContext {
	public OpXor(): TerminalNode { return this.getToken(LLVMIRParser.OpXor, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_xorInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterXorInst) {
			listener.enterXorInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitXorInst) {
			listener.exitXorInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitXorInst) {
			return visitor.visitXorInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExtractElementInstContext extends ParserRuleContext {
	public OpExtractelement(): TerminalNode { return this.getToken(LLVMIRParser.OpExtractelement, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_extractElementInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExtractElementInst) {
			listener.enterExtractElementInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExtractElementInst) {
			listener.exitExtractElementInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExtractElementInst) {
			return visitor.visitExtractElementInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InsertElementInstContext extends ParserRuleContext {
	public OpInsertelement(): TerminalNode { return this.getToken(LLVMIRParser.OpInsertelement, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_insertElementInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInsertElementInst) {
			listener.enterInsertElementInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInsertElementInst) {
			listener.exitInsertElementInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInsertElementInst) {
			return visitor.visitInsertElementInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ShuffleVectorInstContext extends ParserRuleContext {
	public OpShufflevector(): TerminalNode { return this.getToken(LLVMIRParser.OpShufflevector, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_shuffleVectorInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterShuffleVectorInst) {
			listener.enterShuffleVectorInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitShuffleVectorInst) {
			listener.exitShuffleVectorInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitShuffleVectorInst) {
			return visitor.visitShuffleVectorInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExtractValueInstContext extends ParserRuleContext {
	public OpExtractvalue(): TerminalNode { return this.getToken(LLVMIRParser.OpExtractvalue, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_extractValueInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExtractValueInst) {
			listener.enterExtractValueInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExtractValueInst) {
			listener.exitExtractValueInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExtractValueInst) {
			return visitor.visitExtractValueInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InsertValueInstContext extends ParserRuleContext {
	public OpInsertvalue(): TerminalNode { return this.getToken(LLVMIRParser.OpInsertvalue, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public IntLit(): TerminalNode[];
	public IntLit(i: number): TerminalNode;
	public IntLit(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.IntLit);
		} else {
			return this.getToken(LLVMIRParser.IntLit, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_insertValueInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInsertValueInst) {
			listener.enterInsertValueInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInsertValueInst) {
			listener.exitInsertValueInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInsertValueInst) {
			return visitor.visitInsertValueInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AllocaInstContext extends ParserRuleContext {
	public _inAllocaTok!: Token;
	public _swiftError!: Token;
	public OpAlloca(): TerminalNode { return this.getToken(LLVMIRParser.OpAlloca, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public typeValue(): TypeValueContext | undefined {
		return this.tryGetRuleContext(0, TypeValueContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwInalloca(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInalloca, 0); }
	public KwSwifterror(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwifterror, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_allocaInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAllocaInst) {
			listener.enterAllocaInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAllocaInst) {
			listener.exitAllocaInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAllocaInst) {
			return visitor.visitAllocaInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LoadInstContext extends ParserRuleContext {
	public _volatile!: Token;
	public _atomic!: Token;
	public OpLoad(): TerminalNode { return this.getToken(LLVMIRParser.OpLoad, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwVolatile(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwVolatile, 0); }
	public atomicOrdering(): AtomicOrderingContext | undefined {
		return this.tryGetRuleContext(0, AtomicOrderingContext);
	}
	public KwAtomic(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAtomic, 0); }
	public syncScope(): SyncScopeContext | undefined {
		return this.tryGetRuleContext(0, SyncScopeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_loadInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLoadInst) {
			listener.enterLoadInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLoadInst) {
			listener.exitLoadInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLoadInst) {
			return visitor.visitLoadInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CmpXchgInstContext extends ParserRuleContext {
	public _weak!: Token;
	public _volatile!: Token;
	public OpCmpxchg(): TerminalNode { return this.getToken(LLVMIRParser.OpCmpxchg, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public atomicOrdering(): AtomicOrderingContext[];
	public atomicOrdering(i: number): AtomicOrderingContext;
	public atomicOrdering(i?: number): AtomicOrderingContext | AtomicOrderingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AtomicOrderingContext);
		} else {
			return this.getRuleContext(i, AtomicOrderingContext);
		}
	}
	public syncScope(): SyncScopeContext | undefined {
		return this.tryGetRuleContext(0, SyncScopeContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwWeak(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWeak, 0); }
	public KwVolatile(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwVolatile, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_cmpXchgInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCmpXchgInst) {
			listener.enterCmpXchgInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCmpXchgInst) {
			listener.exitCmpXchgInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCmpXchgInst) {
			return visitor.visitCmpXchgInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AtomicRMWInstContext extends ParserRuleContext {
	public _volatile!: Token;
	public OpAtomicrmw(): TerminalNode { return this.getToken(LLVMIRParser.OpAtomicrmw, 0); }
	public atomicOp(): AtomicOpContext {
		return this.getRuleContext(0, AtomicOpContext);
	}
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public atomicOrdering(): AtomicOrderingContext {
		return this.getRuleContext(0, AtomicOrderingContext);
	}
	public syncScope(): SyncScopeContext | undefined {
		return this.tryGetRuleContext(0, SyncScopeContext);
	}
	public align(): AlignContext | undefined {
		return this.tryGetRuleContext(0, AlignContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwVolatile(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwVolatile, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_atomicRMWInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAtomicRMWInst) {
			listener.enterAtomicRMWInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAtomicRMWInst) {
			listener.exitAtomicRMWInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAtomicRMWInst) {
			return visitor.visitAtomicRMWInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GetElementPtrInstContext extends ParserRuleContext {
	public KwGetelementptr(): TerminalNode { return this.getToken(LLVMIRParser.KwGetelementptr, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public inBounds(): InBoundsContext | undefined {
		return this.tryGetRuleContext(0, InBoundsContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_getElementPtrInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGetElementPtrInst) {
			listener.enterGetElementPtrInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGetElementPtrInst) {
			listener.exitGetElementPtrInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGetElementPtrInst) {
			return visitor.visitGetElementPtrInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TruncInstContext extends ParserRuleContext {
	public OpTrunc(): TerminalNode { return this.getToken(LLVMIRParser.OpTrunc, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_truncInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTruncInst) {
			listener.enterTruncInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTruncInst) {
			listener.exitTruncInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTruncInst) {
			return visitor.visitTruncInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ZExtInstContext extends ParserRuleContext {
	public OpZext(): TerminalNode { return this.getToken(LLVMIRParser.OpZext, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_zExtInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterZExtInst) {
			listener.enterZExtInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitZExtInst) {
			listener.exitZExtInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitZExtInst) {
			return visitor.visitZExtInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SExtInstContext extends ParserRuleContext {
	public OpSext(): TerminalNode { return this.getToken(LLVMIRParser.OpSext, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sExtInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSExtInst) {
			listener.enterSExtInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSExtInst) {
			listener.exitSExtInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSExtInst) {
			return visitor.visitSExtInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpTruncInstContext extends ParserRuleContext {
	public OpFptrunc(): TerminalNode { return this.getToken(LLVMIRParser.OpFptrunc, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpTruncInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpTruncInst) {
			listener.enterFpTruncInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpTruncInst) {
			listener.exitFpTruncInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpTruncInst) {
			return visitor.visitFpTruncInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpExtInstContext extends ParserRuleContext {
	public OpFpext(): TerminalNode { return this.getToken(LLVMIRParser.OpFpext, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpExtInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpExtInst) {
			listener.enterFpExtInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpExtInst) {
			listener.exitFpExtInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpExtInst) {
			return visitor.visitFpExtInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpToUiInstContext extends ParserRuleContext {
	public OpFptoui(): TerminalNode { return this.getToken(LLVMIRParser.OpFptoui, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpToUiInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpToUiInst) {
			listener.enterFpToUiInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpToUiInst) {
			listener.exitFpToUiInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpToUiInst) {
			return visitor.visitFpToUiInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FpToSiInstContext extends ParserRuleContext {
	public OpFptosi(): TerminalNode { return this.getToken(LLVMIRParser.OpFptosi, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fpToSiInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFpToSiInst) {
			listener.enterFpToSiInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFpToSiInst) {
			listener.exitFpToSiInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFpToSiInst) {
			return visitor.visitFpToSiInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UiToFpInstContext extends ParserRuleContext {
	public OpUitofp(): TerminalNode { return this.getToken(LLVMIRParser.OpUitofp, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_uiToFpInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUiToFpInst) {
			listener.enterUiToFpInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUiToFpInst) {
			listener.exitUiToFpInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUiToFpInst) {
			return visitor.visitUiToFpInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SiToFpInstContext extends ParserRuleContext {
	public OpSitofp(): TerminalNode { return this.getToken(LLVMIRParser.OpSitofp, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_siToFpInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSiToFpInst) {
			listener.enterSiToFpInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSiToFpInst) {
			listener.exitSiToFpInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSiToFpInst) {
			return visitor.visitSiToFpInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PtrToIntInstContext extends ParserRuleContext {
	public OpPtrtoint(): TerminalNode { return this.getToken(LLVMIRParser.OpPtrtoint, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_ptrToIntInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPtrToIntInst) {
			listener.enterPtrToIntInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPtrToIntInst) {
			listener.exitPtrToIntInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPtrToIntInst) {
			return visitor.visitPtrToIntInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IntToPtrInstContext extends ParserRuleContext {
	public OpInttoptr(): TerminalNode { return this.getToken(LLVMIRParser.OpInttoptr, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_intToPtrInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIntToPtrInst) {
			listener.enterIntToPtrInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIntToPtrInst) {
			listener.exitIntToPtrInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIntToPtrInst) {
			return visitor.visitIntToPtrInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BitCastInstContext extends ParserRuleContext {
	public OpBitcast(): TerminalNode { return this.getToken(LLVMIRParser.OpBitcast, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_bitCastInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBitCastInst) {
			listener.enterBitCastInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBitCastInst) {
			listener.exitBitCastInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBitCastInst) {
			return visitor.visitBitCastInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AddrSpaceCastInstContext extends ParserRuleContext {
	public OpAddrspacecast(): TerminalNode { return this.getToken(LLVMIRParser.OpAddrspacecast, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwTo(): TerminalNode { return this.getToken(LLVMIRParser.KwTo, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_addrSpaceCastInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAddrSpaceCastInst) {
			listener.enterAddrSpaceCastInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAddrSpaceCastInst) {
			listener.exitAddrSpaceCastInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAddrSpaceCastInst) {
			return visitor.visitAddrSpaceCastInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ICmpInstContext extends ParserRuleContext {
	public OpIcmp(): TerminalNode { return this.getToken(LLVMIRParser.OpIcmp, 0); }
	public iPred(): IPredContext {
		return this.getRuleContext(0, IPredContext);
	}
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_iCmpInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterICmpInst) {
			listener.enterICmpInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitICmpInst) {
			listener.exitICmpInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitICmpInst) {
			return visitor.visitICmpInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FCmpInstContext extends ParserRuleContext {
	public OpFcmp(): TerminalNode { return this.getToken(LLVMIRParser.OpFcmp, 0); }
	public fPred(): FPredContext {
		return this.getRuleContext(0, FPredContext);
	}
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fCmpInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFCmpInst) {
			listener.enterFCmpInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFCmpInst) {
			listener.exitFCmpInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFCmpInst) {
			return visitor.visitFCmpInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PhiInstContext extends ParserRuleContext {
	public OpPhi(): TerminalNode { return this.getToken(LLVMIRParser.OpPhi, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public inc(): IncContext[];
	public inc(i: number): IncContext;
	public inc(i?: number): IncContext | IncContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IncContext);
		} else {
			return this.getRuleContext(i, IncContext);
		}
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_phiInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPhiInst) {
			listener.enterPhiInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPhiInst) {
			listener.exitPhiInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPhiInst) {
			return visitor.visitPhiInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SelectInstContext extends ParserRuleContext {
	public OpSelect(): TerminalNode { return this.getToken(LLVMIRParser.OpSelect, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_selectInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSelectInst) {
			listener.enterSelectInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSelectInst) {
			listener.exitSelectInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSelectInst) {
			return visitor.visitSelectInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FreezeInstContext extends ParserRuleContext {
	public OpFreeze(): TerminalNode { return this.getToken(LLVMIRParser.OpFreeze, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_freezeInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFreezeInst) {
			listener.enterFreezeInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFreezeInst) {
			listener.exitFreezeInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFreezeInst) {
			return visitor.visitFreezeInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CallInstContext extends ParserRuleContext {
	public _tail!: Token;
	public OpCall(): TerminalNode { return this.getToken(LLVMIRParser.OpCall, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public args(): ArgsContext {
		return this.getRuleContext(0, ArgsContext);
	}
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public fastMathFlag(): FastMathFlagContext[];
	public fastMathFlag(i: number): FastMathFlagContext;
	public fastMathFlag(i?: number): FastMathFlagContext | FastMathFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FastMathFlagContext);
		} else {
			return this.getRuleContext(i, FastMathFlagContext);
		}
	}
	public callingConv(): CallingConvContext | undefined {
		return this.tryGetRuleContext(0, CallingConvContext);
	}
	public returnAttribute(): ReturnAttributeContext[];
	public returnAttribute(i: number): ReturnAttributeContext;
	public returnAttribute(i?: number): ReturnAttributeContext | ReturnAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ReturnAttributeContext);
		} else {
			return this.getRuleContext(i, ReturnAttributeContext);
		}
	}
	public addrSpace(): AddrSpaceContext | undefined {
		return this.tryGetRuleContext(0, AddrSpaceContext);
	}
	public funcAttribute(): FuncAttributeContext[];
	public funcAttribute(i: number): FuncAttributeContext;
	public funcAttribute(i?: number): FuncAttributeContext | FuncAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FuncAttributeContext);
		} else {
			return this.getRuleContext(i, FuncAttributeContext);
		}
	}
	public LBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LBracket, 0); }
	public operandBundle(): OperandBundleContext[];
	public operandBundle(i: number): OperandBundleContext;
	public operandBundle(i?: number): OperandBundleContext | OperandBundleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OperandBundleContext);
		} else {
			return this.getRuleContext(i, OperandBundleContext);
		}
	}
	public RBracket(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.RBracket, 0); }
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwMusttail(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwMusttail, 0); }
	public KwNotail(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNotail, 0); }
	public KwTail(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwTail, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_callInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCallInst) {
			listener.enterCallInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCallInst) {
			listener.exitCallInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCallInst) {
			return visitor.visitCallInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VaargInstContext extends ParserRuleContext {
	public OpVaArg(): TerminalNode { return this.getToken(LLVMIRParser.OpVaArg, 0); }
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_vaargInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVaargInst) {
			listener.enterVaargInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVaargInst) {
			listener.exitVaargInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVaargInst) {
			return visitor.visitVaargInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LandingPadInstContext extends ParserRuleContext {
	public _cleanUp!: Token;
	public OpLandingpad(): TerminalNode { return this.getToken(LLVMIRParser.OpLandingpad, 0); }
	public type(): TypeContext {
		return this.getRuleContext(0, TypeContext);
	}
	public clause(): ClauseContext[];
	public clause(i: number): ClauseContext;
	public clause(i?: number): ClauseContext | ClauseContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClauseContext);
		} else {
			return this.getRuleContext(i, ClauseContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	public KwCleanup(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCleanup, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_landingPadInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLandingPadInst) {
			listener.enterLandingPadInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLandingPadInst) {
			listener.exitLandingPadInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLandingPadInst) {
			return visitor.visitLandingPadInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CatchPadInstContext extends ParserRuleContext {
	public OpCatchpad(): TerminalNode { return this.getToken(LLVMIRParser.OpCatchpad, 0); }
	public KwWithin(): TerminalNode { return this.getToken(LLVMIRParser.KwWithin, 0); }
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	public exceptionArg(): ExceptionArgContext[];
	public exceptionArg(i: number): ExceptionArgContext;
	public exceptionArg(i?: number): ExceptionArgContext | ExceptionArgContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ExceptionArgContext);
		} else {
			return this.getRuleContext(i, ExceptionArgContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_catchPadInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCatchPadInst) {
			listener.enterCatchPadInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCatchPadInst) {
			listener.exitCatchPadInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCatchPadInst) {
			return visitor.visitCatchPadInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CleanupPadInstContext extends ParserRuleContext {
	public OpCleanuppad(): TerminalNode { return this.getToken(LLVMIRParser.OpCleanuppad, 0); }
	public KwWithin(): TerminalNode { return this.getToken(LLVMIRParser.KwWithin, 0); }
	public exceptionPad(): ExceptionPadContext {
		return this.getRuleContext(0, ExceptionPadContext);
	}
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	public exceptionArg(): ExceptionArgContext[];
	public exceptionArg(i: number): ExceptionArgContext;
	public exceptionArg(i?: number): ExceptionArgContext | ExceptionArgContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ExceptionArgContext);
		} else {
			return this.getRuleContext(i, ExceptionArgContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	public metadataAttachment(): MetadataAttachmentContext[];
	public metadataAttachment(i: number): MetadataAttachmentContext;
	public metadataAttachment(i?: number): MetadataAttachmentContext | MetadataAttachmentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MetadataAttachmentContext);
		} else {
			return this.getRuleContext(i, MetadataAttachmentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_cleanupPadInst; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCleanupPadInst) {
			listener.enterCleanupPadInst(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCleanupPadInst) {
			listener.exitCleanupPadInst(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCleanupPadInst) {
			return visitor.visitCleanupPadInst(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IncContext extends ParserRuleContext {
	public LBracket(): TerminalNode { return this.getToken(LLVMIRParser.LBracket, 0); }
	public value(): ValueContext {
		return this.getRuleContext(0, ValueContext);
	}
	public Comma(): TerminalNode { return this.getToken(LLVMIRParser.Comma, 0); }
	public LocalIdent(): TerminalNode { return this.getToken(LLVMIRParser.LocalIdent, 0); }
	public RBracket(): TerminalNode { return this.getToken(LLVMIRParser.RBracket, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_inc; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInc) {
			listener.enterInc(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInc) {
			listener.exitInc(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInc) {
			return visitor.visitInc(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OperandBundleContext extends ParserRuleContext {
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public typeValue(): TypeValueContext[];
	public typeValue(i: number): TypeValueContext;
	public typeValue(i?: number): TypeValueContext | TypeValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TypeValueContext);
		} else {
			return this.getRuleContext(i, TypeValueContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_operandBundle; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOperandBundle) {
			listener.enterOperandBundle(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOperandBundle) {
			listener.exitOperandBundle(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOperandBundle) {
			return visitor.visitOperandBundle(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ClauseContext extends ParserRuleContext {
	public _clauseType!: Token;
	public typeValue(): TypeValueContext {
		return this.getRuleContext(0, TypeValueContext);
	}
	public KwCatch(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCatch, 0); }
	public KwFilter(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFilter, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_clause; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterClause) {
			listener.enterClause(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitClause) {
			listener.exitClause(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitClause) {
			return visitor.visitClause(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ArgsContext extends ParserRuleContext {
	public _ellipsis!: Token;
	public Ellipsis(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Ellipsis, 0); }
	public arg(): ArgContext[];
	public arg(i: number): ArgContext;
	public arg(i?: number): ArgContext | ArgContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ArgContext);
		} else {
			return this.getRuleContext(i, ArgContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_args; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterArgs) {
			listener.enterArgs(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitArgs) {
			listener.exitArgs(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitArgs) {
			return visitor.visitArgs(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ArgContext extends ParserRuleContext {
	public concreteType(): ConcreteTypeContext | undefined {
		return this.tryGetRuleContext(0, ConcreteTypeContext);
	}
	public value(): ValueContext | undefined {
		return this.tryGetRuleContext(0, ValueContext);
	}
	public paramAttribute(): ParamAttributeContext[];
	public paramAttribute(i: number): ParamAttributeContext;
	public paramAttribute(i?: number): ParamAttributeContext | ParamAttributeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParamAttributeContext);
		} else {
			return this.getRuleContext(i, ParamAttributeContext);
		}
	}
	public metadataType(): MetadataTypeContext | undefined {
		return this.tryGetRuleContext(0, MetadataTypeContext);
	}
	public metadata(): MetadataContext | undefined {
		return this.tryGetRuleContext(0, MetadataContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_arg; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterArg) {
			listener.enterArg(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitArg) {
			listener.exitArg(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitArg) {
			return visitor.visitArg(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExceptionArgContext extends ParserRuleContext {
	public concreteType(): ConcreteTypeContext | undefined {
		return this.tryGetRuleContext(0, ConcreteTypeContext);
	}
	public value(): ValueContext | undefined {
		return this.tryGetRuleContext(0, ValueContext);
	}
	public metadataType(): MetadataTypeContext | undefined {
		return this.tryGetRuleContext(0, MetadataTypeContext);
	}
	public metadata(): MetadataContext | undefined {
		return this.tryGetRuleContext(0, MetadataContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_exceptionArg; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExceptionArg) {
			listener.enterExceptionArg(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExceptionArg) {
			listener.exitExceptionArg(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExceptionArg) {
			return visitor.visitExceptionArg(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExceptionPadContext extends ParserRuleContext {
	public noneConst(): NoneConstContext | undefined {
		return this.tryGetRuleContext(0, NoneConstContext);
	}
	public LocalIdent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.LocalIdent, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_exceptionPad; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExceptionPad) {
			listener.enterExceptionPad(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExceptionPad) {
			listener.exitExceptionPad(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExceptionPad) {
			return visitor.visitExceptionPad(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExternalLinkageContext extends ParserRuleContext {
	public KwExternWeak(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExternWeak, 0); }
	public KwExternal(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwExternal, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_externalLinkage; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExternalLinkage) {
			listener.enterExternalLinkage(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExternalLinkage) {
			listener.exitExternalLinkage(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExternalLinkage) {
			return visitor.visitExternalLinkage(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InternalLinkageContext extends ParserRuleContext {
	public KwAppending(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAppending, 0); }
	public KwAvailableExternally(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAvailableExternally, 0); }
	public KwCommon(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCommon, 0); }
	public KwInternal(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInternal, 0); }
	public KwLinkonce(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLinkonce, 0); }
	public KwLinkonceOdr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLinkonceOdr, 0); }
	public KwPrivate(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPrivate, 0); }
	public KwWeak(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWeak, 0); }
	public KwWeakOdr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWeakOdr, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_internalLinkage; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInternalLinkage) {
			listener.enterInternalLinkage(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInternalLinkage) {
			listener.exitInternalLinkage(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInternalLinkage) {
			return visitor.visitInternalLinkage(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LinkageContext extends ParserRuleContext {
	public internalLinkage(): InternalLinkageContext | undefined {
		return this.tryGetRuleContext(0, InternalLinkageContext);
	}
	public externalLinkage(): ExternalLinkageContext | undefined {
		return this.tryGetRuleContext(0, ExternalLinkageContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_linkage; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLinkage) {
			listener.enterLinkage(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLinkage) {
			listener.exitLinkage(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLinkage) {
			return visitor.visitLinkage(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class PreemptionContext extends ParserRuleContext {
	public KwDsoLocal(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDsoLocal, 0); }
	public KwDsoPreemptable(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDsoPreemptable, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_preemption; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterPreemption) {
			listener.enterPreemption(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitPreemption) {
			listener.exitPreemption(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitPreemption) {
			return visitor.visitPreemption(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VisibilityContext extends ParserRuleContext {
	public Kwdefault(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Kwdefault, 0); }
	public KwHidden(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwHidden, 0); }
	public KwProtected(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwProtected, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_visibility; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVisibility) {
			listener.enterVisibility(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVisibility) {
			listener.exitVisibility(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVisibility) {
			return visitor.visitVisibility(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DllStorageClassContext extends ParserRuleContext {
	public KwDllexport(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDllexport, 0); }
	public KwDllimport(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDllimport, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dllStorageClass; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDllStorageClass) {
			listener.enterDllStorageClass(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDllStorageClass) {
			listener.exitDllStorageClass(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDllStorageClass) {
			return visitor.visitDllStorageClass(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TlsModelContext extends ParserRuleContext {
	public KwInitialexec(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInitialexec, 0); }
	public KwLocaldynamic(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLocaldynamic, 0); }
	public KwLocalexec(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLocalexec, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_tlsModel; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTlsModel) {
			listener.enterTlsModel(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTlsModel) {
			listener.exitTlsModel(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTlsModel) {
			return visitor.visitTlsModel(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UnnamedAddrContext extends ParserRuleContext {
	public KwLocalUnnamedAddr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLocalUnnamedAddr, 0); }
	public KwUnnamedAddr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUnnamedAddr, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_unnamedAddr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUnnamedAddr) {
			listener.enterUnnamedAddr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUnnamedAddr) {
			listener.exitUnnamedAddr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUnnamedAddr) {
			return visitor.visitUnnamedAddr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExternallyInitializedContext extends ParserRuleContext {
	public KwExternallyInitialized(): TerminalNode { return this.getToken(LLVMIRParser.KwExternallyInitialized, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_externallyInitialized; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExternallyInitialized) {
			listener.enterExternallyInitialized(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExternallyInitialized) {
			listener.exitExternallyInitialized(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExternallyInitialized) {
			return visitor.visitExternallyInitialized(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ImmutableContext extends ParserRuleContext {
	public KwConstant(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwConstant, 0); }
	public KwGlobal(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwGlobal, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_immutable; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterImmutable) {
			listener.enterImmutable(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitImmutable) {
			listener.exitImmutable(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitImmutable) {
			return visitor.visitImmutable(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FuncAttrContext extends ParserRuleContext {
	public KwAlwaysinline(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAlwaysinline, 0); }
	public KwArgmemonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwArgmemonly, 0); }
	public KwBuiltin(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwBuiltin, 0); }
	public KwCold(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCold, 0); }
	public KwConvergent(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwConvergent, 0); }
	public KwDisableSanitizerInstrumentation(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDisableSanitizerInstrumentation, 0); }
	public KwFnRetThunkExtern(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFnRetThunkExtern, 0); }
	public KwHot(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwHot, 0); }
	public KwInaccessiblememOrArgmemonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInaccessiblememOrArgmemonly, 0); }
	public KwInaccessiblememonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInaccessiblememonly, 0); }
	public KwInlinehint(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInlinehint, 0); }
	public KwJumptable(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwJumptable, 0); }
	public KwMinsize(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwMinsize, 0); }
	public KwMustprogress(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwMustprogress, 0); }
	public KwNaked(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNaked, 0); }
	public KwNobuiltin(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNobuiltin, 0); }
	public KwNocallback(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNocallback, 0); }
	public KwNocfCheck(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNocfCheck, 0); }
	public KwNoduplicate(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoduplicate, 0); }
	public KwNofree(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNofree, 0); }
	public KwNoimplicitfloat(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoimplicitfloat, 0); }
	public KwNoinline(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoinline, 0); }
	public KwNomerge(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNomerge, 0); }
	public KwNonlazybind(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNonlazybind, 0); }
	public KwNoprofile(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoprofile, 0); }
	public KwNorecurse(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNorecurse, 0); }
	public KwNoredzone(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoredzone, 0); }
	public KwNoreturn(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoreturn, 0); }
	public KwNosanitizeBounds(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNosanitizeBounds, 0); }
	public KwNosanitizeCoverage(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNosanitizeCoverage, 0); }
	public KwNosync(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNosync, 0); }
	public KwNounwind(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNounwind, 0); }
	public KwNullPointerIsValid(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNullPointerIsValid, 0); }
	public KwOptforfuzzing(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOptforfuzzing, 0); }
	public KwOptnone(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOptnone, 0); }
	public KwOptsize(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOptsize, 0); }
	public KwPresplitcoroutine(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPresplitcoroutine, 0); }
	public KwReadnone(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReadnone, 0); }
	public KwReadonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReadonly, 0); }
	public KwReturnsTwice(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReturnsTwice, 0); }
	public KwSafestack(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSafestack, 0); }
	public KwSanitizeAddress(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeAddress, 0); }
	public KwSanitizeHwaddress(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeHwaddress, 0); }
	public KwSanitizeMemory(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeMemory, 0); }
	public KwSanitizeMemtag(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeMemtag, 0); }
	public KwSanitizeThread(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSanitizeThread, 0); }
	public KwShadowcallstack(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwShadowcallstack, 0); }
	public KwSpeculatable(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSpeculatable, 0); }
	public KwSpeculativeLoadHardening(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSpeculativeLoadHardening, 0); }
	public KwSsp(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSsp, 0); }
	public KwSspreq(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSspreq, 0); }
	public KwSspstrong(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSspstrong, 0); }
	public KwStrictfp(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwStrictfp, 0); }
	public KwWillreturn(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWillreturn, 0); }
	public KwWriteonly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWriteonly, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_funcAttr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFuncAttr) {
			listener.enterFuncAttr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFuncAttr) {
			listener.exitFuncAttr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFuncAttr) {
			return visitor.visitFuncAttr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DistinctContext extends ParserRuleContext {
	public KwDistinct(): TerminalNode { return this.getToken(LLVMIRParser.KwDistinct, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_distinct; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDistinct) {
			listener.enterDistinct(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDistinct) {
			listener.exitDistinct(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDistinct) {
			return visitor.visitDistinct(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InBoundsContext extends ParserRuleContext {
	public KwInbounds(): TerminalNode { return this.getToken(LLVMIRParser.KwInbounds, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_inBounds; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInBounds) {
			listener.enterInBounds(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInBounds) {
			listener.exitInBounds(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInBounds) {
			return visitor.visitInBounds(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ReturnAttrContext extends ParserRuleContext {
	public KwInreg(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwInreg, 0); }
	public KwNoalias(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoalias, 0); }
	public KwNonnull(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNonnull, 0); }
	public KwNoundef(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoundef, 0); }
	public KwSignext(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSignext, 0); }
	public KwZeroext(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwZeroext, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_returnAttr; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterReturnAttr) {
			listener.enterReturnAttr(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitReturnAttr) {
			listener.exitReturnAttr(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitReturnAttr) {
			return visitor.visitReturnAttr(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OverflowFlagContext extends ParserRuleContext {
	public KwNsw(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNsw, 0); }
	public KwNuw(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNuw, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_overflowFlag; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOverflowFlag) {
			listener.enterOverflowFlag(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOverflowFlag) {
			listener.exitOverflowFlag(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOverflowFlag) {
			return visitor.visitOverflowFlag(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IPredContext extends ParserRuleContext {
	public KwEq(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwEq, 0); }
	public KwNe(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNe, 0); }
	public KwSge(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSge, 0); }
	public KwSgt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSgt, 0); }
	public KwSle(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSle, 0); }
	public KwSlt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSlt, 0); }
	public KwUge(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUge, 0); }
	public KwUgt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUgt, 0); }
	public KwUle(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUle, 0); }
	public KwUlt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUlt, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_iPred; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIPred) {
			listener.enterIPred(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIPred) {
			listener.exitIPred(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIPred) {
			return visitor.visitIPred(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FPredContext extends ParserRuleContext {
	public KwFalse(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFalse, 0); }
	public KwOeq(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOeq, 0); }
	public KwOge(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOge, 0); }
	public KwOgt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOgt, 0); }
	public KwOle(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOle, 0); }
	public KwOlt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOlt, 0); }
	public KwOne(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOne, 0); }
	public KwOrd(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwOrd, 0); }
	public KwTrue(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwTrue, 0); }
	public KwUeq(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUeq, 0); }
	public KwUge(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUge, 0); }
	public KwUgt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUgt, 0); }
	public KwUle(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUle, 0); }
	public KwUlt(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUlt, 0); }
	public KwUne(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUne, 0); }
	public KwUno(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUno, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fPred; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFPred) {
			listener.enterFPred(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFPred) {
			listener.exitFPred(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFPred) {
			return visitor.visitFPred(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AtomicOrderingContext extends ParserRuleContext {
	public KwAcqRel(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAcqRel, 0); }
	public KwAcquire(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAcquire, 0); }
	public KwMonotonic(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwMonotonic, 0); }
	public KwRelease(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwRelease, 0); }
	public KwSeqCst(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSeqCst, 0); }
	public KwUnordered(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwUnordered, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_atomicOrdering; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAtomicOrdering) {
			listener.enterAtomicOrdering(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAtomicOrdering) {
			listener.exitAtomicOrdering(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAtomicOrdering) {
			return visitor.visitAtomicOrdering(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CallingConvEnumContext extends ParserRuleContext {
	public KwAarch64SveVectorPcs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAarch64SveVectorPcs, 0); }
	public KwAarch64VectorPcs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAarch64VectorPcs, 0); }
	public KwAmdgpuCs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuCs, 0); }
	public KwAmdgpuEs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuEs, 0); }
	public KwAmdgpuGfx(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuGfx, 0); }
	public KwAmdgpuGs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuGs, 0); }
	public KwAmdgpuHs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuHs, 0); }
	public KwAmdgpuKernel(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuKernel, 0); }
	public KwAmdgpuLs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuLs, 0); }
	public KwAmdgpuPs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuPs, 0); }
	public KwAmdgpuVs(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAmdgpuVs, 0); }
	public KwAnyregcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAnyregcc, 0); }
	public KwArmAapcsVfpcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwArmAapcsVfpcc, 0); }
	public KwArmAapcscc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwArmAapcscc, 0); }
	public KwArmApcscc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwArmApcscc, 0); }
	public KwAvrIntrcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAvrIntrcc, 0); }
	public KwAvrSignalcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAvrSignalcc, 0); }
	public KwCcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCcc, 0); }
	public KwCfguardCheckcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCfguardCheckcc, 0); }
	public KwColdcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwColdcc, 0); }
	public KwCxxFastTlscc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCxxFastTlscc, 0); }
	public KwFastcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFastcc, 0); }
	public KwGhccc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwGhccc, 0); }
	public KwHhvmCcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwHhvmCcc, 0); }
	public KwHhvmcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwHhvmcc, 0); }
	public KwIntelOclBicc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwIntelOclBicc, 0); }
	public KwMsp430Intrcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwMsp430Intrcc, 0); }
	public KwPreserveAllcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPreserveAllcc, 0); }
	public KwPreserveMostcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPreserveMostcc, 0); }
	public KwPtxDevice(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPtxDevice, 0); }
	public KwPtxKernel(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPtxKernel, 0); }
	public KwSpirFunc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSpirFunc, 0); }
	public KwSpirKernel(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSpirKernel, 0); }
	public KwSwiftcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwiftcc, 0); }
	public KwSwifttailcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwSwifttailcc, 0); }
	public KwTailcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwTailcc, 0); }
	public KwWebkitJscc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWebkitJscc, 0); }
	public KwWin64cc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwWin64cc, 0); }
	public KwX8664Sysvcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX8664Sysvcc, 0); }
	public KwX86Fastcallcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Fastcallcc, 0); }
	public KwX86Intrcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Intrcc, 0); }
	public KwX86Regcallcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Regcallcc, 0); }
	public KwX86Stdcallcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Stdcallcc, 0); }
	public KwX86Thiscallcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Thiscallcc, 0); }
	public KwX86Vectorcallcc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Vectorcallcc, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_callingConvEnum; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCallingConvEnum) {
			listener.enterCallingConvEnum(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCallingConvEnum) {
			listener.exitCallingConvEnum(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCallingConvEnum) {
			return visitor.visitCallingConvEnum(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FastMathFlagContext extends ParserRuleContext {
	public KwAfn(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwAfn, 0); }
	public KwArcp(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwArcp, 0); }
	public KwContract(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwContract, 0); }
	public KwFast(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFast, 0); }
	public KwNinf(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNinf, 0); }
	public KwNnan(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNnan, 0); }
	public KwNsz(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNsz, 0); }
	public KwReassoc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwReassoc, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fastMathFlag; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFastMathFlag) {
			listener.enterFastMathFlag(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFastMathFlag) {
			listener.exitFastMathFlag(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFastMathFlag) {
			return visitor.visitFastMathFlag(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AtomicOpContext extends ParserRuleContext {
	public OpAdd(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpAdd, 0); }
	public OpAnd(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpAnd, 0); }
	public OpFadd(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpFadd, 0); }
	public OpFmax(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpFmax, 0); }
	public OpFmin(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpFmin, 0); }
	public OpFsub(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpFsub, 0); }
	public OpMax(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpMax, 0); }
	public OpMin(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpMin, 0); }
	public OpNand(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpNand, 0); }
	public OpOr(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpOr, 0); }
	public OpSub(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpSub, 0); }
	public OpUmax(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpUmax, 0); }
	public OpUmin(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpUmin, 0); }
	public OpXchg(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpXchg, 0); }
	public OpXor(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.OpXor, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_atomicOp; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAtomicOp) {
			listener.enterAtomicOp(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAtomicOp) {
			listener.exitAtomicOp(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAtomicOp) {
			return visitor.visitAtomicOp(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FloatKindContext extends ParserRuleContext {
	public KwHalf(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwHalf, 0); }
	public KwBfloat(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwBfloat, 0); }
	public KwFloat(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFloat, 0); }
	public KwDouble(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDouble, 0); }
	public KwX86Fp80(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwX86Fp80, 0); }
	public KwFp128(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFp128, 0); }
	public KwPpcFp128(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwPpcFp128, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_floatKind; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFloatKind) {
			listener.enterFloatKind(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFloatKind) {
			listener.exitFloatKind(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFloatKind) {
			return visitor.visitFloatKind(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SpecializedMDNodeContext extends ParserRuleContext {
	public diBasicType(): DiBasicTypeContext | undefined {
		return this.tryGetRuleContext(0, DiBasicTypeContext);
	}
	public diCommonBlock(): DiCommonBlockContext | undefined {
		return this.tryGetRuleContext(0, DiCommonBlockContext);
	}
	public diCompileUnit(): DiCompileUnitContext | undefined {
		return this.tryGetRuleContext(0, DiCompileUnitContext);
	}
	public diCompositeType(): DiCompositeTypeContext | undefined {
		return this.tryGetRuleContext(0, DiCompositeTypeContext);
	}
	public diDerivedType(): DiDerivedTypeContext | undefined {
		return this.tryGetRuleContext(0, DiDerivedTypeContext);
	}
	public diEnumerator(): DiEnumeratorContext | undefined {
		return this.tryGetRuleContext(0, DiEnumeratorContext);
	}
	public diExpression(): DiExpressionContext | undefined {
		return this.tryGetRuleContext(0, DiExpressionContext);
	}
	public diFile(): DiFileContext | undefined {
		return this.tryGetRuleContext(0, DiFileContext);
	}
	public diGlobalVariable(): DiGlobalVariableContext | undefined {
		return this.tryGetRuleContext(0, DiGlobalVariableContext);
	}
	public diGlobalVariableExpression(): DiGlobalVariableExpressionContext | undefined {
		return this.tryGetRuleContext(0, DiGlobalVariableExpressionContext);
	}
	public diImportedEntity(): DiImportedEntityContext | undefined {
		return this.tryGetRuleContext(0, DiImportedEntityContext);
	}
	public diLabel(): DiLabelContext | undefined {
		return this.tryGetRuleContext(0, DiLabelContext);
	}
	public diLexicalBlock(): DiLexicalBlockContext | undefined {
		return this.tryGetRuleContext(0, DiLexicalBlockContext);
	}
	public diLexicalBlockFile(): DiLexicalBlockFileContext | undefined {
		return this.tryGetRuleContext(0, DiLexicalBlockFileContext);
	}
	public diLocalVariable(): DiLocalVariableContext | undefined {
		return this.tryGetRuleContext(0, DiLocalVariableContext);
	}
	public diLocation(): DiLocationContext | undefined {
		return this.tryGetRuleContext(0, DiLocationContext);
	}
	public diMacro(): DiMacroContext | undefined {
		return this.tryGetRuleContext(0, DiMacroContext);
	}
	public diMacroFile(): DiMacroFileContext | undefined {
		return this.tryGetRuleContext(0, DiMacroFileContext);
	}
	public diModule(): DiModuleContext | undefined {
		return this.tryGetRuleContext(0, DiModuleContext);
	}
	public diNamespace(): DiNamespaceContext | undefined {
		return this.tryGetRuleContext(0, DiNamespaceContext);
	}
	public diObjCProperty(): DiObjCPropertyContext | undefined {
		return this.tryGetRuleContext(0, DiObjCPropertyContext);
	}
	public diStringType(): DiStringTypeContext | undefined {
		return this.tryGetRuleContext(0, DiStringTypeContext);
	}
	public diSubprogram(): DiSubprogramContext | undefined {
		return this.tryGetRuleContext(0, DiSubprogramContext);
	}
	public diSubrange(): DiSubrangeContext | undefined {
		return this.tryGetRuleContext(0, DiSubrangeContext);
	}
	public diSubroutineType(): DiSubroutineTypeContext | undefined {
		return this.tryGetRuleContext(0, DiSubroutineTypeContext);
	}
	public diTemplateTypeParameter(): DiTemplateTypeParameterContext | undefined {
		return this.tryGetRuleContext(0, DiTemplateTypeParameterContext);
	}
	public diTemplateValueParameter(): DiTemplateValueParameterContext | undefined {
		return this.tryGetRuleContext(0, DiTemplateValueParameterContext);
	}
	public genericDiNode(): GenericDiNodeContext | undefined {
		return this.tryGetRuleContext(0, GenericDiNodeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_specializedMDNode; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSpecializedMDNode) {
			listener.enterSpecializedMDNode(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSpecializedMDNode) {
			listener.exitSpecializedMDNode(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSpecializedMDNode) {
			return visitor.visitSpecializedMDNode(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiBasicTypeContext extends ParserRuleContext {
	public DIBasicType(): TerminalNode { return this.getToken(LLVMIRParser.DIBasicType, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diBasicTypeField(): DiBasicTypeFieldContext[];
	public diBasicTypeField(i: number): DiBasicTypeFieldContext;
	public diBasicTypeField(i?: number): DiBasicTypeFieldContext | DiBasicTypeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiBasicTypeFieldContext);
		} else {
			return this.getRuleContext(i, DiBasicTypeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diBasicType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiBasicType) {
			listener.enterDiBasicType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiBasicType) {
			listener.exitDiBasicType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiBasicType) {
			return visitor.visitDiBasicType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCommonBlockContext extends ParserRuleContext {
	public DICommonBlock(): TerminalNode { return this.getToken(LLVMIRParser.DICommonBlock, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diCommonBlockField(): DiCommonBlockFieldContext[];
	public diCommonBlockField(i: number): DiCommonBlockFieldContext;
	public diCommonBlockField(i?: number): DiCommonBlockFieldContext | DiCommonBlockFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiCommonBlockFieldContext);
		} else {
			return this.getRuleContext(i, DiCommonBlockFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCommonBlock; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCommonBlock) {
			listener.enterDiCommonBlock(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCommonBlock) {
			listener.exitDiCommonBlock(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCommonBlock) {
			return visitor.visitDiCommonBlock(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCompileUnitContext extends ParserRuleContext {
	public DICompileUnit(): TerminalNode { return this.getToken(LLVMIRParser.DICompileUnit, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diCompileUnitField(): DiCompileUnitFieldContext[];
	public diCompileUnitField(i: number): DiCompileUnitFieldContext;
	public diCompileUnitField(i?: number): DiCompileUnitFieldContext | DiCompileUnitFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiCompileUnitFieldContext);
		} else {
			return this.getRuleContext(i, DiCompileUnitFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCompileUnit; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCompileUnit) {
			listener.enterDiCompileUnit(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCompileUnit) {
			listener.exitDiCompileUnit(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCompileUnit) {
			return visitor.visitDiCompileUnit(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCompositeTypeContext extends ParserRuleContext {
	public DICompositeType(): TerminalNode { return this.getToken(LLVMIRParser.DICompositeType, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diCompositeTypeField(): DiCompositeTypeFieldContext[];
	public diCompositeTypeField(i: number): DiCompositeTypeFieldContext;
	public diCompositeTypeField(i?: number): DiCompositeTypeFieldContext | DiCompositeTypeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiCompositeTypeFieldContext);
		} else {
			return this.getRuleContext(i, DiCompositeTypeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCompositeType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCompositeType) {
			listener.enterDiCompositeType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCompositeType) {
			listener.exitDiCompositeType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCompositeType) {
			return visitor.visitDiCompositeType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCompositeTypeFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public baseTypeField(): BaseTypeFieldContext | undefined {
		return this.tryGetRuleContext(0, BaseTypeFieldContext);
	}
	public sizeField(): SizeFieldContext | undefined {
		return this.tryGetRuleContext(0, SizeFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public offsetField(): OffsetFieldContext | undefined {
		return this.tryGetRuleContext(0, OffsetFieldContext);
	}
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	public elementsField(): ElementsFieldContext | undefined {
		return this.tryGetRuleContext(0, ElementsFieldContext);
	}
	public runtimeLangField(): RuntimeLangFieldContext | undefined {
		return this.tryGetRuleContext(0, RuntimeLangFieldContext);
	}
	public vtableHolderField(): VtableHolderFieldContext | undefined {
		return this.tryGetRuleContext(0, VtableHolderFieldContext);
	}
	public templateParamsField(): TemplateParamsFieldContext | undefined {
		return this.tryGetRuleContext(0, TemplateParamsFieldContext);
	}
	public identifierField(): IdentifierFieldContext | undefined {
		return this.tryGetRuleContext(0, IdentifierFieldContext);
	}
	public discriminatorField(): DiscriminatorFieldContext | undefined {
		return this.tryGetRuleContext(0, DiscriminatorFieldContext);
	}
	public dataLocationField(): DataLocationFieldContext | undefined {
		return this.tryGetRuleContext(0, DataLocationFieldContext);
	}
	public associatedField(): AssociatedFieldContext | undefined {
		return this.tryGetRuleContext(0, AssociatedFieldContext);
	}
	public allocatedField(): AllocatedFieldContext | undefined {
		return this.tryGetRuleContext(0, AllocatedFieldContext);
	}
	public rankField(): RankFieldContext | undefined {
		return this.tryGetRuleContext(0, RankFieldContext);
	}
	public annotationsField(): AnnotationsFieldContext | undefined {
		return this.tryGetRuleContext(0, AnnotationsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCompositeTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCompositeTypeField) {
			listener.enterDiCompositeTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCompositeTypeField) {
			listener.exitDiCompositeTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCompositeTypeField) {
			return visitor.visitDiCompositeTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiDerivedTypeContext extends ParserRuleContext {
	public DIDerivedType(): TerminalNode { return this.getToken(LLVMIRParser.DIDerivedType, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diDerivedTypeField(): DiDerivedTypeFieldContext[];
	public diDerivedTypeField(i: number): DiDerivedTypeFieldContext;
	public diDerivedTypeField(i?: number): DiDerivedTypeFieldContext | DiDerivedTypeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiDerivedTypeFieldContext);
		} else {
			return this.getRuleContext(i, DiDerivedTypeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diDerivedType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiDerivedType) {
			listener.enterDiDerivedType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiDerivedType) {
			listener.exitDiDerivedType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiDerivedType) {
			return visitor.visitDiDerivedType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiDerivedTypeFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public baseTypeField(): BaseTypeFieldContext | undefined {
		return this.tryGetRuleContext(0, BaseTypeFieldContext);
	}
	public sizeField(): SizeFieldContext | undefined {
		return this.tryGetRuleContext(0, SizeFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public offsetField(): OffsetFieldContext | undefined {
		return this.tryGetRuleContext(0, OffsetFieldContext);
	}
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	public extraDataField(): ExtraDataFieldContext | undefined {
		return this.tryGetRuleContext(0, ExtraDataFieldContext);
	}
	public dwarfAddressSpaceField(): DwarfAddressSpaceFieldContext | undefined {
		return this.tryGetRuleContext(0, DwarfAddressSpaceFieldContext);
	}
	public annotationsField(): AnnotationsFieldContext | undefined {
		return this.tryGetRuleContext(0, AnnotationsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diDerivedTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiDerivedTypeField) {
			listener.enterDiDerivedTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiDerivedTypeField) {
			listener.exitDiDerivedTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiDerivedTypeField) {
			return visitor.visitDiDerivedTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiEnumeratorContext extends ParserRuleContext {
	public DIEnumerator(): TerminalNode { return this.getToken(LLVMIRParser.DIEnumerator, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diEnumeratorField(): DiEnumeratorFieldContext[];
	public diEnumeratorField(i: number): DiEnumeratorFieldContext;
	public diEnumeratorField(i?: number): DiEnumeratorFieldContext | DiEnumeratorFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiEnumeratorFieldContext);
		} else {
			return this.getRuleContext(i, DiEnumeratorFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diEnumerator; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiEnumerator) {
			listener.enterDiEnumerator(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiEnumerator) {
			listener.exitDiEnumerator(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiEnumerator) {
			return visitor.visitDiEnumerator(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiEnumeratorFieldContext extends ParserRuleContext {
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public valueIntField(): ValueIntFieldContext | undefined {
		return this.tryGetRuleContext(0, ValueIntFieldContext);
	}
	public isUnsignedField(): IsUnsignedFieldContext | undefined {
		return this.tryGetRuleContext(0, IsUnsignedFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diEnumeratorField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiEnumeratorField) {
			listener.enterDiEnumeratorField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiEnumeratorField) {
			listener.exitDiEnumeratorField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiEnumeratorField) {
			return visitor.visitDiEnumeratorField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiFileContext extends ParserRuleContext {
	public DIFile(): TerminalNode { return this.getToken(LLVMIRParser.DIFile, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diFileField(): DiFileFieldContext[];
	public diFileField(i: number): DiFileFieldContext;
	public diFileField(i?: number): DiFileFieldContext | DiFileFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiFileFieldContext);
		} else {
			return this.getRuleContext(i, DiFileFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diFile; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiFile) {
			listener.enterDiFile(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiFile) {
			listener.exitDiFile(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiFile) {
			return visitor.visitDiFile(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiFileFieldContext extends ParserRuleContext {
	public filenameField(): FilenameFieldContext | undefined {
		return this.tryGetRuleContext(0, FilenameFieldContext);
	}
	public directoryField(): DirectoryFieldContext | undefined {
		return this.tryGetRuleContext(0, DirectoryFieldContext);
	}
	public checksumkindField(): ChecksumkindFieldContext | undefined {
		return this.tryGetRuleContext(0, ChecksumkindFieldContext);
	}
	public checksumField(): ChecksumFieldContext | undefined {
		return this.tryGetRuleContext(0, ChecksumFieldContext);
	}
	public sourceField(): SourceFieldContext | undefined {
		return this.tryGetRuleContext(0, SourceFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diFileField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiFileField) {
			listener.enterDiFileField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiFileField) {
			listener.exitDiFileField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiFileField) {
			return visitor.visitDiFileField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiGlobalVariableContext extends ParserRuleContext {
	public DIGlobalVariable(): TerminalNode { return this.getToken(LLVMIRParser.DIGlobalVariable, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diGlobalVariableField(): DiGlobalVariableFieldContext[];
	public diGlobalVariableField(i: number): DiGlobalVariableFieldContext;
	public diGlobalVariableField(i?: number): DiGlobalVariableFieldContext | DiGlobalVariableFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiGlobalVariableFieldContext);
		} else {
			return this.getRuleContext(i, DiGlobalVariableFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diGlobalVariable; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiGlobalVariable) {
			listener.enterDiGlobalVariable(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiGlobalVariable) {
			listener.exitDiGlobalVariable(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiGlobalVariable) {
			return visitor.visitDiGlobalVariable(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiGlobalVariableFieldContext extends ParserRuleContext {
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public linkageNameField(): LinkageNameFieldContext | undefined {
		return this.tryGetRuleContext(0, LinkageNameFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	public isLocalField(): IsLocalFieldContext | undefined {
		return this.tryGetRuleContext(0, IsLocalFieldContext);
	}
	public isDefinitionField(): IsDefinitionFieldContext | undefined {
		return this.tryGetRuleContext(0, IsDefinitionFieldContext);
	}
	public templateParamsField(): TemplateParamsFieldContext | undefined {
		return this.tryGetRuleContext(0, TemplateParamsFieldContext);
	}
	public declarationField(): DeclarationFieldContext | undefined {
		return this.tryGetRuleContext(0, DeclarationFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public annotationsField(): AnnotationsFieldContext | undefined {
		return this.tryGetRuleContext(0, AnnotationsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diGlobalVariableField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiGlobalVariableField) {
			listener.enterDiGlobalVariableField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiGlobalVariableField) {
			listener.exitDiGlobalVariableField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiGlobalVariableField) {
			return visitor.visitDiGlobalVariableField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiGlobalVariableExpressionContext extends ParserRuleContext {
	public DIGlobalVariableExpression(): TerminalNode { return this.getToken(LLVMIRParser.DIGlobalVariableExpression, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diGlobalVariableExpressionField(): DiGlobalVariableExpressionFieldContext[];
	public diGlobalVariableExpressionField(i: number): DiGlobalVariableExpressionFieldContext;
	public diGlobalVariableExpressionField(i?: number): DiGlobalVariableExpressionFieldContext | DiGlobalVariableExpressionFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiGlobalVariableExpressionFieldContext);
		} else {
			return this.getRuleContext(i, DiGlobalVariableExpressionFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diGlobalVariableExpression; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiGlobalVariableExpression) {
			listener.enterDiGlobalVariableExpression(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiGlobalVariableExpression) {
			listener.exitDiGlobalVariableExpression(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiGlobalVariableExpression) {
			return visitor.visitDiGlobalVariableExpression(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiGlobalVariableExpressionFieldContext extends ParserRuleContext {
	public varField(): VarFieldContext | undefined {
		return this.tryGetRuleContext(0, VarFieldContext);
	}
	public exprField(): ExprFieldContext | undefined {
		return this.tryGetRuleContext(0, ExprFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diGlobalVariableExpressionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiGlobalVariableExpressionField) {
			listener.enterDiGlobalVariableExpressionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiGlobalVariableExpressionField) {
			listener.exitDiGlobalVariableExpressionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiGlobalVariableExpressionField) {
			return visitor.visitDiGlobalVariableExpressionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiImportedEntityContext extends ParserRuleContext {
	public DIImportedEntity(): TerminalNode { return this.getToken(LLVMIRParser.DIImportedEntity, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diImportedEntityField(): DiImportedEntityFieldContext[];
	public diImportedEntityField(i: number): DiImportedEntityFieldContext;
	public diImportedEntityField(i?: number): DiImportedEntityFieldContext | DiImportedEntityFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiImportedEntityFieldContext);
		} else {
			return this.getRuleContext(i, DiImportedEntityFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diImportedEntity; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiImportedEntity) {
			listener.enterDiImportedEntity(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiImportedEntity) {
			listener.exitDiImportedEntity(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiImportedEntity) {
			return visitor.visitDiImportedEntity(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiImportedEntityFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public entityField(): EntityFieldContext | undefined {
		return this.tryGetRuleContext(0, EntityFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public elementsField(): ElementsFieldContext | undefined {
		return this.tryGetRuleContext(0, ElementsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diImportedEntityField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiImportedEntityField) {
			listener.enterDiImportedEntityField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiImportedEntityField) {
			listener.exitDiImportedEntityField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiImportedEntityField) {
			return visitor.visitDiImportedEntityField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLabelContext extends ParserRuleContext {
	public DILabel(): TerminalNode { return this.getToken(LLVMIRParser.DILabel, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diLabelField(): DiLabelFieldContext[];
	public diLabelField(i: number): DiLabelFieldContext;
	public diLabelField(i?: number): DiLabelFieldContext | DiLabelFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiLabelFieldContext);
		} else {
			return this.getRuleContext(i, DiLabelFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLabel; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLabel) {
			listener.enterDiLabel(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLabel) {
			listener.exitDiLabel(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLabel) {
			return visitor.visitDiLabel(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLabelFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLabelField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLabelField) {
			listener.enterDiLabelField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLabelField) {
			listener.exitDiLabelField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLabelField) {
			return visitor.visitDiLabelField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLexicalBlockContext extends ParserRuleContext {
	public DILexicalBlock(): TerminalNode { return this.getToken(LLVMIRParser.DILexicalBlock, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diLexicalBlockField(): DiLexicalBlockFieldContext[];
	public diLexicalBlockField(i: number): DiLexicalBlockFieldContext;
	public diLexicalBlockField(i?: number): DiLexicalBlockFieldContext | DiLexicalBlockFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiLexicalBlockFieldContext);
		} else {
			return this.getRuleContext(i, DiLexicalBlockFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLexicalBlock; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLexicalBlock) {
			listener.enterDiLexicalBlock(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLexicalBlock) {
			listener.exitDiLexicalBlock(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLexicalBlock) {
			return visitor.visitDiLexicalBlock(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLexicalBlockFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public columnField(): ColumnFieldContext | undefined {
		return this.tryGetRuleContext(0, ColumnFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLexicalBlockField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLexicalBlockField) {
			listener.enterDiLexicalBlockField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLexicalBlockField) {
			listener.exitDiLexicalBlockField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLexicalBlockField) {
			return visitor.visitDiLexicalBlockField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLexicalBlockFileContext extends ParserRuleContext {
	public DILexicalBlockFile(): TerminalNode { return this.getToken(LLVMIRParser.DILexicalBlockFile, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diLexicalBlockFileField(): DiLexicalBlockFileFieldContext[];
	public diLexicalBlockFileField(i: number): DiLexicalBlockFileFieldContext;
	public diLexicalBlockFileField(i?: number): DiLexicalBlockFileFieldContext | DiLexicalBlockFileFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiLexicalBlockFileFieldContext);
		} else {
			return this.getRuleContext(i, DiLexicalBlockFileFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLexicalBlockFile; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLexicalBlockFile) {
			listener.enterDiLexicalBlockFile(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLexicalBlockFile) {
			listener.exitDiLexicalBlockFile(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLexicalBlockFile) {
			return visitor.visitDiLexicalBlockFile(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLexicalBlockFileFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public discriminatorIntField(): DiscriminatorIntFieldContext | undefined {
		return this.tryGetRuleContext(0, DiscriminatorIntFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLexicalBlockFileField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLexicalBlockFileField) {
			listener.enterDiLexicalBlockFileField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLexicalBlockFileField) {
			listener.exitDiLexicalBlockFileField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLexicalBlockFileField) {
			return visitor.visitDiLexicalBlockFileField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLocalVariableContext extends ParserRuleContext {
	public DILocalVariable(): TerminalNode { return this.getToken(LLVMIRParser.DILocalVariable, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diLocalVariableField(): DiLocalVariableFieldContext[];
	public diLocalVariableField(i: number): DiLocalVariableFieldContext;
	public diLocalVariableField(i?: number): DiLocalVariableFieldContext | DiLocalVariableFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiLocalVariableFieldContext);
		} else {
			return this.getRuleContext(i, DiLocalVariableFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLocalVariable; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLocalVariable) {
			listener.enterDiLocalVariable(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLocalVariable) {
			listener.exitDiLocalVariable(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLocalVariable) {
			return visitor.visitDiLocalVariable(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLocalVariableFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public argField(): ArgFieldContext | undefined {
		return this.tryGetRuleContext(0, ArgFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public annotationsField(): AnnotationsFieldContext | undefined {
		return this.tryGetRuleContext(0, AnnotationsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLocalVariableField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLocalVariableField) {
			listener.enterDiLocalVariableField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLocalVariableField) {
			listener.exitDiLocalVariableField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLocalVariableField) {
			return visitor.visitDiLocalVariableField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLocationContext extends ParserRuleContext {
	public DILocation(): TerminalNode { return this.getToken(LLVMIRParser.DILocation, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diLocationField(): DiLocationFieldContext[];
	public diLocationField(i: number): DiLocationFieldContext;
	public diLocationField(i?: number): DiLocationFieldContext | DiLocationFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiLocationFieldContext);
		} else {
			return this.getRuleContext(i, DiLocationFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLocation; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLocation) {
			listener.enterDiLocation(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLocation) {
			listener.exitDiLocation(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLocation) {
			return visitor.visitDiLocation(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiLocationFieldContext extends ParserRuleContext {
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public columnField(): ColumnFieldContext | undefined {
		return this.tryGetRuleContext(0, ColumnFieldContext);
	}
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public inlinedAtField(): InlinedAtFieldContext | undefined {
		return this.tryGetRuleContext(0, InlinedAtFieldContext);
	}
	public isImplicitCodeField(): IsImplicitCodeFieldContext | undefined {
		return this.tryGetRuleContext(0, IsImplicitCodeFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diLocationField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiLocationField) {
			listener.enterDiLocationField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiLocationField) {
			listener.exitDiLocationField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiLocationField) {
			return visitor.visitDiLocationField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiMacroContext extends ParserRuleContext {
	public DIMacro(): TerminalNode { return this.getToken(LLVMIRParser.DIMacro, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diMacroField(): DiMacroFieldContext[];
	public diMacroField(i: number): DiMacroFieldContext;
	public diMacroField(i?: number): DiMacroFieldContext | DiMacroFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiMacroFieldContext);
		} else {
			return this.getRuleContext(i, DiMacroFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diMacro; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiMacro) {
			listener.enterDiMacro(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiMacro) {
			listener.exitDiMacro(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiMacro) {
			return visitor.visitDiMacro(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiMacroFieldContext extends ParserRuleContext {
	public typeMacinfoField(): TypeMacinfoFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeMacinfoFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public valueStringField(): ValueStringFieldContext | undefined {
		return this.tryGetRuleContext(0, ValueStringFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diMacroField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiMacroField) {
			listener.enterDiMacroField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiMacroField) {
			listener.exitDiMacroField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiMacroField) {
			return visitor.visitDiMacroField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiMacroFileContext extends ParserRuleContext {
	public DIMacroFile(): TerminalNode { return this.getToken(LLVMIRParser.DIMacroFile, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diMacroFileField(): DiMacroFileFieldContext[];
	public diMacroFileField(i: number): DiMacroFileFieldContext;
	public diMacroFileField(i?: number): DiMacroFileFieldContext | DiMacroFileFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiMacroFileFieldContext);
		} else {
			return this.getRuleContext(i, DiMacroFileFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diMacroFile; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiMacroFile) {
			listener.enterDiMacroFile(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiMacroFile) {
			listener.exitDiMacroFile(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiMacroFile) {
			return visitor.visitDiMacroFile(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiMacroFileFieldContext extends ParserRuleContext {
	public typeMacinfoField(): TypeMacinfoFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeMacinfoFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public nodesField(): NodesFieldContext | undefined {
		return this.tryGetRuleContext(0, NodesFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diMacroFileField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiMacroFileField) {
			listener.enterDiMacroFileField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiMacroFileField) {
			listener.exitDiMacroFileField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiMacroFileField) {
			return visitor.visitDiMacroFileField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiModuleContext extends ParserRuleContext {
	public DIModule(): TerminalNode { return this.getToken(LLVMIRParser.DIModule, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diModuleField(): DiModuleFieldContext[];
	public diModuleField(i: number): DiModuleFieldContext;
	public diModuleField(i?: number): DiModuleFieldContext | DiModuleFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiModuleFieldContext);
		} else {
			return this.getRuleContext(i, DiModuleFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diModule; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiModule) {
			listener.enterDiModule(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiModule) {
			listener.exitDiModule(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiModule) {
			return visitor.visitDiModule(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiModuleFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public configMacrosField(): ConfigMacrosFieldContext | undefined {
		return this.tryGetRuleContext(0, ConfigMacrosFieldContext);
	}
	public includePathField(): IncludePathFieldContext | undefined {
		return this.tryGetRuleContext(0, IncludePathFieldContext);
	}
	public apiNotesField(): ApiNotesFieldContext | undefined {
		return this.tryGetRuleContext(0, ApiNotesFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public isDeclField(): IsDeclFieldContext | undefined {
		return this.tryGetRuleContext(0, IsDeclFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diModuleField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiModuleField) {
			listener.enterDiModuleField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiModuleField) {
			listener.exitDiModuleField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiModuleField) {
			return visitor.visitDiModuleField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiNamespaceContext extends ParserRuleContext {
	public DINamespace(): TerminalNode { return this.getToken(LLVMIRParser.DINamespace, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diNamespaceField(): DiNamespaceFieldContext[];
	public diNamespaceField(i: number): DiNamespaceFieldContext;
	public diNamespaceField(i?: number): DiNamespaceFieldContext | DiNamespaceFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiNamespaceFieldContext);
		} else {
			return this.getRuleContext(i, DiNamespaceFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diNamespace; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiNamespace) {
			listener.enterDiNamespace(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiNamespace) {
			listener.exitDiNamespace(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiNamespace) {
			return visitor.visitDiNamespace(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiNamespaceFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public exportSymbolsField(): ExportSymbolsFieldContext | undefined {
		return this.tryGetRuleContext(0, ExportSymbolsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diNamespaceField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiNamespaceField) {
			listener.enterDiNamespaceField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiNamespaceField) {
			listener.exitDiNamespaceField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiNamespaceField) {
			return visitor.visitDiNamespaceField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiObjCPropertyContext extends ParserRuleContext {
	public DIObjCProperty(): TerminalNode { return this.getToken(LLVMIRParser.DIObjCProperty, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diObjCPropertyField(): DiObjCPropertyFieldContext[];
	public diObjCPropertyField(i: number): DiObjCPropertyFieldContext;
	public diObjCPropertyField(i?: number): DiObjCPropertyFieldContext | DiObjCPropertyFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiObjCPropertyFieldContext);
		} else {
			return this.getRuleContext(i, DiObjCPropertyFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diObjCProperty; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiObjCProperty) {
			listener.enterDiObjCProperty(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiObjCProperty) {
			listener.exitDiObjCProperty(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiObjCProperty) {
			return visitor.visitDiObjCProperty(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiObjCPropertyFieldContext extends ParserRuleContext {
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public setterField(): SetterFieldContext | undefined {
		return this.tryGetRuleContext(0, SetterFieldContext);
	}
	public getterField(): GetterFieldContext | undefined {
		return this.tryGetRuleContext(0, GetterFieldContext);
	}
	public attributesField(): AttributesFieldContext | undefined {
		return this.tryGetRuleContext(0, AttributesFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diObjCPropertyField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiObjCPropertyField) {
			listener.enterDiObjCPropertyField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiObjCPropertyField) {
			listener.exitDiObjCPropertyField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiObjCPropertyField) {
			return visitor.visitDiObjCPropertyField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiStringTypeContext extends ParserRuleContext {
	public DIStringType(): TerminalNode { return this.getToken(LLVMIRParser.DIStringType, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diStringTypeField(): DiStringTypeFieldContext[];
	public diStringTypeField(i: number): DiStringTypeFieldContext;
	public diStringTypeField(i?: number): DiStringTypeFieldContext | DiStringTypeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiStringTypeFieldContext);
		} else {
			return this.getRuleContext(i, DiStringTypeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diStringType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiStringType) {
			listener.enterDiStringType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiStringType) {
			listener.exitDiStringType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiStringType) {
			return visitor.visitDiStringType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiStringTypeFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public stringLengthField(): StringLengthFieldContext | undefined {
		return this.tryGetRuleContext(0, StringLengthFieldContext);
	}
	public stringLengthExpressionField(): StringLengthExpressionFieldContext | undefined {
		return this.tryGetRuleContext(0, StringLengthExpressionFieldContext);
	}
	public stringLocationExpressionField(): StringLocationExpressionFieldContext | undefined {
		return this.tryGetRuleContext(0, StringLocationExpressionFieldContext);
	}
	public sizeField(): SizeFieldContext | undefined {
		return this.tryGetRuleContext(0, SizeFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public encodingField(): EncodingFieldContext | undefined {
		return this.tryGetRuleContext(0, EncodingFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diStringTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiStringTypeField) {
			listener.enterDiStringTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiStringTypeField) {
			listener.exitDiStringTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiStringTypeField) {
			return visitor.visitDiStringTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubprogramContext extends ParserRuleContext {
	public DISubprogram(): TerminalNode { return this.getToken(LLVMIRParser.DISubprogram, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diSubprogramField(): DiSubprogramFieldContext[];
	public diSubprogramField(i: number): DiSubprogramFieldContext;
	public diSubprogramField(i?: number): DiSubprogramFieldContext | DiSubprogramFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiSubprogramFieldContext);
		} else {
			return this.getRuleContext(i, DiSubprogramFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubprogram; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubprogram) {
			listener.enterDiSubprogram(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubprogram) {
			listener.exitDiSubprogram(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubprogram) {
			return visitor.visitDiSubprogram(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubprogramFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public linkageNameField(): LinkageNameFieldContext | undefined {
		return this.tryGetRuleContext(0, LinkageNameFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	public isLocalField(): IsLocalFieldContext | undefined {
		return this.tryGetRuleContext(0, IsLocalFieldContext);
	}
	public isDefinitionField(): IsDefinitionFieldContext | undefined {
		return this.tryGetRuleContext(0, IsDefinitionFieldContext);
	}
	public scopeLineField(): ScopeLineFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeLineFieldContext);
	}
	public containingTypeField(): ContainingTypeFieldContext | undefined {
		return this.tryGetRuleContext(0, ContainingTypeFieldContext);
	}
	public virtualityField(): VirtualityFieldContext | undefined {
		return this.tryGetRuleContext(0, VirtualityFieldContext);
	}
	public virtualIndexField(): VirtualIndexFieldContext | undefined {
		return this.tryGetRuleContext(0, VirtualIndexFieldContext);
	}
	public thisAdjustmentField(): ThisAdjustmentFieldContext | undefined {
		return this.tryGetRuleContext(0, ThisAdjustmentFieldContext);
	}
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	public spFlagsField(): SpFlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, SpFlagsFieldContext);
	}
	public isOptimizedField(): IsOptimizedFieldContext | undefined {
		return this.tryGetRuleContext(0, IsOptimizedFieldContext);
	}
	public unitField(): UnitFieldContext | undefined {
		return this.tryGetRuleContext(0, UnitFieldContext);
	}
	public templateParamsField(): TemplateParamsFieldContext | undefined {
		return this.tryGetRuleContext(0, TemplateParamsFieldContext);
	}
	public declarationField(): DeclarationFieldContext | undefined {
		return this.tryGetRuleContext(0, DeclarationFieldContext);
	}
	public retainedNodesField(): RetainedNodesFieldContext | undefined {
		return this.tryGetRuleContext(0, RetainedNodesFieldContext);
	}
	public thrownTypesField(): ThrownTypesFieldContext | undefined {
		return this.tryGetRuleContext(0, ThrownTypesFieldContext);
	}
	public annotationsField(): AnnotationsFieldContext | undefined {
		return this.tryGetRuleContext(0, AnnotationsFieldContext);
	}
	public targetFuncNameField(): TargetFuncNameFieldContext | undefined {
		return this.tryGetRuleContext(0, TargetFuncNameFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubprogramField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubprogramField) {
			listener.enterDiSubprogramField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubprogramField) {
			listener.exitDiSubprogramField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubprogramField) {
			return visitor.visitDiSubprogramField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubrangeContext extends ParserRuleContext {
	public DICompileUnit(): TerminalNode { return this.getToken(LLVMIRParser.DICompileUnit, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diSubrangeField(): DiSubrangeFieldContext[];
	public diSubrangeField(i: number): DiSubrangeFieldContext;
	public diSubrangeField(i?: number): DiSubrangeFieldContext | DiSubrangeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiSubrangeFieldContext);
		} else {
			return this.getRuleContext(i, DiSubrangeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubrange; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubrange) {
			listener.enterDiSubrange(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubrange) {
			listener.exitDiSubrange(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubrange) {
			return visitor.visitDiSubrange(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubrangeFieldContext extends ParserRuleContext {
	public countField(): CountFieldContext | undefined {
		return this.tryGetRuleContext(0, CountFieldContext);
	}
	public lowerBoundField(): LowerBoundFieldContext | undefined {
		return this.tryGetRuleContext(0, LowerBoundFieldContext);
	}
	public upperBoundField(): UpperBoundFieldContext | undefined {
		return this.tryGetRuleContext(0, UpperBoundFieldContext);
	}
	public strideField(): StrideFieldContext | undefined {
		return this.tryGetRuleContext(0, StrideFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubrangeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubrangeField) {
			listener.enterDiSubrangeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubrangeField) {
			listener.exitDiSubrangeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubrangeField) {
			return visitor.visitDiSubrangeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubroutineTypeContext extends ParserRuleContext {
	public DISubroutineType(): TerminalNode { return this.getToken(LLVMIRParser.DISubroutineType, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diSubroutineTypeField(): DiSubroutineTypeFieldContext[];
	public diSubroutineTypeField(i: number): DiSubroutineTypeFieldContext;
	public diSubroutineTypeField(i?: number): DiSubroutineTypeFieldContext | DiSubroutineTypeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiSubroutineTypeFieldContext);
		} else {
			return this.getRuleContext(i, DiSubroutineTypeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubroutineType; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubroutineType) {
			listener.enterDiSubroutineType(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubroutineType) {
			listener.exitDiSubroutineType(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubroutineType) {
			return visitor.visitDiSubroutineType(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiTemplateTypeParameterContext extends ParserRuleContext {
	public DITemplateTypeParameter(): TerminalNode { return this.getToken(LLVMIRParser.DITemplateTypeParameter, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diTemplateTypeParameterField(): DiTemplateTypeParameterFieldContext[];
	public diTemplateTypeParameterField(i: number): DiTemplateTypeParameterFieldContext;
	public diTemplateTypeParameterField(i?: number): DiTemplateTypeParameterFieldContext | DiTemplateTypeParameterFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiTemplateTypeParameterFieldContext);
		} else {
			return this.getRuleContext(i, DiTemplateTypeParameterFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diTemplateTypeParameter; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiTemplateTypeParameter) {
			listener.enterDiTemplateTypeParameter(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiTemplateTypeParameter) {
			listener.exitDiTemplateTypeParameter(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiTemplateTypeParameter) {
			return visitor.visitDiTemplateTypeParameter(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiTemplateValueParameterContext extends ParserRuleContext {
	public DITemplateValueParameter(): TerminalNode { return this.getToken(LLVMIRParser.DITemplateValueParameter, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public diTemplateValueParameterField(): DiTemplateValueParameterFieldContext[];
	public diTemplateValueParameterField(i: number): DiTemplateValueParameterFieldContext;
	public diTemplateValueParameterField(i?: number): DiTemplateValueParameterFieldContext | DiTemplateValueParameterFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiTemplateValueParameterFieldContext);
		} else {
			return this.getRuleContext(i, DiTemplateValueParameterFieldContext);
		}
	}
	public Comma(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.Comma, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diTemplateValueParameter; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiTemplateValueParameter) {
			listener.enterDiTemplateValueParameter(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiTemplateValueParameter) {
			listener.exitDiTemplateValueParameter(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiTemplateValueParameter) {
			return visitor.visitDiTemplateValueParameter(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GenericDiNodeContext extends ParserRuleContext {
	public GenericDINode(): TerminalNode { return this.getToken(LLVMIRParser.GenericDINode, 0); }
	public LParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.LParenthesis, 0); }
	public RParenthesis(): TerminalNode { return this.getToken(LLVMIRParser.RParenthesis, 0); }
	public genericDINodeField(): GenericDINodeFieldContext[];
	public genericDINodeField(i: number): GenericDINodeFieldContext;
	public genericDINodeField(i?: number): GenericDINodeFieldContext | GenericDINodeFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GenericDINodeFieldContext);
		} else {
			return this.getRuleContext(i, GenericDINodeFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_genericDiNode; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGenericDiNode) {
			listener.enterGenericDiNode(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGenericDiNode) {
			listener.exitGenericDiNode(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGenericDiNode) {
			return visitor.visitGenericDiNode(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiTemplateTypeParameterFieldContext extends ParserRuleContext {
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	public defaultedField(): DefaultedFieldContext | undefined {
		return this.tryGetRuleContext(0, DefaultedFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diTemplateTypeParameterField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiTemplateTypeParameterField) {
			listener.enterDiTemplateTypeParameterField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiTemplateTypeParameterField) {
			listener.exitDiTemplateTypeParameterField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiTemplateTypeParameterField) {
			return visitor.visitDiTemplateTypeParameterField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCompileUnitFieldContext extends ParserRuleContext {
	public languageField(): LanguageFieldContext | undefined {
		return this.tryGetRuleContext(0, LanguageFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public producerField(): ProducerFieldContext | undefined {
		return this.tryGetRuleContext(0, ProducerFieldContext);
	}
	public isOptimizedField(): IsOptimizedFieldContext | undefined {
		return this.tryGetRuleContext(0, IsOptimizedFieldContext);
	}
	public flagsStringField(): FlagsStringFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsStringFieldContext);
	}
	public runtimeVersionField(): RuntimeVersionFieldContext | undefined {
		return this.tryGetRuleContext(0, RuntimeVersionFieldContext);
	}
	public splitDebugFilenameField(): SplitDebugFilenameFieldContext | undefined {
		return this.tryGetRuleContext(0, SplitDebugFilenameFieldContext);
	}
	public emissionKindField(): EmissionKindFieldContext | undefined {
		return this.tryGetRuleContext(0, EmissionKindFieldContext);
	}
	public enumsField(): EnumsFieldContext | undefined {
		return this.tryGetRuleContext(0, EnumsFieldContext);
	}
	public retainedTypesField(): RetainedTypesFieldContext | undefined {
		return this.tryGetRuleContext(0, RetainedTypesFieldContext);
	}
	public globalsField(): GlobalsFieldContext | undefined {
		return this.tryGetRuleContext(0, GlobalsFieldContext);
	}
	public importsField(): ImportsFieldContext | undefined {
		return this.tryGetRuleContext(0, ImportsFieldContext);
	}
	public macrosField(): MacrosFieldContext | undefined {
		return this.tryGetRuleContext(0, MacrosFieldContext);
	}
	public dwoIdField(): DwoIdFieldContext | undefined {
		return this.tryGetRuleContext(0, DwoIdFieldContext);
	}
	public splitDebugInliningField(): SplitDebugInliningFieldContext | undefined {
		return this.tryGetRuleContext(0, SplitDebugInliningFieldContext);
	}
	public debugInfoForProfilingField(): DebugInfoForProfilingFieldContext | undefined {
		return this.tryGetRuleContext(0, DebugInfoForProfilingFieldContext);
	}
	public nameTableKindField(): NameTableKindFieldContext | undefined {
		return this.tryGetRuleContext(0, NameTableKindFieldContext);
	}
	public rangesBaseAddressField(): RangesBaseAddressFieldContext | undefined {
		return this.tryGetRuleContext(0, RangesBaseAddressFieldContext);
	}
	public sysrootField(): SysrootFieldContext | undefined {
		return this.tryGetRuleContext(0, SysrootFieldContext);
	}
	public sdkField(): SdkFieldContext | undefined {
		return this.tryGetRuleContext(0, SdkFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCompileUnitField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCompileUnitField) {
			listener.enterDiCompileUnitField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCompileUnitField) {
			listener.exitDiCompileUnitField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCompileUnitField) {
			return visitor.visitDiCompileUnitField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiCommonBlockFieldContext extends ParserRuleContext {
	public scopeField(): ScopeFieldContext | undefined {
		return this.tryGetRuleContext(0, ScopeFieldContext);
	}
	public declarationField(): DeclarationFieldContext | undefined {
		return this.tryGetRuleContext(0, DeclarationFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public fileField(): FileFieldContext | undefined {
		return this.tryGetRuleContext(0, FileFieldContext);
	}
	public lineField(): LineFieldContext | undefined {
		return this.tryGetRuleContext(0, LineFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diCommonBlockField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiCommonBlockField) {
			listener.enterDiCommonBlockField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiCommonBlockField) {
			listener.exitDiCommonBlockField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiCommonBlockField) {
			return visitor.visitDiCommonBlockField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiBasicTypeFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public sizeField(): SizeFieldContext | undefined {
		return this.tryGetRuleContext(0, SizeFieldContext);
	}
	public alignField(): AlignFieldContext | undefined {
		return this.tryGetRuleContext(0, AlignFieldContext);
	}
	public encodingField(): EncodingFieldContext | undefined {
		return this.tryGetRuleContext(0, EncodingFieldContext);
	}
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diBasicTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiBasicTypeField) {
			listener.enterDiBasicTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiBasicTypeField) {
			listener.exitDiBasicTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiBasicTypeField) {
			return visitor.visitDiBasicTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GenericDINodeFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public headerField(): HeaderFieldContext | undefined {
		return this.tryGetRuleContext(0, HeaderFieldContext);
	}
	public operandsField(): OperandsFieldContext | undefined {
		return this.tryGetRuleContext(0, OperandsFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_genericDINodeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGenericDINodeField) {
			listener.enterGenericDINodeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGenericDINodeField) {
			listener.exitGenericDINodeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGenericDINodeField) {
			return visitor.visitGenericDINodeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TagFieldContext extends ParserRuleContext {
	public KwTagLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTagLabel, 0); }
	public DwarfTag(): TerminalNode { return this.getToken(LLVMIRParser.DwarfTag, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_tagField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTagField) {
			listener.enterTagField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTagField) {
			listener.exitTagField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTagField) {
			return visitor.visitTagField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class HeaderFieldContext extends ParserRuleContext {
	public KwHeaderLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwHeaderLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_headerField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterHeaderField) {
			listener.enterHeaderField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitHeaderField) {
			listener.exitHeaderField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitHeaderField) {
			return visitor.visitHeaderField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OperandsFieldContext extends ParserRuleContext {
	public KwOperandsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwOperandsLabel, 0); }
	public LBraces(): TerminalNode { return this.getToken(LLVMIRParser.LBraces, 0); }
	public RBraces(): TerminalNode { return this.getToken(LLVMIRParser.RBraces, 0); }
	public mdField(): MdFieldContext[];
	public mdField(i: number): MdFieldContext;
	public mdField(i?: number): MdFieldContext | MdFieldContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MdFieldContext);
		} else {
			return this.getRuleContext(i, MdFieldContext);
		}
	}
	public Comma(): TerminalNode[];
	public Comma(i: number): TerminalNode;
	public Comma(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Comma);
		} else {
			return this.getToken(LLVMIRParser.Comma, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_operandsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOperandsField) {
			listener.enterOperandsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOperandsField) {
			listener.exitOperandsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOperandsField) {
			return visitor.visitOperandsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiTemplateValueParameterFieldContext extends ParserRuleContext {
	public tagField(): TagFieldContext | undefined {
		return this.tryGetRuleContext(0, TagFieldContext);
	}
	public nameField(): NameFieldContext | undefined {
		return this.tryGetRuleContext(0, NameFieldContext);
	}
	public typeField(): TypeFieldContext | undefined {
		return this.tryGetRuleContext(0, TypeFieldContext);
	}
	public defaultedField(): DefaultedFieldContext | undefined {
		return this.tryGetRuleContext(0, DefaultedFieldContext);
	}
	public valueField(): ValueFieldContext | undefined {
		return this.tryGetRuleContext(0, ValueFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diTemplateValueParameterField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiTemplateValueParameterField) {
			listener.enterDiTemplateValueParameterField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiTemplateValueParameterField) {
			listener.exitDiTemplateValueParameterField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiTemplateValueParameterField) {
			return visitor.visitDiTemplateValueParameterField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NameFieldContext extends ParserRuleContext {
	public KwNameLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwNameLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_nameField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNameField) {
			listener.enterNameField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNameField) {
			listener.exitNameField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNameField) {
			return visitor.visitNameField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeFieldContext extends ParserRuleContext {
	public KwTypeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTypeLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypeField) {
			listener.enterTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypeField) {
			listener.exitTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypeField) {
			return visitor.visitTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DefaultedFieldContext extends ParserRuleContext {
	public KwDefaultedLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDefaultedLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_defaultedField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDefaultedField) {
			listener.enterDefaultedField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDefaultedField) {
			listener.exitDefaultedField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDefaultedField) {
			return visitor.visitDefaultedField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueFieldContext extends ParserRuleContext {
	public KwValueLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwValueLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_valueField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValueField) {
			listener.enterValueField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValueField) {
			listener.exitValueField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValueField) {
			return visitor.visitValueField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MdFieldContext extends ParserRuleContext {
	public nullConst(): NullConstContext | undefined {
		return this.tryGetRuleContext(0, NullConstContext);
	}
	public metadata(): MetadataContext | undefined {
		return this.tryGetRuleContext(0, MetadataContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_mdField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMdField) {
			listener.enterMdField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMdField) {
			listener.exitMdField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMdField) {
			return visitor.visitMdField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiSubroutineTypeFieldContext extends ParserRuleContext {
	public flagsField(): FlagsFieldContext | undefined {
		return this.tryGetRuleContext(0, FlagsFieldContext);
	}
	public ccField(): CcFieldContext | undefined {
		return this.tryGetRuleContext(0, CcFieldContext);
	}
	public typesField(): TypesFieldContext | undefined {
		return this.tryGetRuleContext(0, TypesFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diSubroutineTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiSubroutineTypeField) {
			listener.enterDiSubroutineTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiSubroutineTypeField) {
			listener.exitDiSubroutineTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiSubroutineTypeField) {
			return visitor.visitDiSubroutineTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FlagsFieldContext extends ParserRuleContext {
	public KwFlagsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwFlagsLabel, 0); }
	public diFlags(): DiFlagsContext {
		return this.getRuleContext(0, DiFlagsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_flagsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFlagsField) {
			listener.enterFlagsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFlagsField) {
			listener.exitFlagsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFlagsField) {
			return visitor.visitFlagsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiFlagsContext extends ParserRuleContext {
	public DiFlag(): TerminalNode[];
	public DiFlag(i: number): TerminalNode;
	public DiFlag(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.DiFlag);
		} else {
			return this.getToken(LLVMIRParser.DiFlag, i);
		}
	}
	public Pipe(): TerminalNode[];
	public Pipe(i: number): TerminalNode;
	public Pipe(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Pipe);
		} else {
			return this.getToken(LLVMIRParser.Pipe, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_diFlags; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiFlags) {
			listener.enterDiFlags(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiFlags) {
			listener.exitDiFlags(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiFlags) {
			return visitor.visitDiFlags(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CcFieldContext extends ParserRuleContext {
	public KwCcLabel(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwCcLabel, 0); }
	public DwarfCc(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.DwarfCc, 0); }
	public IntLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_ccField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCcField) {
			listener.enterCcField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCcField) {
			listener.exitCcField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCcField) {
			return visitor.visitCcField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AlignFieldContext extends ParserRuleContext {
	public KwAlignLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwAlignLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_alignField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAlignField) {
			listener.enterAlignField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAlignField) {
			listener.exitAlignField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAlignField) {
			return visitor.visitAlignField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AllocatedFieldContext extends ParserRuleContext {
	public KwAllocatedLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwAllocatedLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_allocatedField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAllocatedField) {
			listener.enterAllocatedField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAllocatedField) {
			listener.exitAllocatedField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAllocatedField) {
			return visitor.visitAllocatedField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AnnotationsFieldContext extends ParserRuleContext {
	public KwAnnotationsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwAnnotationsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_annotationsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAnnotationsField) {
			listener.enterAnnotationsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAnnotationsField) {
			listener.exitAnnotationsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAnnotationsField) {
			return visitor.visitAnnotationsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ArgFieldContext extends ParserRuleContext {
	public KwArgLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwArgLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_argField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterArgField) {
			listener.enterArgField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitArgField) {
			listener.exitArgField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitArgField) {
			return visitor.visitArgField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AssociatedFieldContext extends ParserRuleContext {
	public KwAssociatedLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwAssociatedLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_associatedField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAssociatedField) {
			listener.enterAssociatedField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAssociatedField) {
			listener.exitAssociatedField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAssociatedField) {
			return visitor.visitAssociatedField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class AttributesFieldContext extends ParserRuleContext {
	public KwAttributesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwAttributesLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_attributesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterAttributesField) {
			listener.enterAttributesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitAttributesField) {
			listener.exitAttributesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitAttributesField) {
			return visitor.visitAttributesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class BaseTypeFieldContext extends ParserRuleContext {
	public KwBaseTypeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwBaseTypeLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_baseTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterBaseTypeField) {
			listener.enterBaseTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitBaseTypeField) {
			listener.exitBaseTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitBaseTypeField) {
			return visitor.visitBaseTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ChecksumFieldContext extends ParserRuleContext {
	public KwChecksumLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwChecksumLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_checksumField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterChecksumField) {
			listener.enterChecksumField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitChecksumField) {
			listener.exitChecksumField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitChecksumField) {
			return visitor.visitChecksumField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ChecksumkindFieldContext extends ParserRuleContext {
	public KwChecksumkindLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwChecksumkindLabel, 0); }
	public ChecksumKind(): TerminalNode { return this.getToken(LLVMIRParser.ChecksumKind, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_checksumkindField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterChecksumkindField) {
			listener.enterChecksumkindField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitChecksumkindField) {
			listener.exitChecksumkindField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitChecksumkindField) {
			return visitor.visitChecksumkindField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ColumnFieldContext extends ParserRuleContext {
	public KwColumnLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwColumnLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_columnField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterColumnField) {
			listener.enterColumnField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitColumnField) {
			listener.exitColumnField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitColumnField) {
			return visitor.visitColumnField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ConfigMacrosFieldContext extends ParserRuleContext {
	public KwConfigMacrosLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwConfigMacrosLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_configMacrosField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterConfigMacrosField) {
			listener.enterConfigMacrosField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitConfigMacrosField) {
			listener.exitConfigMacrosField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitConfigMacrosField) {
			return visitor.visitConfigMacrosField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ContainingTypeFieldContext extends ParserRuleContext {
	public KwContainingTypeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwContainingTypeLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_containingTypeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterContainingTypeField) {
			listener.enterContainingTypeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitContainingTypeField) {
			listener.exitContainingTypeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitContainingTypeField) {
			return visitor.visitContainingTypeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class CountFieldContext extends ParserRuleContext {
	public KwCountLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwCountLabel, 0); }
	public mdFieldOrInt(): MdFieldOrIntContext {
		return this.getRuleContext(0, MdFieldOrIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_countField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterCountField) {
			listener.enterCountField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitCountField) {
			listener.exitCountField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitCountField) {
			return visitor.visitCountField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DebugInfoForProfilingFieldContext extends ParserRuleContext {
	public KwDebugInfoForProfilingLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDebugInfoForProfilingLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_debugInfoForProfilingField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDebugInfoForProfilingField) {
			listener.enterDebugInfoForProfilingField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDebugInfoForProfilingField) {
			listener.exitDebugInfoForProfilingField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDebugInfoForProfilingField) {
			return visitor.visitDebugInfoForProfilingField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DeclarationFieldContext extends ParserRuleContext {
	public KwDeclarationLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDeclarationLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_declarationField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDeclarationField) {
			listener.enterDeclarationField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDeclarationField) {
			listener.exitDeclarationField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDeclarationField) {
			return visitor.visitDeclarationField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DirectoryFieldContext extends ParserRuleContext {
	public KwDirectoryLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDirectoryLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_directoryField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDirectoryField) {
			listener.enterDirectoryField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDirectoryField) {
			listener.exitDirectoryField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDirectoryField) {
			return visitor.visitDirectoryField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiscriminatorFieldContext extends ParserRuleContext {
	public KwDiscriminatorLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDiscriminatorLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_discriminatorField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiscriminatorField) {
			listener.enterDiscriminatorField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiscriminatorField) {
			listener.exitDiscriminatorField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiscriminatorField) {
			return visitor.visitDiscriminatorField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DataLocationFieldContext extends ParserRuleContext {
	public KwDataLocationLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDataLocationLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dataLocationField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDataLocationField) {
			listener.enterDataLocationField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDataLocationField) {
			listener.exitDataLocationField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDataLocationField) {
			return visitor.visitDataLocationField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DiscriminatorIntFieldContext extends ParserRuleContext {
	public KwDiscriminatorLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDiscriminatorLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_discriminatorIntField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDiscriminatorIntField) {
			listener.enterDiscriminatorIntField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDiscriminatorIntField) {
			listener.exitDiscriminatorIntField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDiscriminatorIntField) {
			return visitor.visitDiscriminatorIntField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DwarfAddressSpaceFieldContext extends ParserRuleContext {
	public KwDwarfAddressSpaceLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDwarfAddressSpaceLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dwarfAddressSpaceField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDwarfAddressSpaceField) {
			listener.enterDwarfAddressSpaceField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDwarfAddressSpaceField) {
			listener.exitDwarfAddressSpaceField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDwarfAddressSpaceField) {
			return visitor.visitDwarfAddressSpaceField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class DwoIdFieldContext extends ParserRuleContext {
	public KwDwoIdLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwDwoIdLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_dwoIdField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterDwoIdField) {
			listener.enterDwoIdField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitDwoIdField) {
			listener.exitDwoIdField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitDwoIdField) {
			return visitor.visitDwoIdField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ElementsFieldContext extends ParserRuleContext {
	public KwElementsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwElementsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_elementsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterElementsField) {
			listener.enterElementsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitElementsField) {
			listener.exitElementsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitElementsField) {
			return visitor.visitElementsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class EmissionKindFieldContext extends ParserRuleContext {
	public _emissionKind!: Token;
	public KwEmissionKindLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwEmissionKindLabel, 0); }
	public KwDebugDirectivesOnly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDebugDirectivesOnly, 0); }
	public KwFullDebug(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwFullDebug, 0); }
	public KwLineTablesOnly(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwLineTablesOnly, 0); }
	public KwNoDebug(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNoDebug, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_emissionKindField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterEmissionKindField) {
			listener.enterEmissionKindField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitEmissionKindField) {
			listener.exitEmissionKindField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitEmissionKindField) {
			return visitor.visitEmissionKindField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class EncodingFieldContext extends ParserRuleContext {
	public KwEncodingLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwEncodingLabel, 0); }
	public IntLit(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.IntLit, 0); }
	public DwarfAttEncoding(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.DwarfAttEncoding, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_encodingField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterEncodingField) {
			listener.enterEncodingField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitEncodingField) {
			listener.exitEncodingField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitEncodingField) {
			return visitor.visitEncodingField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class EntityFieldContext extends ParserRuleContext {
	public KwEntityLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwEntityLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_entityField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterEntityField) {
			listener.enterEntityField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitEntityField) {
			listener.exitEntityField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitEntityField) {
			return visitor.visitEntityField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class EnumsFieldContext extends ParserRuleContext {
	public KwEnumsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwEnumsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_enumsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterEnumsField) {
			listener.enterEnumsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitEnumsField) {
			listener.exitEnumsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitEnumsField) {
			return visitor.visitEnumsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExportSymbolsFieldContext extends ParserRuleContext {
	public KwExportSymbolsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwExportSymbolsLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_exportSymbolsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExportSymbolsField) {
			listener.enterExportSymbolsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExportSymbolsField) {
			listener.exitExportSymbolsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExportSymbolsField) {
			return visitor.visitExportSymbolsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExprFieldContext extends ParserRuleContext {
	public KwExprLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwExprLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_exprField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExprField) {
			listener.enterExprField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExprField) {
			listener.exitExprField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExprField) {
			return visitor.visitExprField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ExtraDataFieldContext extends ParserRuleContext {
	public KwExtraDataLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwExtraDataLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_extraDataField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterExtraDataField) {
			listener.enterExtraDataField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitExtraDataField) {
			listener.exitExtraDataField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitExtraDataField) {
			return visitor.visitExtraDataField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FileFieldContext extends ParserRuleContext {
	public KwFileLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwFileLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_fileField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFileField) {
			listener.enterFileField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFileField) {
			listener.exitFileField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFileField) {
			return visitor.visitFileField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FilenameFieldContext extends ParserRuleContext {
	public KwFilenameLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwFilenameLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_filenameField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFilenameField) {
			listener.enterFilenameField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFilenameField) {
			listener.exitFilenameField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFilenameField) {
			return visitor.visitFilenameField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class FlagsStringFieldContext extends ParserRuleContext {
	public KwFlagsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwFlagsLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_flagsStringField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterFlagsStringField) {
			listener.enterFlagsStringField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitFlagsStringField) {
			listener.exitFlagsStringField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitFlagsStringField) {
			return visitor.visitFlagsStringField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GetterFieldContext extends ParserRuleContext {
	public KwGetterLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwGetterLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_getterField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGetterField) {
			listener.enterGetterField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGetterField) {
			listener.exitGetterField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGetterField) {
			return visitor.visitGetterField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class GlobalsFieldContext extends ParserRuleContext {
	public KwGlobalsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwGlobalsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_globalsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterGlobalsField) {
			listener.enterGlobalsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitGlobalsField) {
			listener.exitGlobalsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitGlobalsField) {
			return visitor.visitGlobalsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IdentifierFieldContext extends ParserRuleContext {
	public KwIdentifierLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIdentifierLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_identifierField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIdentifierField) {
			listener.enterIdentifierField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIdentifierField) {
			listener.exitIdentifierField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIdentifierField) {
			return visitor.visitIdentifierField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ImportsFieldContext extends ParserRuleContext {
	public KwImportsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwImportsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_importsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterImportsField) {
			listener.enterImportsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitImportsField) {
			listener.exitImportsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitImportsField) {
			return visitor.visitImportsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IncludePathFieldContext extends ParserRuleContext {
	public KwIncludePathLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIncludePathLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_includePathField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIncludePathField) {
			listener.enterIncludePathField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIncludePathField) {
			listener.exitIncludePathField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIncludePathField) {
			return visitor.visitIncludePathField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class InlinedAtFieldContext extends ParserRuleContext {
	public KwInlinedAtLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwInlinedAtLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_inlinedAtField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterInlinedAtField) {
			listener.enterInlinedAtField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitInlinedAtField) {
			listener.exitInlinedAtField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitInlinedAtField) {
			return visitor.visitInlinedAtField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsDeclFieldContext extends ParserRuleContext {
	public KwIsDeclLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsDeclLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isDeclField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsDeclField) {
			listener.enterIsDeclField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsDeclField) {
			listener.exitIsDeclField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsDeclField) {
			return visitor.visitIsDeclField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsDefinitionFieldContext extends ParserRuleContext {
	public KwIsDefinitionLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsDefinitionLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isDefinitionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsDefinitionField) {
			listener.enterIsDefinitionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsDefinitionField) {
			listener.exitIsDefinitionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsDefinitionField) {
			return visitor.visitIsDefinitionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsImplicitCodeFieldContext extends ParserRuleContext {
	public KwIsImplicitCodeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsImplicitCodeLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isImplicitCodeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsImplicitCodeField) {
			listener.enterIsImplicitCodeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsImplicitCodeField) {
			listener.exitIsImplicitCodeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsImplicitCodeField) {
			return visitor.visitIsImplicitCodeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsLocalFieldContext extends ParserRuleContext {
	public KwIsLocalLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsLocalLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isLocalField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsLocalField) {
			listener.enterIsLocalField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsLocalField) {
			listener.exitIsLocalField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsLocalField) {
			return visitor.visitIsLocalField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsOptimizedFieldContext extends ParserRuleContext {
	public KwIsOptimizedLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsOptimizedLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isOptimizedField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsOptimizedField) {
			listener.enterIsOptimizedField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsOptimizedField) {
			listener.exitIsOptimizedField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsOptimizedField) {
			return visitor.visitIsOptimizedField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class IsUnsignedFieldContext extends ParserRuleContext {
	public KwIsUnsignedLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwIsUnsignedLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_isUnsignedField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterIsUnsignedField) {
			listener.enterIsUnsignedField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitIsUnsignedField) {
			listener.exitIsUnsignedField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitIsUnsignedField) {
			return visitor.visitIsUnsignedField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ApiNotesFieldContext extends ParserRuleContext {
	public KwApinotesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwApinotesLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_apiNotesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterApiNotesField) {
			listener.enterApiNotesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitApiNotesField) {
			listener.exitApiNotesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitApiNotesField) {
			return visitor.visitApiNotesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LanguageFieldContext extends ParserRuleContext {
	public KwLanguageLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLanguageLabel, 0); }
	public DwarfLang(): TerminalNode { return this.getToken(LLVMIRParser.DwarfLang, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_languageField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLanguageField) {
			listener.enterLanguageField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLanguageField) {
			listener.exitLanguageField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLanguageField) {
			return visitor.visitLanguageField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LineFieldContext extends ParserRuleContext {
	public KwLineLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLineLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_lineField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLineField) {
			listener.enterLineField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLineField) {
			listener.exitLineField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLineField) {
			return visitor.visitLineField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LinkageNameFieldContext extends ParserRuleContext {
	public KwLinkageNameLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLinkageNameLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_linkageNameField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLinkageNameField) {
			listener.enterLinkageNameField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLinkageNameField) {
			listener.exitLinkageNameField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLinkageNameField) {
			return visitor.visitLinkageNameField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class LowerBoundFieldContext extends ParserRuleContext {
	public KwLowerBoundLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwLowerBoundLabel, 0); }
	public mdFieldOrInt(): MdFieldOrIntContext {
		return this.getRuleContext(0, MdFieldOrIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_lowerBoundField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterLowerBoundField) {
			listener.enterLowerBoundField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitLowerBoundField) {
			listener.exitLowerBoundField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitLowerBoundField) {
			return visitor.visitLowerBoundField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class MacrosFieldContext extends ParserRuleContext {
	public KwMacrosLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwMacrosLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_macrosField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterMacrosField) {
			listener.enterMacrosField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitMacrosField) {
			listener.exitMacrosField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitMacrosField) {
			return visitor.visitMacrosField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NameTableKindFieldContext extends ParserRuleContext {
	public _nameTableKind!: Token;
	public KwNameTableKindLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwNameTableKindLabel, 0); }
	public KwGNU(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwGNU, 0); }
	public KwNone(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwNone, 0); }
	public KwDefault(): TerminalNode | undefined { return this.tryGetToken(LLVMIRParser.KwDefault, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_nameTableKindField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNameTableKindField) {
			listener.enterNameTableKindField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNameTableKindField) {
			listener.exitNameTableKindField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNameTableKindField) {
			return visitor.visitNameTableKindField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class NodesFieldContext extends ParserRuleContext {
	public KwNodesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwNodesLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_nodesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterNodesField) {
			listener.enterNodesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitNodesField) {
			listener.exitNodesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitNodesField) {
			return visitor.visitNodesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class OffsetFieldContext extends ParserRuleContext {
	public KwOffsetLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwOffsetLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_offsetField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterOffsetField) {
			listener.enterOffsetField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitOffsetField) {
			listener.exitOffsetField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitOffsetField) {
			return visitor.visitOffsetField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ProducerFieldContext extends ParserRuleContext {
	public KwProducerLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwProducerLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_producerField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterProducerField) {
			listener.enterProducerField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitProducerField) {
			listener.exitProducerField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitProducerField) {
			return visitor.visitProducerField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RangesBaseAddressFieldContext extends ParserRuleContext {
	public KwRangesBaseAddressLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRangesBaseAddressLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_rangesBaseAddressField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRangesBaseAddressField) {
			listener.enterRangesBaseAddressField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRangesBaseAddressField) {
			listener.exitRangesBaseAddressField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRangesBaseAddressField) {
			return visitor.visitRangesBaseAddressField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RankFieldContext extends ParserRuleContext {
	public KwRankLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRankLabel, 0); }
	public mdFieldOrInt(): MdFieldOrIntContext {
		return this.getRuleContext(0, MdFieldOrIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_rankField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRankField) {
			listener.enterRankField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRankField) {
			listener.exitRankField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRankField) {
			return visitor.visitRankField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RetainedNodesFieldContext extends ParserRuleContext {
	public KwRetainedNodesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRetainedNodesLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_retainedNodesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRetainedNodesField) {
			listener.enterRetainedNodesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRetainedNodesField) {
			listener.exitRetainedNodesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRetainedNodesField) {
			return visitor.visitRetainedNodesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RetainedTypesFieldContext extends ParserRuleContext {
	public KwRetainedTypesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRetainedTypesLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_retainedTypesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRetainedTypesField) {
			listener.enterRetainedTypesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRetainedTypesField) {
			listener.exitRetainedTypesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRetainedTypesField) {
			return visitor.visitRetainedTypesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RuntimeLangFieldContext extends ParserRuleContext {
	public KwRuntimeLangLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRuntimeLangLabel, 0); }
	public DwarfLang(): TerminalNode { return this.getToken(LLVMIRParser.DwarfLang, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_runtimeLangField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRuntimeLangField) {
			listener.enterRuntimeLangField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRuntimeLangField) {
			listener.exitRuntimeLangField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRuntimeLangField) {
			return visitor.visitRuntimeLangField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class RuntimeVersionFieldContext extends ParserRuleContext {
	public KwRuntimeVersionLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwRuntimeVersionLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_runtimeVersionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterRuntimeVersionField) {
			listener.enterRuntimeVersionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitRuntimeVersionField) {
			listener.exitRuntimeVersionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitRuntimeVersionField) {
			return visitor.visitRuntimeVersionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ScopeFieldContext extends ParserRuleContext {
	public KwScopeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwScopeLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_scopeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterScopeField) {
			listener.enterScopeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitScopeField) {
			listener.exitScopeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitScopeField) {
			return visitor.visitScopeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ScopeLineFieldContext extends ParserRuleContext {
	public KwScopeLineLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwScopeLineLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_scopeLineField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterScopeLineField) {
			listener.enterScopeLineField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitScopeLineField) {
			listener.exitScopeLineField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitScopeLineField) {
			return visitor.visitScopeLineField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SdkFieldContext extends ParserRuleContext {
	public KwSdkLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSdkLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sdkField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSdkField) {
			listener.enterSdkField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSdkField) {
			listener.exitSdkField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSdkField) {
			return visitor.visitSdkField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SetterFieldContext extends ParserRuleContext {
	public KwSetterLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSetterLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_setterField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSetterField) {
			listener.enterSetterField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSetterField) {
			listener.exitSetterField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSetterField) {
			return visitor.visitSetterField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SizeFieldContext extends ParserRuleContext {
	public KwSizeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSizeLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sizeField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSizeField) {
			listener.enterSizeField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSizeField) {
			listener.exitSizeField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSizeField) {
			return visitor.visitSizeField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SourceFieldContext extends ParserRuleContext {
	public KwSourceLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSourceLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sourceField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSourceField) {
			listener.enterSourceField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSourceField) {
			listener.exitSourceField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSourceField) {
			return visitor.visitSourceField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SpFlagsFieldContext extends ParserRuleContext {
	public KwSpFlagsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSpFlagsLabel, 0); }
	public diSPFlag(): DiSPFlagContext[];
	public diSPFlag(i: number): DiSPFlagContext;
	public diSPFlag(i?: number): DiSPFlagContext | DiSPFlagContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiSPFlagContext);
		} else {
			return this.getRuleContext(i, DiSPFlagContext);
		}
	}
	public Pipe(): TerminalNode[];
	public Pipe(i: number): TerminalNode;
	public Pipe(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(LLVMIRParser.Pipe);
		} else {
			return this.getToken(LLVMIRParser.Pipe, i);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_spFlagsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSpFlagsField) {
			listener.enterSpFlagsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSpFlagsField) {
			listener.exitSpFlagsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSpFlagsField) {
			return visitor.visitSpFlagsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SplitDebugFilenameFieldContext extends ParserRuleContext {
	public KwSplitDebugFilenameLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSplitDebugFilenameLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_splitDebugFilenameField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSplitDebugFilenameField) {
			listener.enterSplitDebugFilenameField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSplitDebugFilenameField) {
			listener.exitSplitDebugFilenameField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSplitDebugFilenameField) {
			return visitor.visitSplitDebugFilenameField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SplitDebugInliningFieldContext extends ParserRuleContext {
	public KwSplitDebugInliningLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSplitDebugInliningLabel, 0); }
	public boolConst(): BoolConstContext {
		return this.getRuleContext(0, BoolConstContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_splitDebugInliningField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSplitDebugInliningField) {
			listener.enterSplitDebugInliningField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSplitDebugInliningField) {
			listener.exitSplitDebugInliningField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSplitDebugInliningField) {
			return visitor.visitSplitDebugInliningField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StrideFieldContext extends ParserRuleContext {
	public KwStrideLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwStrideLabel, 0); }
	public mdFieldOrInt(): MdFieldOrIntContext {
		return this.getRuleContext(0, MdFieldOrIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_strideField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStrideField) {
			listener.enterStrideField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStrideField) {
			listener.exitStrideField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStrideField) {
			return visitor.visitStrideField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StringLengthFieldContext extends ParserRuleContext {
	public KwStringLengthLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwStringLengthLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_stringLengthField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStringLengthField) {
			listener.enterStringLengthField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStringLengthField) {
			listener.exitStringLengthField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStringLengthField) {
			return visitor.visitStringLengthField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StringLengthExpressionFieldContext extends ParserRuleContext {
	public KwStringLengthExpressionLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwStringLengthExpressionLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_stringLengthExpressionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStringLengthExpressionField) {
			listener.enterStringLengthExpressionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStringLengthExpressionField) {
			listener.exitStringLengthExpressionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStringLengthExpressionField) {
			return visitor.visitStringLengthExpressionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class StringLocationExpressionFieldContext extends ParserRuleContext {
	public KwStringLocationExpressionLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwStringLocationExpressionLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_stringLocationExpressionField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterStringLocationExpressionField) {
			listener.enterStringLocationExpressionField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitStringLocationExpressionField) {
			listener.exitStringLocationExpressionField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitStringLocationExpressionField) {
			return visitor.visitStringLocationExpressionField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class SysrootFieldContext extends ParserRuleContext {
	public KwSysrootLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwSysrootLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_sysrootField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterSysrootField) {
			listener.enterSysrootField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitSysrootField) {
			listener.exitSysrootField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitSysrootField) {
			return visitor.visitSysrootField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TargetFuncNameFieldContext extends ParserRuleContext {
	public KwTargetFuncNameLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTargetFuncNameLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_targetFuncNameField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTargetFuncNameField) {
			listener.enterTargetFuncNameField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTargetFuncNameField) {
			listener.exitTargetFuncNameField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTargetFuncNameField) {
			return visitor.visitTargetFuncNameField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TemplateParamsFieldContext extends ParserRuleContext {
	public KwTemplateParamsLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTemplateParamsLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_templateParamsField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTemplateParamsField) {
			listener.enterTemplateParamsField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTemplateParamsField) {
			listener.exitTemplateParamsField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTemplateParamsField) {
			return visitor.visitTemplateParamsField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ThisAdjustmentFieldContext extends ParserRuleContext {
	public KwThisAdjustmentLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwThisAdjustmentLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_thisAdjustmentField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterThisAdjustmentField) {
			listener.enterThisAdjustmentField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitThisAdjustmentField) {
			listener.exitThisAdjustmentField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitThisAdjustmentField) {
			return visitor.visitThisAdjustmentField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ThrownTypesFieldContext extends ParserRuleContext {
	public KwThrownTypesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwThrownTypesLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_thrownTypesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterThrownTypesField) {
			listener.enterThrownTypesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitThrownTypesField) {
			listener.exitThrownTypesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitThrownTypesField) {
			return visitor.visitThrownTypesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypeMacinfoFieldContext extends ParserRuleContext {
	public KwTypeLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTypeLabel, 0); }
	public DwarfMacinfo(): TerminalNode { return this.getToken(LLVMIRParser.DwarfMacinfo, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typeMacinfoField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypeMacinfoField) {
			listener.enterTypeMacinfoField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypeMacinfoField) {
			listener.exitTypeMacinfoField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypeMacinfoField) {
			return visitor.visitTypeMacinfoField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class TypesFieldContext extends ParserRuleContext {
	public KwTypesLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwTypesLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_typesField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterTypesField) {
			listener.enterTypesField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitTypesField) {
			listener.exitTypesField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitTypesField) {
			return visitor.visitTypesField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UnitFieldContext extends ParserRuleContext {
	public KwUnitLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwUnitLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_unitField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUnitField) {
			listener.enterUnitField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUnitField) {
			listener.exitUnitField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUnitField) {
			return visitor.visitUnitField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class UpperBoundFieldContext extends ParserRuleContext {
	public KwUpperBoundLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwUpperBoundLabel, 0); }
	public mdFieldOrInt(): MdFieldOrIntContext {
		return this.getRuleContext(0, MdFieldOrIntContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_upperBoundField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterUpperBoundField) {
			listener.enterUpperBoundField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitUpperBoundField) {
			listener.exitUpperBoundField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitUpperBoundField) {
			return visitor.visitUpperBoundField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueIntFieldContext extends ParserRuleContext {
	public KwValueLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwValueLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_valueIntField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValueIntField) {
			listener.enterValueIntField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValueIntField) {
			listener.exitValueIntField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValueIntField) {
			return visitor.visitValueIntField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class ValueStringFieldContext extends ParserRuleContext {
	public KwValueLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwValueLabel, 0); }
	public StringLit(): TerminalNode { return this.getToken(LLVMIRParser.StringLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_valueStringField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterValueStringField) {
			listener.enterValueStringField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitValueStringField) {
			listener.exitValueStringField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitValueStringField) {
			return visitor.visitValueStringField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VarFieldContext extends ParserRuleContext {
	public KwVarLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwVarLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_varField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVarField) {
			listener.enterVarField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVarField) {
			listener.exitVarField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVarField) {
			return visitor.visitVarField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VirtualIndexFieldContext extends ParserRuleContext {
	public KwVirtualIndexLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwVirtualIndexLabel, 0); }
	public IntLit(): TerminalNode { return this.getToken(LLVMIRParser.IntLit, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_virtualIndexField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVirtualIndexField) {
			listener.enterVirtualIndexField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVirtualIndexField) {
			listener.exitVirtualIndexField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVirtualIndexField) {
			return visitor.visitVirtualIndexField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VirtualityFieldContext extends ParserRuleContext {
	public KwVirtualityLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwVirtualityLabel, 0); }
	public DwarfVirtuality(): TerminalNode { return this.getToken(LLVMIRParser.DwarfVirtuality, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_virtualityField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVirtualityField) {
			listener.enterVirtualityField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVirtualityField) {
			listener.exitVirtualityField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVirtualityField) {
			return visitor.visitVirtualityField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


export class VtableHolderFieldContext extends ParserRuleContext {
	public KwVtableHolderLabel(): TerminalNode { return this.getToken(LLVMIRParser.KwVtableHolderLabel, 0); }
	public mdField(): MdFieldContext {
		return this.getRuleContext(0, MdFieldContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return LLVMIRParser.RULE_vtableHolderField; }
	// @Override
	public enterRule(listener: LLVMIRListener): void {
		if (listener.enterVtableHolderField) {
			listener.enterVtableHolderField(this);
		}
	}
	// @Override
	public exitRule(listener: LLVMIRListener): void {
		if (listener.exitVtableHolderField) {
			listener.exitVtableHolderField(this);
		}
	}
	// @Override
	public accept<Result>(visitor: LLVMIRVisitor<Result>): Result {
		if (visitor.visitVtableHolderField) {
			return visitor.visitVtableHolderField(this);
		} else {
			return visitor.visitChildren(this);
		}
	}
}


